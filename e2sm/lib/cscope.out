cscope 15 $HOME/Desktop/kpimon/e2sm/lib               0000709974
	@AMF-UE-NGAP-ID.c

8 
	~"AMF-UE-NGAP-ID.h
"

11 
	$AMF_UE_NGAP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

14 
vÆue
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
)) {

24 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

26 
td
->
«me
, 
__FILE__
, 
__LINE__
);

30 if((
vÆue
 >= 0 && value <= 1099511627775)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_AMF_UE_NGAP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_CONSTRAINED
, 40, -1, 0, 1099511627775 } ,

47 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_AMF_UE_NGAP_ID_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_AMF_UE_NGAP_ID
 = {

56 &
a¢_OP_INTEGER
,

57 
a¢_DEF_AMF_UE_NGAP_ID_ègs_1
,

58 (
a¢_DEF_AMF_UE_NGAP_ID_ègs_1
)

59 /(
a¢_DEF_AMF_UE_NGAP_ID_ègs_1
[0]),

60 
a¢_DEF_AMF_UE_NGAP_ID_ègs_1
,

61 (
a¢_DEF_AMF_UE_NGAP_ID_ègs_1
)

62 /(
a¢_DEF_AMF_UE_NGAP_ID_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_AMF_UE_NGAP_ID_c⁄°r_1
, 
AMF_UE_NGAP_ID_c⁄°øöt
 },

	@AMFPointer.c

8 
	~"AMFPoöãr.h
"

11 
	$AMFPoöãr_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 6)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_AMFPoöãr_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

47 { 
APC_CONSTRAINED
, 0, 0, 6, 6 } ,

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_AMFPoöãr_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (3 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_AMFPoöãr
 = {

56 &
a¢_OP_BIT_STRING
,

57 
a¢_DEF_AMFPoöãr_ègs_1
,

58 (
a¢_DEF_AMFPoöãr_ègs_1
)

59 /(
a¢_DEF_AMFPoöãr_ègs_1
[0]),

60 
a¢_DEF_AMFPoöãr_ègs_1
,

61 (
a¢_DEF_AMFPoöãr_ègs_1
)

62 /(
a¢_DEF_AMFPoöãr_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_AMFPoöãr_c⁄°r_1
, 
AMFPoöãr_c⁄°øöt
 },

65 &
a¢_SPC_BIT_STRING_•ecs


	@AMFRegionID.c

8 
	~"AMFRegi⁄ID.h
"

11 
	$AMFRegi⁄ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 8)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_AMFRegi⁄ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

47 { 
APC_CONSTRAINED
, 0, 0, 8, 8 } ,

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_AMFRegi⁄ID_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (3 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_AMFRegi⁄ID
 = {

56 &
a¢_OP_BIT_STRING
,

57 
a¢_DEF_AMFRegi⁄ID_ègs_1
,

58 (
a¢_DEF_AMFRegi⁄ID_ègs_1
)

59 /(
a¢_DEF_AMFRegi⁄ID_ègs_1
[0]),

60 
a¢_DEF_AMFRegi⁄ID_ègs_1
,

61 (
a¢_DEF_AMFRegi⁄ID_ègs_1
)

62 /(
a¢_DEF_AMFRegi⁄ID_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_AMFRegi⁄ID_c⁄°r_1
, 
AMFRegi⁄ID_c⁄°øöt
 },

65 &
a¢_SPC_BIT_STRING_•ecs


	@AMFSetID.c

8 
	~"AMFSëID.h
"

11 
	$AMFSëID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 10)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_AMFSëID_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

47 { 
APC_CONSTRAINED
, 0, 0, 10, 10 } ,

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_AMFSëID_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (3 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_AMFSëID
 = {

56 &
a¢_OP_BIT_STRING
,

57 
a¢_DEF_AMFSëID_ègs_1
,

58 (
a¢_DEF_AMFSëID_ègs_1
)

59 /(
a¢_DEF_AMFSëID_ègs_1
[0]),

60 
a¢_DEF_AMFSëID_ègs_1
,

61 (
a¢_DEF_AMFSëID_ègs_1
)

62 /(
a¢_DEF_AMFSëID_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_AMFSëID_c⁄°r_1
, 
AMFSëID_c⁄°øöt
 },

65 &
a¢_SPC_BIT_STRING_•ecs


	@BIT_STRING.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<BIT_STRING.h
>

7 
	~<a¢_öã∫Æ.h
>

12 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_BIT_STRING_ègs
[] = {

13 (
ASN_TAG_CLASS_UNIVERSAL
 | (3 << 2))

15 
a¢_OCTET_STRING_•ecifics_t
 
	ga¢_SPC_BIT_STRING_•ecs
 = {

16 (
BIT_STRING_t
),

17 
off£tof
(
BIT_STRING_t
, 
_a¢_˘x
),

18 
ASN_OSUBV_BIT


20 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_BIT_STRING
 = {

21 
OCTET_STRING_‰ì
,

22 
BIT_STRING_¥öt
,

23 
BIT_STRING_com∑ª
,

24 
OCTET_STRING_decode_bî
,

25 
OCTET_STRING_ícode_dî
,

26 
OCTET_STRING_decode_xî_bö¨y
,

27 
BIT_STRING_ícode_xî
,

28 #ifdef 
ASN_DISABLE_OER_SUPPORT


32 
BIT_STRING_decode_€r
,

33 
BIT_STRING_ícode_€r
,

35 #ifdef 
ASN_DISABLE_PER_SUPPORT


41 
BIT_STRING_decode_u≥r
,

42 
BIT_STRING_ícode_u≥r
,

43 
OCTET_STRING_decode_≠î
,

44 
OCTET_STRING_ícode_≠î
,

46 
BIT_STRING_øndom_fûl
,

49 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_BIT_STRING
 = {

52 &
a¢_OP_BIT_STRING
,

53 
a¢_DEF_BIT_STRING_ègs
,

54 (
a¢_DEF_BIT_STRING_ègs
)

55 / (
a¢_DEF_BIT_STRING_ègs
[0]),

56 
a¢_DEF_BIT_STRING_ègs
,

57 (
a¢_DEF_BIT_STRING_ègs
)

58 / (
a¢_DEF_BIT_STRING_ègs
[0]),

59 { 0, 0, 
BIT_STRING_c⁄°øöt
 },

61 &
a¢_SPC_BIT_STRING_•ecs


68 
	$BIT_STRING_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

69 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

70 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

72 if(
°
 && st->
buf
) {

73 if((
°
->
size
 =0 && st->
bôs_unu£d
)

74 || 
°
->
bôs_unu£d
 < 0 || st->bits_unused > 7) {

75 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

77 
td
->
«me
, 
__FILE__
, 
__LINE__
);

81 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

83 
td
->
«me
, 
__FILE__
, 
__LINE__
);

88 
	}
}

90 c⁄° *
	g_bô_∑âîn
[16] = {

95 
a¢_íc_rvÆ_t


96 
	$BIT_STRING_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

97 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

98 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

99 
a¢_íc_rvÆ_t
 
î
 = {0, 0, 0};

100 
s¸©ch
[128];

101 *
p
 = 
s¸©ch
;

102 *
s˚nd
 = 
s¸©ch
 + ((scratch) - 10);

103 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

104 
xˇn
 = (
Êags
 & 
XER_F_CANONICAL
);

105 
uöt8_t
 *
buf
;

106 
uöt8_t
 *
íd
;

108 if(!
°
 || !°->
buf
)

109 
ASN__ENCODE_FAILED
;

111 
î
.
ícoded
 = 0;

113 
buf
 = 
°
->buf;

114 
íd
 = 
buf
 + 
°
->
size
 - 1;

119 ; 
buf
 < 
íd
; buf++) {

120 
v
 = *
buf
;

121 
∆öe
 = 
xˇn
?0:(((
buf
 - 
°
->buf) % 8) == 0);

122 if(
p
 >
s˚nd
 || 
∆öe
) {

123 
	`ASN__CALLBACK
(
s¸©ch
, 
p
 - scratch);

124 
p
 = 
s¸©ch
;

125 if(
∆öe
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

127 
	`mem˝y
(
p
 + 0, 
_bô_∑âîn
[
v
 >> 4], 4);

128 
	`mem˝y
(
p
 + 4, 
_bô_∑âîn
[
v
 & 0x0f], 4);

129 
p
 += 8;

132 if(!
xˇn
 && ((
buf
 - 
°
->buf) % 8) == 0)

133 
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

134 
	`ASN__CALLBACK
(
s¸©ch
, 
p
 - scratch);

135 
p
 = 
s¸©ch
;

137 if(
buf
 =
íd
) {

138 
v
 = *
buf
;

139 
ubôs
 = 
°
->
bôs_unu£d
;

140 
i
;

141 
i
 = 7; i >
ubôs
; i--)

142 *
p
++ = (
v
 & (1 << 
i
)) ? 0x31 : 0x30;

143 
	`ASN__CALLBACK
(
s¸©ch
, 
p
 - scratch);

146 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
 - 1);

148 
	`ASN__ENCODED_OK
(
î
);

149 
cb_Áûed
:

150 
ASN__ENCODE_FAILED
;

151 
	}
}

158 
	$BIT_STRING_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

159 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

160 c⁄° * c⁄° 
h2c
 = "0123456789ABCDEF";

161 
s¸©ch
[64];

162 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

163 
uöt8_t
 *
buf
;

164 
uöt8_t
 *
íd
;

165 *
p
 = 
s¸©ch
;

167 ()
td
;

169 if(!
°
 || !°->
buf
)

170  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

172 
ûevñ
++;

173 
buf
 = 
°
->buf;

174 
íd
 = 
buf
 + 
°
->
size
;

179 ; 
buf
 < 
íd
; buf++) {

180 if((
buf
 - 
°
->bufË% 16 =0 && (°->
size
 > 16)

181 && 
buf
 !
°
->buf) {

182 
	`_i_INDENT
(1);

184 if(
	`cb
(
s¸©ch
, 
p
 - s¸©ch, 
≠p_key
) < 0)  -1;

185 
p
 = 
s¸©ch
;

187 *
p
++ = 
h2c
[*
buf
 >> 4];

188 *
p
++ = 
h2c
[*
buf
 & 0x0F];

189 *
p
++ = 0x20;

192 if(
p
 > 
s¸©ch
) {

193 
p
--;

195 if((
°
->
size
 > 16)) {

196 
	`_i_INDENT
(1);

200 if(
	`cb
(
s¸©ch
, 
p
 - s¸©ch, 
≠p_key
) < 0)

204 if(
°
->
bôs_unu£d
) {

205 
ªt
 = 
	`¢¥ötf
(
s¸©ch
, (scratch), " (%d bit%s unused)",

206 
°
->
bôs_unu£d
, st->bits_unused == 1 ? "" : "s");

207 
	`as£π
(
ªt
 > 0 &&Ñë < (
ssize_t
)(
s¸©ch
));

208 if(
ªt
 > 0 &&Ñë < (
ssize_t
)(
s¸©ch
)

209 && 
	`cb
(
s¸©ch
, 
ªt
, 
≠p_key
) < 0)

214 
	}
}

219 c⁄° 
BIT_STRING_t
 *

220 
	$BIT_STRING__com∑˘ify
(c⁄° 
BIT_STRING_t
 *
°
, BIT_STRING_à*
tmp
) {

221 c⁄° 
uöt8_t
 *
b
;

223 c⁄° 
uöt8_t
 *
c_buf
;

224 
uöt8_t
 *
nc_buf
;

225 } 
unc⁄°
;

227 if(
°
->
size
 == 0) {

228 
	`as£π
(
°
->
bôs_unu£d
 == 0);

229  
°
;

231 
b
 = &
°
->
buf
[°->
size
 - 1]; b > st->buf && *b == 0; b--) {

235 if(*
b
) {

236 
unu£d
 = 7;

237 
uöt8_t
 
v
 = *
b
;

238 
v
 &-(
öt8_t
)v;

239 if(
v
 & 0x0FË
unu£d
 -= 4;

240 if(
v
 & 0x33Ë
unu£d
 -= 2;

241 if(
v
 & 0x55Ë
unu£d
 -= 1;

242 
tmp
->
size
 = 
b
-
°
->
buf
 + 1;

243 
tmp
->
bôs_unu£d
 = 
unu£d
;

245 
tmp
->
size
 = 
b
-
°
->
buf
;

246 
tmp
->
bôs_unu£d
 = 0;

249 
	`as£π
(
b
 >
°
->
buf
);

252 
unc⁄°
.
c_buf
 = 
°
->
buf
;

253 
tmp
->
buf
 = 
unc⁄°
.
nc_buf
;

254  
tmp
;

255 
	}
}

262 
	$BIT_STRING_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

263 c⁄° *
b±r
) {

269 
BIT_STRING_t
 
com∑˘_a
, 
com∑˘_b
;

270 c⁄° 
BIT_STRING_t
 *
a
 = 
	`BIT_STRING__com∑˘ify
(
≠å
, &
com∑˘_a
);

271 c⁄° 
BIT_STRING_t
 *
b
 = 
	`BIT_STRING__com∑˘ify
(
b±r
, &
com∑˘_b
);

272 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics
;

274 
	`as£π
(
•ecs
 && s≥cs->
subv¨ü¡
 =
ASN_OSUBV_BIT
);

276 if(
a
 && 
b
) {

277 
size_t
 
comm⁄_¥efix_size
 = 
a
->
size
 <
b
->size ?á->size : b->size;

278 
ªt
 = 
	`memcmp
(
a
->
buf
, 
b
->buf, 
comm⁄_¥efix_size
);

279 if(
ªt
 == 0) {

281 if(
a
->
size
 < 
b
->size) {

283 } if(
a
->
size
 > 
b
->size) {

287 if(
a
->
bôs_unu£d
 > 
b
->bits_unused) {

289 } if(
a
->
bôs_unu£d
 < 
b
->bits_unused) {

296  
ªt
;

298 } if(!
a
 && !
b
) {

300 } if(!
a
) {

305 
	}
}

307 #i‚de‡ 
ASN_DISABLE_PER_SUPPORT


309 #unde‡
RETURN


310 
	#RETURN
(
_code
) \

312 
a¢_dec_rvÆ_t
 
tm¥vÆ
; \

313 
tm¥vÆ
.
code
 = 
_code
; \

314 
tm¥vÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
; \

315  
tm¥vÆ
; \

316 } 0)

	)

318 
a¢_≥r_c⁄°øöt_t
 
	ga¢_DEF_BIT_STRING_c⁄°øöt_size
 = {

319 
APC_SEMI_CONSTRAINED
, -1, -1, 0, 0};

321 
a¢_dec_rvÆ_t


322 
	$BIT_STRING_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

323 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

324 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

325 
a¢_≥r_d©a_t
 *
pd
) {

326 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


327 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


328 : &
a¢_SPC_BIT_STRING_•ecs
;

329 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
 =

330 
c⁄°øöts
 ? c⁄°øöt†: 
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

331 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
csiz
;

332 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

333 
BIT_STRING_t
 *
°
 = (BIT_STRING_à*)*
•å
;

334 
ssize_t
 
c⁄sumed_my£lf
 = 0;

335 
ª≥©
;

337 ()
›t_codec_˘x
;

339 if(
pc
) {

340 
csiz
 = &
pc
->
size
;

342 
csiz
 = &
a¢_DEF_BIT_STRING_c⁄°øöt_size
;

345 if(
•ecs
->
subv¨ü¡
 !
ASN_OSUBV_BIT
) {

346 
	`ASN_DEBUG
("Subv¨ü¡ %d i†nŸ BIT OSUBV_BIT", 
•ecs
->
subv¨ü¡
);

347 
	`RETURN
(
RC_FAIL
);

353 if(!
°
) {

354 
°
 = (
BIT_STRING_t
 *)(*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

355 if(!
°
Ë
	`RETURN
(
RC_FAIL
);

358 
	`ASN_DEBUG
("PER Decoding %s size %ld .. %ld bits %d",

359 
csiz
->
Êags
 & 
APC_EXTENSIBLE
 ? "extensible" : "non-extensible",

360 
csiz
->
lowî_bound
, csiz->
uµî_bound
, csiz->
ef„˘ive_bôs
);

362 if(
csiz
->
Êags
 & 
APC_EXTENSIBLE
) {

363 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

364 if(
öext
 < 0Ë
	`RETURN
(
RC_WMORE
);

365 if(
öext
) {

366 
csiz
 = &
a¢_DEF_BIT_STRING_c⁄°øöt_size
;

370 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

371 
	`FREEMEM
(
°
->
buf
);

372 
°
->
size
 = (
csiz
->
uµî_bound
 + 7) >> 3;

373 
°
->
buf
 = (
uöt8_t
 *)
	`MALLOC
(°->
size
 + 1);

374 if(!
°
->
buf
Ë{ st->
size
 = 0; 
	`RETURN
(
RC_FAIL
); }

380 if(
csiz
->
ef„˘ive_bôs
 == 0) {

381 
ªt
;

382 
	`ASN_DEBUG
("Encodög BIT STRING sizê%ld", 
csiz
->
uµî_bound
);

383 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, 
°
->
buf
, 0, 
csiz
->
uµî_bound
);

384 if(
ªt
 < 0Ë
	`RETURN
(
RC_WMORE
);

385 
c⁄sumed_my£lf
 +
csiz
->
uµî_bound
;

386 
°
->
buf
[°->
size
] = 0;

387 
°
->
bôs_unu£d
 = (8 - (
csiz
->
uµî_bound
 & 0x7)) & 0x7;

388 
	`RETURN
(
RC_OK
);

391 
°
->
size
 = 0;

393 
ssize_t
 
øw_Àn
;

394 
ssize_t
 
Àn_byãs
;

395 
ssize_t
 
Àn_bôs
;

396 *
p
;

397 
ªt
;

400 
øw_Àn
 = 
	`u≥r_gë_Àngth
(
pd
, 
csiz
->
ef„˘ive_bôs
, csiz->
lowî_bound
,

401 &
ª≥©
);

402 if(
øw_Àn
 < 0Ë
	`RETURN
(
RC_WMORE
);

403 if(
øw_Àn
 =0 && 
°
->
buf
) ;

405 
	`ASN_DEBUG
("Got PERÜengthÉb %ld,Üen %ld, %s (%s)",

406 ()
csiz
->
ef„˘ive_bôs
, ()
øw_Àn
,

407 
ª≥©
 ? "ª≥©" : "⁄˚", 
td
->
«me
);

408 
Àn_bôs
 = 
øw_Àn
;

409 
Àn_byãs
 = (
Àn_bôs
 + 7) >> 3;

410 if(
Àn_bôs
 & 0x7Ë
°
->
bôs_unu£d
 = 8 - (len_bits & 0x7);

412 
p
 = 
	`REALLOC
(
°
->
buf
, st->
size
 + 
Àn_byãs
 + 1);

413 if(!
p
Ë
	`RETURN
(
RC_FAIL
);

414 
°
->
buf
 = (
uöt8_t
 *)
p
;

416 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, &
°
->
buf
[°->
size
], 0, 
Àn_bôs
);

417 if(
ªt
 < 0Ë
	`RETURN
(
RC_WMORE
);

418 
°
->
size
 +
Àn_byãs
;

419 } 
ª≥©
);

420 
°
->
buf
[°->
size
] = 0;

422  
rvÆ
;

423 
	}
}

425 
a¢_íc_rvÆ_t


426 
	$BIT_STRING_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

427 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

428 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

429 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 =

430 
td
->
•ecifics
 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)td->specifics

431 : &
a¢_SPC_BIT_STRING_•ecs
;

432 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
 =

433 
c⁄°øöts
 ? c⁄°øöt†: 
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

434 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
csiz
;

435 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

436 
BIT_STRING_t
 
com∑˘_b°r
;

437 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

438 
öext
 = 0;

439 
size_t
 
size_ö_bôs
;

440 c⁄° 
uöt8_t
 *
buf
;

441 
ªt
;

442 
˘_exãnsibÀ
;

444 if(!
°
 || (!°->
buf
 && st->
size
))

445 
ASN__ENCODE_FAILED
;

447 if(
•ecs
->
subv¨ü¡
 =
ASN_OSUBV_BIT
) {

448 if((
°
->
size
 =0 && st->
bôs_unu£d
) || (st->bits_unused & ~7))

449 
ASN__ENCODE_FAILED
;

451 
ASN__ENCODE_FAILED
;

454 if(
pc
) {

455 
csiz
 = &
pc
->
size
;

457 
csiz
 = &
a¢_DEF_BIT_STRING_c⁄°øöt_size
;

459 
˘_exãnsibÀ
 = 
csiz
->
Êags
 & 
APC_EXTENSIBLE
;

462 
°
 = 
	`BIT_STRING__com∑˘ify
(°, &
com∑˘_b°r
);

463 
size_ö_bôs
 = 8 * 
°
->
size
 - st->
bôs_unu£d
;

465 
	`ASN_DEBUG
(

466 "Encodög %†ötÿ%" 
ASN_PRI_SIZE
 " bits"

468 
td
->
«me
, 
size_ö_bôs
, 
csiz
->
lowî_bound
, csiz->
uµî_bound
,

469 
csiz
->
ef„˘ive_bôs
, 
˘_exãnsibÀ
 ? " EXT" : "");

473 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

474 if((
ssize_t
)
size_ö_bôs
 > 
csiz
->
uµî_bound
) {

475 if(
˘_exãnsibÀ
) {

476 
csiz
 = &
a¢_DEF_BIT_STRING_c⁄°øöt_size
;

477 
öext
 = 1;

479 
ASN__ENCODE_FAILED
;

483 
öext
 = 0;

486 if(
˘_exãnsibÀ
) {

488 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

489 
ASN__ENCODE_FAILED
;

492 if(
csiz
->
ef„˘ive_bôs
 >0 && !
öext
) {

493 
add_åaûî
 = (
ssize_t
)
size_ö_bôs
 < 
csiz
->
lowî_bound
;

494 
	`ASN_DEBUG
(

495 "Encodög %" 
ASN_PRI_SIZE
 " bytes (%ld),Üength (in %d bits)Årailer %d;áctual "

496 "vÆuê%" 
ASN_PRI_SSIZE
 "",

497 
°
->
size
, 
size_ö_bôs
 - 
csiz
->
lowî_bound
, csiz->
ef„˘ive_bôs
,

498 
add_åaûî
,

499 
add_åaûî
 ? 0 : (
ssize_t
)
size_ö_bôs
 - 
csiz
->
lowî_bound
);

500 
ªt
 = 
	`≥r_put_„w_bôs
(

501 
po
, 
add_åaûî
 ? 0 : (
ssize_t
)
size_ö_bôs
 - 
csiz
->
lowî_bound
,

502 
csiz
->
ef„˘ive_bôs
);

503 if(
ªt
Ë
ASN__ENCODE_FAILED
;

504 
ªt
 = 
	`≥r_put_m™y_bôs
(
po
, 
°
->
buf
, 
size_ö_bôs
);

505 if(
ªt
Ë
ASN__ENCODE_FAILED
;

506 if(
add_åaûî
) {

507 c⁄° 
uöt8_t
 
zîos
[16];

508 
size_t
 
åaûög_zîo_bôs
 = 
csiz
->
lowî_bound
 - 
size_ö_bôs
;

509 
åaûög_zîo_bôs
 > 0) {

510 if(
åaûög_zîo_bôs
 > 8 * (
zîos
)) {

511 
ªt
 = 
	`≥r_put_m™y_bôs
(
po
, 
zîos
, 8 * (zeros));

512 
åaûög_zîo_bôs
 -8 * (
zîos
);

514 
ªt
 = 
	`≥r_put_m™y_bôs
(
po
, 
zîos
, 
åaûög_zîo_bôs
);

515 
åaûög_zîo_bôs
 = 0;

517 if(
ªt
Ë
ASN__ENCODE_FAILED
;

520 
	`ASN__ENCODED_OK
(
î
);

523 
	`ASN_DEBUG
("Encodög %" 
ASN_PRI_SIZE
 " byãs", 
°
->
size
);

525 
buf
 = 
°
->buf;

527 
√ed_eom
 = 0;

528 
ssize_t
 
maySave
 = 
	`u≥r_put_Àngth
(
po
, 
size_ö_bôs
, &
√ed_eom
);

529 if(
maySave
 < 0Ë
ASN__ENCODE_FAILED
;

531 
	`ASN_DEBUG
("Encodög %" 
ASN_PRI_SSIZE
 " o‡%" 
ASN_PRI_SIZE
 "", 
maySave
, 
size_ö_bôs
);

533 
ªt
 = 
	`≥r_put_m™y_bôs
(
po
, 
buf
, 
maySave
);

534 if(
ªt
Ë
ASN__ENCODE_FAILED
;

536 
buf
 +
maySave
 >> 3;

537 
size_ö_bôs
 -
maySave
;

538 
	`as£π
(!(
maySave
 & 0x07Ë|| !
size_ö_bôs
);

539 if(
√ed_eom
 && 
	`u≥r_put_Àngth
(
po
, 0, 0))

540 
ASN__ENCODE_FAILED
;

541 } 
size_ö_bôs
);

543 
	`ASN__ENCODED_OK
(
î
);

544 
	}
}

548 
a¢_øndom_fûl_ªsu…_t


549 
	$BIT_STRING_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

550 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

551 
size_t
 
max_Àngth
) {

552 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 =

553 
td
->
•ecifics
 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)td->specifics

554 : &
a¢_SPC_BIT_STRING_•ecs
;

555 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

556 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

557 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

558 
Àngths
[] = {0, 1, 2, 3, 4, 8,

561 
uöt8_t
 *
buf
;

562 
uöt8_t
 *
bíd
;

563 
uöt8_t
 *
b
;

564 
size_t
 
∫d_bôs
, 
∫d_Àn
;

565 
BIT_STRING_t
 *
°
;

567 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

569 
•ecs
->
subv¨ü¡
) {

570 
ASN_OSUBV_ANY
:

571  
ªsu…_Áûed
;

572 
ASN_OSUBV_BIT
:

579 
∫d_bôs
 = 
Àngths
[
	`a¢_øndom_bëwìn
(

580 0, (
Àngths
) / (lengths[0]) - 1)];

581 if(!
c⁄°øöts
 || !c⁄°øöts->
≥r_c⁄°øöts
)

582 
c⁄°øöts
 = &
td
->
ícodög_c⁄°øöts
;

583 if(
c⁄°øöts
->
≥r_c⁄°øöts
) {

584 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
pc
 = &
c⁄°øöts
->
≥r_c⁄°øöts
->
size
;

585 if(
pc
->
Êags
 & 
APC_CONSTRAINED
) {

586 
sugge°ed_uµî_bound
 = 
pc
->
uµî_bound
 < (
ssize_t
)
max_Àngth


587 ? 
pc
->
uµî_bound


588 : (
ssize_t
)
max_Àngth
;

589 if(
max_Àngth
 < (
size_t
)
pc
->
lowî_bound
) {

590  
ªsu…_skù≥d
;

592 if(
pc
->
Êags
 & 
APC_EXTENSIBLE
) {

593 
	`a¢_øndom_bëwìn
(0, 5)) {

595 if(
pc
->
lowî_bound
 > 0) {

596 
∫d_bôs
 = 
pc
->
lowî_bound
 - 1;

601 
∫d_bôs
 = 
pc
->
uµî_bound
 + 1;

605 if(
∫d_bôs
 < 
max_Àngth
) {

610 
∫d_bôs
 = 
	`a¢_øndom_bëwìn
(
pc
->
lowî_bound
,

611 
sugge°ed_uµî_bound
);

614 
∫d_bôs
 =

615 
	`a¢_øndom_bëwìn
(
pc
->
lowî_bound
, 
sugge°ed_uµî_bound
);

618 
∫d_bôs
 = 
	`a¢_øndom_bëwìn
(0, 
max_Àngth
 - 1);

620 } if(
∫d_bôs
 >
max_Àngth
) {

621 
∫d_bôs
 = 
	`a¢_øndom_bëwìn
(0, 
max_Àngth
 - 1);

624 
∫d_Àn
 = (
∫d_bôs
 + 7) / 8;

625 
buf
 = 
	`CALLOC
(1, 
∫d_Àn
 + 1);

626 if(!
buf
Ë 
ªsu…_Áûed
;

628 
bíd
 = &
buf
[
∫d_Àn
];

630 
b
 = 
buf
; b < 
bíd
; b++) {

631 *(
uöt8_t
 *)
b
 = 
	`a¢_øndom_bëwìn
(0, 255);

633 *
b
 = 0;

635 if(*
•å
) {

636 
°
 = *
•å
;

637 
	`FREEMEM
(
°
->
buf
);

639 
°
 = (
BIT_STRING_t
 *)(*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

640 if(!
°
) {

641 
	`FREEMEM
(
buf
);

642  
ªsu…_Áûed
;

646 
°
->
buf
 = buf;

647 
°
->
size
 = 
∫d_Àn
;

648 
°
->
bôs_unu£d
 = (8 - (
∫d_bôs
 & 0x7)) & 0x7;

649 if(
°
->
bôs_unu£d
) {

650 
	`as£π
(
°
->
size
 > 0);

651 
°
->
buf
[°->
size
-1] &0xf‡<< st->
bôs_unu£d
;

654 
ªsu…_ok
.
Àngth
 = 
°
->
size
;

655  
ªsu…_ok
;

656 
	}
}

	@BOOLEAN.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_codecs_¥im.h
>

7 
	~<BOOLEAN.h
>

12 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_BOOLEAN_ègs
[] = {

13 (
ASN_TAG_CLASS_UNIVERSAL
 | (1 << 2))

15 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_BOOLEAN
 = {

16 
BOOLEAN_‰ì
,

17 
BOOLEAN_¥öt
,

18 
BOOLEAN_com∑ª
,

19 
BOOLEAN_decode_bî
,

20 
BOOLEAN_ícode_dî
,

21 
BOOLEAN_decode_xî
,

22 
BOOLEAN_ícode_xî
,

23 #ifdef 
ASN_DISABLE_OER_SUPPORT


27 
BOOLEAN_decode_€r
,

28 
BOOLEAN_ícode_€r
,

30 #ifdef 
ASN_DISABLE_PER_SUPPORT


36 
BOOLEAN_decode_u≥r
,

37 
BOOLEAN_ícode_u≥r
,

38 
BOOLEAN_decode_≠î
,

39 
BOOLEAN_ícode_≠î
,

41 
BOOLEAN_øndom_fûl
,

44 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_BOOLEAN
 = {

47 &
a¢_OP_BOOLEAN
,

48 
a¢_DEF_BOOLEAN_ègs
,

49 (
a¢_DEF_BOOLEAN_ègs
) / (asn_DEF_BOOLEAN_tags[0]),

50 
a¢_DEF_BOOLEAN_ègs
,

51 (
a¢_DEF_BOOLEAN_ègs
) / (asn_DEF_BOOLEAN_tags[0]),

52 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

60 
a¢_dec_rvÆ_t


61 
	$BOOLEAN_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

62 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
boﬁ_vÆue
,

63 c⁄° *
buf_±r
, 
size_t
 
size
, 
èg_mode
) {

64 
BOOLEAN_t
 *
°
 = (BOOLEAN_à*)*
boﬁ_vÆue
;

65 
a¢_dec_rvÆ_t
 
rvÆ
;

66 
bî_év_Àn_t
 
Àngth
;

67 
bî_év_Àn_t
 
lidx
;

69 if(
°
 =
NULL
) {

70 
°
 = (
BOOLEAN_t
 *)(*
boﬁ_vÆue
 = 
	`CALLOC
(1, (*st)));

71 if(
°
 =
NULL
) {

72 
rvÆ
.
code
 = 
RC_FAIL
;

73 
rvÆ
.
c⁄sumed
 = 0;

74  
rvÆ
;

78 
	`ASN_DEBUG
("Decoding %sás BOOLEAN (tm=%d)",

79 
td
->
«me
, 
èg_mode
);

84 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 0, 
buf_±r
, 
size
,

85 
èg_mode
, 0, &
Àngth
, 0);

86 if(
rvÆ
.
code
 !
RC_OK
)

87  
rvÆ
;

89 
	`ASN_DEBUG
("Boﬁó¿Àngth i†%d byãs", ()
Àngth
);

91 
buf_±r
 = ((c⁄° *)buf_±rË+ 
rvÆ
.
c⁄sumed
;

92 
size
 -
rvÆ
.
c⁄sumed
;

93 if(
Àngth
 > (
bî_év_Àn_t
)
size
) {

94 
rvÆ
.
code
 = 
RC_WMORE
;

95 
rvÆ
.
c⁄sumed
 = 0;

96  
rvÆ
;

102 *
°
 = 0, 
lidx
 = 0;

103 (
lidx
 < 
Àngth
Ë&& *
°
 == 0;Üidx++) {

109 *
°
 |((c⁄° 
uöt8_t
 *)
buf_±r
)[
lidx
];

112 
rvÆ
.
code
 = 
RC_OK
;

113 
rvÆ
.
c⁄sumed
 +
Àngth
;

115 
	`ASN_DEBUG
("Took %ld/%ld bytesÅoÉncode %s, value=%d",

116 ()
rvÆ
.
c⁄sumed
, ()
Àngth
,

117 
td
->
«me
, *
°
);

119  
rvÆ
;

120 
	}
}

122 
a¢_íc_rvÆ_t


123 
	$BOOLEAN_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

124 
èg_mode
, 
bî_év_èg_t
 
èg
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

125 *
≠p_key
) {

126 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

127 c⁄° 
BOOLEAN_t
 *
°
 = (c⁄° BOOLEAN_à*)
•å
;

129 
îvÆ
.
ícoded
 = 
	`dî_wrôe_ègs
(
td
, 1, 
èg_mode
, 0, 
èg
, 
cb
, 
≠p_key
);

130 if(
îvÆ
.
ícoded
 == -1) {

131 
îvÆ
.
Áûed_ty≥
 = 
td
;

132 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

133  
îvÆ
;

136 if(
cb
) {

137 
uöt8_t
 
boﬁ_vÆue
;

139 
boﬁ_vÆue
 = *
°
 ? 0xff : 0;

141 if(
	`cb
(&
boﬁ_vÆue
, 1, 
≠p_key
) < 0) {

142 
îvÆ
.
ícoded
 = -1;

143 
îvÆ
.
Áûed_ty≥
 = 
td
;

144 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

145  
îvÆ
;

149 
îvÆ
.
ícoded
 += 1;

151 
	`ASN__ENCODED_OK
(
îvÆ
);

152 
	}
}

158 
xî_pbd_rvÆ


159 
	$BOOLEAN__xî_body_decode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

160 c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

161 
BOOLEAN_t
 *
°
 = (BOOLEAN_à*)
•å
;

162 c⁄° *
p
 = (c⁄° *)
chunk_buf
;

164 ()
td
;

166 if(
chunk_size
 && 
p
[0] == 0x3c ) {

167 
	`xî_check_èg
(
chunk_buf
, 
chunk_size
, "false")) {

168 
XCT_BOTH
:

170 *
°
 = 0;

172 
XCT_UNKNOWN_BO
:

173 if(
	`xî_check_èg
(
chunk_buf
, 
chunk_size
, "true")

174 !
XCT_BOTH
)

175  
XPBD_BROKEN_ENCODING
;

177 *
°
 = 1;

180  
XPBD_BROKEN_ENCODING
;

182  
XPBD_BODY_CONSUMED
;

184  
XPBD_BROKEN_ENCODING
;

186 
	}
}

189 
a¢_dec_rvÆ_t


190 
	$BOOLEAN_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

191 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

192 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

193  
	`xî_decode_¥imôive
(
›t_codec_˘x
, 
td
,

194 
•å
, (
BOOLEAN_t
), 
›t_m«me
, 
buf_±r
, 
size
,

195 
BOOLEAN__xî_body_decode
);

196 
	}
}

198 
a¢_íc_rvÆ_t


199 
	$BOOLEAN_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

200 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

201 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

202 c⁄° 
BOOLEAN_t
 *
°
 = (c⁄° BOOLEAN_à*)
•å
;

203 
a¢_íc_rvÆ_t
 
î
 = {0, 0, 0};

205 ()
ûevñ
;

206 ()
Êags
;

208 if(!
°
Ë
ASN__ENCODE_FAILED
;

210 if(*
°
) {

211 
	`ASN__CALLBACK
("<true/>", 7);

213 
	`ASN__CALLBACK
("<false/>", 8);

216 
	`ASN__ENCODED_OK
(
î
);

217 
cb_Áûed
:

218 
ASN__ENCODE_FAILED
;

219 
	}
}

222 
	$BOOLEAN_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

223 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

224 c⁄° 
BOOLEAN_t
 *
°
 = (c⁄° BOOLEAN_à*)
•å
;

225 c⁄° *
buf
;

226 
size_t
 
buÊí
;

228 ()
td
;

229 ()
ûevñ
;

231 if(
°
) {

232 if(*
°
) {

233 
buf
 = "TRUE";

234 
buÊí
 = 4;

236 
buf
 = "FALSE";

237 
buÊí
 = 5;

240 
buf
 = "<absent>";

241 
buÊí
 = 8;

244  (
	`cb
(
buf
, 
buÊí
, 
≠p_key
) < 0) ? -1 : 0;

245 
	}
}

248 
	$BOOLEAN_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
±r
,

249 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

250 if(
td
 && 
±r
) {

251 
mëhod
) {

252 
ASFM_FREE_EVERYTHING
:

253 
	`FREEMEM
(
±r
);

255 
ASFM_FREE_UNDERLYING
:

257 
ASFM_FREE_UNDERLYING_AND_RESET
:

258 
	`mem£t
(
±r
, 0, (
BOOLEAN_t
));

262 
	}
}

264 #i‚de‡
ASN_DISABLE_PER_SUPPORT


266 
a¢_dec_rvÆ_t


267 
	$BOOLEAN_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

268 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

269 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

270 
a¢_≥r_d©a_t
 *
pd
) {

271 
a¢_dec_rvÆ_t
 
rv
;

272 
BOOLEAN_t
 *
°
 = (BOOLEAN_à*)*
•å
;

274 ()
›t_codec_˘x
;

275 ()
td
;

276 ()
c⁄°øöts
;

278 if(!
°
) {

279 
°
 = (
BOOLEAN_t
 *)(*
•å
 = 
	`MALLOC
((*st)));

280 if(!
°
Ë
ASN__DECODE_FAILED
;

286 
	`≥r_gë_„w_bôs
(
pd
, 1)) {

287 1: *
°
 = 1; ;

288 0: *
°
 = 0; ;

289 -1: : 
ASN__DECODE_STARVED
;

292 
	`ASN_DEBUG
("%†decodedá†%s", 
td
->
«me
, *
°
 ? "TRUE" : "FALSE");

294 
rv
.
code
 = 
RC_OK
;

295 
rv
.
c⁄sumed
 = 1;

296  
rv
;

297 
	}
}

300 
a¢_íc_rvÆ_t


301 
	$BOOLEAN_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

302 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

303 
a¢_≥r_ouç_t
 *
po
) {

304 c⁄° 
BOOLEAN_t
 *
°
 = (c⁄° BOOLEAN_à*)
•å
;

305 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

307 ()
c⁄°øöts
;

309 if(!
°
Ë
ASN__ENCODE_FAILED
;

311 if(
	`≥r_put_„w_bôs
(
po
, *
°
 ? 1 : 0, 1))

312 
ASN__ENCODE_FAILED
;

314 
	`ASN__ENCODED_OK
(
î
);

315 
	}
}

317 
a¢_dec_rvÆ_t


318 
	$BOOLEAN_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

319 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

320 
a¢_dec_rvÆ_t
 
rv
;

321 
BOOLEAN_t
 *
°
 = (BOOLEAN_à*)*
•å
;

323 ()
›t_codec_˘x
;

324 ()
c⁄°øöts
;

325 ()
td
;

327 if(!
°
) {

328 
°
 = (
BOOLEAN_t
 *)(*
•å
 = 
	`MALLOC
((*st)));

329 if(!
°
Ë
ASN__DECODE_FAILED
;

335 
	`≥r_gë_„w_bôs
(
pd
, 1)) {

337 *
°
 = 1;

340 *
°
 = 0;

344 
ASN__DECODE_STARVED
;

347 
	`ASN_DEBUG
("%†decodedá†%s", 
td
->
«me
, *
°
 ? "TRUE" : "FALSE");

349 
rv
.
code
 = 
RC_OK
;

350 
rv
.
c⁄sumed
 = 1;

351  
rv
;

352 
	}
}

354 
a¢_íc_rvÆ_t


355 
	$BOOLEAN_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

356 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

357 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

358 c⁄° 
BOOLEAN_t
 *
°
 = (c⁄° BOOLEAN_à*)
•å
;

359 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

361 ()
c⁄°øöts
;

363 if(!
°
Ë
ASN__ENCODE_FAILED
;

365 if(
	`≥r_put_„w_bôs
(
po
, *
°
 ? 1 : 0, 1))

366 
ASN__ENCODE_FAILED
;

368 
	`ASN__ENCODED_OK
(
î
);

369 
	}
}

373 #i‚de‡ 
ASN_DISABLE_OER_SUPPORT


378 
a¢_íc_rvÆ_t


379 
	$BOOLEAN_ícode_€r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

380 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

381 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

382 
a¢_íc_rvÆ_t
 
î
 = { 1, 0, 0 };

383 c⁄° 
BOOLEAN_t
 *
°
 = 
•å
;

384 
uöt8_t
 
boﬁ_vÆue
 = *
°
 ? 0xff : 0;

386 ()
td
;

387 ()
c⁄°øöts
;

389 if(
	`cb
(&
boﬁ_vÆue
, 1, 
≠p_key
) < 0) {

390 
ASN__ENCODE_FAILED
;

392 
	`ASN__ENCODED_OK
(
î
);

394 
	}
}

396 
a¢_dec_rvÆ_t


397 
	$BOOLEAN_decode_€r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

398 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

399 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

400 c⁄° *
±r
, 
size_t
 
size
) {

401 
a¢_dec_rvÆ_t
 
ok
 = {
RC_OK
, 1};

402 
BOOLEAN_t
 *
°
;

404 ()
›t_codec_˘x
;

405 ()
td
;

406 ()
c⁄°øöts
;

408 if(
size
 < 1) {

409 
ASN__DECODE_STARVED
;

412 if(!(
°
 = *
•å
)) {

413 
°
 = (
BOOLEAN_t
 *)(*
•å
 = 
	`CALLOC
(1, (*st)));

414 if(!
°
Ë
ASN__DECODE_FAILED
;

417 *
°
 = *(c⁄° 
uöt8_t
 *)
±r
;

419  
ok
;

420 
	}
}

427 
	$BOOLEAN_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

428 c⁄° *
b±r
) {

429 c⁄° 
BOOLEAN_t
 *
a
 = 
≠å
;

430 c⁄° 
BOOLEAN_t
 *
b
 = 
b±r
;

432 ()
td
;

434 if(
a
 && 
b
) {

435 if(!*
a
 =!*
b
) {

437 } if(!*
a
) {

442 } if(!
a
) {

447 
	}
}

449 
a¢_øndom_fûl_ªsu…_t


450 
	$BOOLEAN_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

451 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

452 
size_t
 
max_Àngth
) {

453 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

454 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

455 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

456 
BOOLEAN_t
 *
°
 = *
•å
;

458 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

460 if(
°
 =
NULL
) {

461 
°
 = (
BOOLEAN_t
 *)(*
•å
 = 
	`CALLOC
(1, (*st)));

462 if(
°
 =
NULL
) {

463  
ªsu…_Áûed
;

467 if(!
c⁄°øöts
 || !c⁄°øöts->
≥r_c⁄°øöts
)

468 
c⁄°øöts
 = &
td
->
ícodög_c⁄°øöts
;

469 if(
c⁄°øöts
->
≥r_c⁄°øöts
) {

470 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
pc
 = &
c⁄°øöts
->
≥r_c⁄°øöts
->
vÆue
;

471 if(
pc
->
Êags
 & 
APC_CONSTRAINED
) {

472 *
°
 = 
	`a¢_øndom_bëwìn
(
pc
->
lowî_bound
,Öc->
uµî_bound
);

473  
ªsu…_ok
;

478 
	`a¢_øndom_bëwìn
(0, 7)) {

482 *
°
 = 0; ;

483 3: *
°
 = -1; ;

484 4: *
°
 = 1; ;

485 5: *
°
 = 
INT_MIN
; ;

486 6: *
°
 = 
INT_MAX
; ;

488 *
°
 = 
	`a¢_øndom_bëwìn
(
INT_MIN
, 
INT_MAX
);

491  
ªsu…_ok
;

492 
	}
}

	@CGI.c

8 
	~"CGI.h
"

10 
	~"NR-CGI.h
"

11 
	~"EUTRA-CGI.h
"

12 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_CGI_c⁄°r_1
 
	gCC_NOTUSED
 = {

13 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

14 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

17 
a¢_TYPE_membî_t
 
	ga¢_MBR_CGI_1
[] = {

18 { 
ATF_POINTER
, 0, 
off£tof
(
CGI
, 
choi˚
.
nR_CGI
),

19 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

21 &
a¢_DEF_NR_CGI
,

27 { 
ATF_POINTER
, 0, 
off£tof
(
CGI
, 
choi˚
.
eUTRA_CGI
),

28 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

30 &
a¢_DEF_EUTRA_CGI
,

37 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_CGI_èg2ñ_1
[] = {

38 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

39 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

41 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_CGI_•ecs_1
 = {

42 (
CGI
),

43 
off£tof
(
CGI
, 
_a¢_˘x
),

44 
off£tof
(
CGI
, 
¥e£¡
),

45 (((
CGI
 *)0)->
¥e£¡
),

46 
a¢_MAP_CGI_èg2ñ_1
,

51 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_CGI
 = {

54 &
a¢_OP_CHOICE
,

59 { 0, &
a¢_PER_ty≥_CGI_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

60 
a¢_MBR_CGI_1
,

62 &
a¢_SPC_CGI_•ecs_1


	@CoreCPID.c

8 
	~"C‹eCPID.h
"

10 
	~"GUAMI.h
"

11 
	~"GUMMEI.h
"

12 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_C‹eCPID_c⁄°r_1
 
	gCC_NOTUSED
 = {

13 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

14 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

17 
a¢_TYPE_membî_t
 
	ga¢_MBR_C‹eCPID_1
[] = {

18 { 
ATF_POINTER
, 0, 
off£tof
(
C‹eCPID
, 
choi˚
.
fiveGC
),

19 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

21 &
a¢_DEF_GUAMI
,

27 { 
ATF_POINTER
, 0, 
off£tof
(
C‹eCPID
, 
choi˚
.
ePC
),

28 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

30 &
a¢_DEF_GUMMEI
,

37 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_C‹eCPID_èg2ñ_1
[] = {

38 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

39 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

41 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_C‹eCPID_•ecs_1
 = {

42 (
C‹eCPID
),

43 
off£tof
(
C‹eCPID
, 
_a¢_˘x
),

44 
off£tof
(
C‹eCPID
, 
¥e£¡
),

45 (((
C‹eCPID
 *)0)->
¥e£¡
),

46 
a¢_MAP_C‹eCPID_èg2ñ_1
,

51 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_C‹eCPID
 = {

54 &
a¢_OP_CHOICE
,

59 { 0, &
a¢_PER_ty≥_C‹eCPID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

60 
a¢_MBR_C‹eCPID_1
,

62 &
a¢_SPC_C‹eCPID_•ecs_1


	@E-UTRA-ARFCN.c

8 
	~"E-UTRA-ARFCN.h
"

11 
	$E_UTRA_ARFCN_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 65535)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_E_UTRA_ARFCN_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
, 16, 16, 0, 65535 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E_UTRA_ARFCN_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E_UTRA_ARFCN
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_E_UTRA_ARFCN_ègs_1
,

52 (
a¢_DEF_E_UTRA_ARFCN_ègs_1
)

53 /(
a¢_DEF_E_UTRA_ARFCN_ègs_1
[0]),

54 
a¢_DEF_E_UTRA_ARFCN_ègs_1
,

55 (
a¢_DEF_E_UTRA_ARFCN_ègs_1
)

56 /(
a¢_DEF_E_UTRA_ARFCN_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_E_UTRA_ARFCN_c⁄°r_1
, 
E_UTRA_ARFCN_c⁄°øöt
 },

	@E-UTRA-PCI.c

8 
	~"E-UTRA-PCI.h
"

11 
	$E_UTRA_PCI_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 503)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_E_UTRA_PCI_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 9, 9, 0, 503 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E_UTRA_PCI_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E_UTRA_PCI
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_E_UTRA_PCI_ègs_1
,

52 (
a¢_DEF_E_UTRA_PCI_ègs_1
)

53 /(
a¢_DEF_E_UTRA_PCI_ègs_1
[0]),

54 
a¢_DEF_E_UTRA_PCI_ègs_1
,

55 (
a¢_DEF_E_UTRA_PCI_ègs_1
)

56 /(
a¢_DEF_E_UTRA_PCI_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_E_UTRA_PCI_c⁄°r_1
, 
E_UTRA_PCI_c⁄°øöt
 },

	@E-UTRA-TAC.c

8 
	~"E-UTRA-TAC.h
"

11 
	$E_UTRA_TAC_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 2)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_E_UTRA_TAC_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 2, 2 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E_UTRA_TAC_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E_UTRA_TAC
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_E_UTRA_TAC_ègs_1
,

53 (
a¢_DEF_E_UTRA_TAC_ègs_1
)

54 /(
a¢_DEF_E_UTRA_TAC_ègs_1
[0]),

55 
a¢_DEF_E_UTRA_TAC_ègs_1
,

56 (
a¢_DEF_E_UTRA_TAC_ègs_1
)

57 /(
a¢_DEF_E_UTRA_TAC_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_E_UTRA_TAC_c⁄°r_1
, 
E_UTRA_TAC_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@E2SM-KPM-ActionDefinition-Format1.c

8 
	~"E2SM-KPM-A˘i⁄Deföôi⁄-F‹m©1.h
"

10 
	~"CGI.h
"

11 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_1
[] = {

12 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
, 
mósInfoLi°
),

13 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

15 &
a¢_DEF_MósuªmítInfoLi°
,

21 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
, 
gønulPîiod
),

22 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

24 &
a¢_DEF_GønuœrôyPîiod
,

30 { 
ATF_POINTER
, 1, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
, 
˚ŒGlobÆID
),

31 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

33 &
a¢_DEF_CGI
,

40 c⁄° 
	ga¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_oms_1
[] = { 2 };

41 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
[] = {

42 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

44 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_èg2ñ_1
[] = {

45 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

46 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

47 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

49 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_•ecs_1
 = {

50 (
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
),

51 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
, 
_a¢_˘x
),

52 
a¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_èg2ñ_1
,

54 
a¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_oms_1
,

58 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
 = {

61 &
a¢_OP_SEQUENCE
,

62 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
,

63 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
)

64 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
[0]),

65 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
,

66 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
)

67 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_ègs_1
[0]),

68 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

69 
a¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_1
,

71 &
a¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1_•ecs_1


	@E2SM-KPM-ActionDefinition-Format2.c

8 
	~"E2SM-KPM-A˘i⁄Deföôi⁄-F‹m©2.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2
, 
ueID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_UEID
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2
, 
subs¸ùtInfo
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_•ecs_1
 = {

38 (
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2
),

39 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2
, 
_a¢_˘x
),

40 
a¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
,

50 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
)

51 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
[0]),

52 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
,

53 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
)

54 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_1
,

58 &
a¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2_•ecs_1


	@E2SM-KPM-ActionDefinition-Format3.c

8 
	~"E2SM-KPM-A˘i⁄Deföôi⁄-F‹m©3.h
"

10 
	~"CGI.h
"

11 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_1
[] = {

12 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
, 
mósC⁄dLi°
),

13 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

15 &
a¢_DEF_MósuªmítC⁄dLi°
,

21 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
, 
gønulPîiod
),

22 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

24 &
a¢_DEF_GønuœrôyPîiod
,

30 { 
ATF_POINTER
, 1, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
, 
˚ŒGlobÆID
),

31 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

33 &
a¢_DEF_CGI
,

40 c⁄° 
	ga¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_oms_1
[] = { 2 };

41 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
[] = {

42 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

44 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_èg2ñ_1
[] = {

45 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

46 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

47 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

49 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_•ecs_1
 = {

50 (
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
),

51 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
, 
_a¢_˘x
),

52 
a¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_èg2ñ_1
,

54 
a¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_oms_1
,

58 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
 = {

61 &
a¢_OP_SEQUENCE
,

62 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
,

63 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
)

64 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
[0]),

65 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
,

66 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
)

67 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_ègs_1
[0]),

68 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

69 
a¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_1
,

71 &
a¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3_•ecs_1


	@E2SM-KPM-ActionDefinition.c

8 
	~"E2SM-KPM-A˘i⁄Deföôi⁄.h
"

10 
	~"E2SM-KPM-A˘i⁄Deföôi⁄-F‹m©1.h
"

11 
	~"E2SM-KPM-A˘i⁄Deföôi⁄-F‹m©2.h
"

12 
	~"E2SM-KPM-A˘i⁄Deföôi⁄-F‹m©3.h
"

13 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_a˘i⁄Deföôi⁄_f‹m©s_c⁄°r_3
 
	gCC_NOTUSED
 = {

14 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 2, 2, 0, 2 } ,

15 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

18 
a¢_TYPE_membî_t
 
	ga¢_MBR_a˘i⁄Deföôi⁄_f‹m©s_3
[] = {

19 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
, 
choi˚
.
a˘i⁄Deföôi⁄_F‹m©1
),

20 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

22 &
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©1
,

28 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
, 
choi˚
.
a˘i⁄Deföôi⁄_F‹m©2
),

29 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

31 &
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©2
,

37 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
, 
choi˚
.
a˘i⁄Deföôi⁄_F‹m©3
),

38 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

40 &
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_F‹m©3
,

47 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_a˘i⁄Deföôi⁄_f‹m©s_èg2ñ_3
[] = {

48 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

49 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

50 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

52 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_a˘i⁄Deföôi⁄_f‹m©s_•ecs_3
 = {

53 (
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
),

54 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
, 
_a¢_˘x
),

55 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
, 
¥e£¡
),

56 (((
E2SM_KPM_A˘i⁄Deföôi⁄__a˘i⁄Deföôi⁄_f‹m©s
 *)0)->
¥e£¡
),

57 
a¢_MAP_a˘i⁄Deföôi⁄_f‹m©s_èg2ñ_3
,

63 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_a˘i⁄Deföôi⁄_f‹m©s_3
 = {

66 &
a¢_OP_CHOICE
,

71 { 0, &
a¢_PER_ty≥_a˘i⁄Deföôi⁄_f‹m©s_c⁄°r_3
, 
CHOICE_c⁄°øöt
 },

72 
a¢_MBR_a˘i⁄Deföôi⁄_f‹m©s_3
,

74 &
a¢_SPC_a˘i⁄Deföôi⁄_f‹m©s_•ecs_3


77 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_1
[] = {

78 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄
, 
ric_StyÀ_Ty≥
),

79 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

81 &
a¢_DEF_RIC_StyÀ_Ty≥
,

87 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄
, 
a˘i⁄Deföôi⁄_f‹m©s
),

88 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

90 &
a¢_DEF_a˘i⁄Deföôi⁄_f‹m©s_3
,

97 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
[] = {

98 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

100 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_èg2ñ_1
[] = {

101 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

102 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

104 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_•ecs_1
 = {

105 (
E2SM_KPM_A˘i⁄Deföôi⁄
),

106 
off£tof
(
E2SM_KPM_A˘i⁄Deföôi⁄
, 
_a¢_˘x
),

107 
a¢_MAP_E2SM_KPM_A˘i⁄Deföôi⁄_èg2ñ_1
,

112 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄
 = {

115 &
a¢_OP_SEQUENCE
,

116 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
,

117 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
)

118 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
[0]),

119 
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
,

120 (
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
)

121 /(
a¢_DEF_E2SM_KPM_A˘i⁄Deföôi⁄_ègs_1
[0]),

122 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

123 
a¢_MBR_E2SM_KPM_A˘i⁄Deföôi⁄_1
,

125 &
a¢_SPC_E2SM_KPM_A˘i⁄Deföôi⁄_•ecs_1


	@E2SM-KPM-EventTriggerDefinition-Format1.c

8 
	~"E2SM-KPM-EvítTriggîDeföôi⁄-F‹m©1.h
"

11 
	$ªp‹tögPîiod_2_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 4294967295)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

40 
	$memb_ªp‹tögPîiod_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

41 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

42 
vÆue
;

44 if(!
•å
) {

45 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

47 
td
->
«me
, 
__FILE__
, 
__LINE__
);

51 
vÆue
 = *(c⁄° *)
•å
;

53 if((
vÆue
 >= 1 && value <= 4294967295)) {

57 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

59 
td
->
«me
, 
__FILE__
, 
__LINE__
);

62 
	}
}

64 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ªp‹tögPîiod_c⁄°r_2
 
	gCC_NOTUSED
 = {

65 { 
APC_CONSTRAINED
, 32, -1, 1, 4294967295 } ,

66 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

69 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ªp‹tögPîiod_c⁄°r_2
 
	gCC_NOTUSED
 = {

70 { 
APC_CONSTRAINED
, 32, -1, 1, 4294967295 } ,

71 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

74 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_ªp‹tögPîiod_•ecs_2
 = {

79 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_ªp‹tögPîiod_ègs_2
[] = {

80 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

81 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

84 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ªp‹tögPîiod_2
 = {

87 &
a¢_OP_N©iveI¡egî
,

88 
a¢_DEF_ªp‹tögPîiod_ègs_2
,

89 (
a¢_DEF_ªp‹tögPîiod_ègs_2
)

90 /(
a¢_DEF_ªp‹tögPîiod_ègs_2
[0]) - 1,

91 
a¢_DEF_ªp‹tögPîiod_ègs_2
,

92 (
a¢_DEF_ªp‹tögPîiod_ègs_2
)

93 /(
a¢_DEF_ªp‹tögPîiod_ègs_2
[0]),

94 { 0, &
a¢_PER_ty≥_ªp‹tögPîiod_c⁄°r_2
, 
ªp‹tögPîiod_2_c⁄°øöt
 },

96 &
a¢_SPC_ªp‹tögPîiod_•ecs_2


99 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_1
[] = {

100 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1
, 
ªp‹tögPîiod
),

101 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

103 &
a¢_DEF_ªp‹tögPîiod_2
,

105 { 0, &
a¢_PER_memb_ªp‹tögPîiod_c⁄°r_2
, 
memb_ªp‹tögPîiod_c⁄°øöt_1
 },

110 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
[] = {

111 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

113 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_èg2ñ_1
[] = {

114 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

116 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_•ecs_1
 = {

117 (
E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1
),

118 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1
, 
_a¢_˘x
),

119 
a¢_MAP_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_èg2ñ_1
,

124 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1
 = {

127 &
a¢_OP_SEQUENCE
,

128 
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
,

129 (
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
)

130 /(
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
[0]),

131 
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
,

132 (
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
)

133 /(
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_ègs_1
[0]),

134 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

135 
a¢_MBR_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_1
,

137 &
a¢_SPC_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1_•ecs_1


	@E2SM-KPM-EventTriggerDefinition.c

8 
	~"E2SM-KPM-EvítTriggîDeföôi⁄.h
"

10 
	~"E2SM-KPM-EvítTriggîDeföôi⁄-F‹m©1.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_evítDeföôi⁄_f‹m©s_c⁄°r_2
 
	gCC_NOTUSED
 = {

12 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

13 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_evítDeföôi⁄_f‹m©s_2
[] = {

17 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄__evítDeföôi⁄_f‹m©s
, 
choi˚
.
evítDeföôi⁄_F‹m©1
),

18 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

20 &
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_F‹m©1
,

27 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_evítDeföôi⁄_f‹m©s_èg2ñ_2
[] = {

28 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

30 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_evítDeföôi⁄_f‹m©s_•ecs_2
 = {

31 (
E2SM_KPM_EvítTriggîDeföôi⁄__evítDeföôi⁄_f‹m©s
),

32 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄__evítDeföôi⁄_f‹m©s
, 
_a¢_˘x
),

33 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄__evítDeföôi⁄_f‹m©s
, 
¥e£¡
),

34 (((
E2SM_KPM_EvítTriggîDeföôi⁄__evítDeföôi⁄_f‹m©s
 *)0)->
¥e£¡
),

35 
a¢_MAP_evítDeföôi⁄_f‹m©s_èg2ñ_2
,

41 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_evítDeföôi⁄_f‹m©s_2
 = {

44 &
a¢_OP_CHOICE
,

49 { 0, &
a¢_PER_ty≥_evítDeföôi⁄_f‹m©s_c⁄°r_2
, 
CHOICE_c⁄°øöt
 },

50 
a¢_MBR_evítDeföôi⁄_f‹m©s_2
,

52 &
a¢_SPC_evítDeföôi⁄_f‹m©s_•ecs_2


55 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_EvítTriggîDeföôi⁄_1
[] = {

56 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄
, 
evítDeföôi⁄_f‹m©s
),

57 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

59 &
a¢_DEF_evítDeföôi⁄_f‹m©s_2
,

66 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
[] = {

67 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

69 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_EvítTriggîDeföôi⁄_èg2ñ_1
[] = {

70 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

72 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_EvítTriggîDeföôi⁄_•ecs_1
 = {

73 (
E2SM_KPM_EvítTriggîDeföôi⁄
),

74 
off£tof
(
E2SM_KPM_EvítTriggîDeföôi⁄
, 
_a¢_˘x
),

75 
a¢_MAP_E2SM_KPM_EvítTriggîDeföôi⁄_èg2ñ_1
,

80 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄
 = {

83 &
a¢_OP_SEQUENCE
,

84 
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
,

85 (
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
)

86 /(
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
[0]),

87 
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
,

88 (
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
)

89 /(
a¢_DEF_E2SM_KPM_EvítTriggîDeföôi⁄_ègs_1
[0]),

90 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

91 
a¢_MBR_E2SM_KPM_EvítTriggîDeföôi⁄_1
,

93 &
a¢_SPC_E2SM_KPM_EvítTriggîDeföôi⁄_•ecs_1


	@E2SM-KPM-IndicationHeader-Format1.c

8 
	~"E2SM-KPM-Indiˇti⁄Hódî-F‹m©1.h
"

10 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_3
[256] = {

20 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_3
[74] = {

28 
	$check_≥rmôãd_Æphabë_3
(c⁄° *
•å
) {

29 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_3
;

31 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

32 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

33 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

35 ; 
ch
 < 
íd
; ch++) {

36 
uöt8_t
 
cv
 = *
ch
;

37 if(!
èbÀ
[
cv
])  -1;

40 
	}
}

42 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_4
[256] = {

52 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_4
[74] = {

60 
	$check_≥rmôãd_Æphabë_4
(c⁄° *
•å
) {

61 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_4
;

63 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

64 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

65 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

67 ; 
ch
 < 
íd
; ch++) {

68 
uöt8_t
 
cv
 = *
ch
;

69 if(!
èbÀ
[
cv
])  -1;

72 
	}
}

74 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_5
[256] = {

84 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_5
[74] = {

92 
	$check_≥rmôãd_Æphabë_5
(c⁄° *
•å
) {

93 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_5
;

95 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

96 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

97 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

99 ; 
ch
 < 
íd
; ch++) {

100 
uöt8_t
 
cv
 = *
ch
;

101 if(!
èbÀ
[
cv
])  -1;

104 
	}
}

106 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_6
[256] = {

116 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_6
[74] = {

124 
	$check_≥rmôãd_Æphabë_6
(c⁄° *
•å
) {

125 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_6
;

127 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

128 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

129 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

131 ; 
ch
 < 
íd
; ch++) {

132 
uöt8_t
 
cv
 = *
ch
;

133 if(!
èbÀ
[
cv
])  -1;

136 
	}
}

139 
	$memb_fûeF‹m©vîsi⁄_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

140 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

141 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

142 
size_t
 
size
;

144 if(!
•å
) {

145 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

147 
td
->
«me
, 
__FILE__
, 
__LINE__
);

151 
size
 = 
°
->size;

153 if((
size
 <= 15)

154 && !
	`check_≥rmôãd_Æphabë_3
(
°
)) {

158 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

160 
td
->
«me
, 
__FILE__
, 
__LINE__
);

163 
	}
}

165 
	$a¢_PER_MAP_fûeF‹m©vîsi⁄_3_v2c
(
vÆue
) {

166 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_3
)/(permitted_alphabet_table_3[0]))

168  
≥rmôãd_Æphabë_èbÀ_3
[
vÆue
] - 1;

169 
	}
}

170 
	$a¢_PER_MAP_fûeF‹m©vîsi⁄_3_c2v
(
code
) {

171 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_3
)/(permitted_alphabet_code2value_3[0]))

173  
≥rmôãd_Æphabë_code2vÆue_3
[
code
];

174 
	}
}

176 
	$memb_£ndîName_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

177 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

178 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

179 
size_t
 
size
;

181 if(!
•å
) {

182 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

184 
td
->
«me
, 
__FILE__
, 
__LINE__
);

188 
size
 = 
°
->size;

190 if((
size
 <= 400)

191 && !
	`check_≥rmôãd_Æphabë_4
(
°
)) {

195 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

197 
td
->
«me
, 
__FILE__
, 
__LINE__
);

200 
	}
}

202 
	$a¢_PER_MAP_£ndîName_4_v2c
(
vÆue
) {

203 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_4
)/(permitted_alphabet_table_4[0]))

205  
≥rmôãd_Æphabë_èbÀ_4
[
vÆue
] - 1;

206 
	}
}

207 
	$a¢_PER_MAP_£ndîName_4_c2v
(
code
) {

208 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_4
)/(permitted_alphabet_code2value_4[0]))

210  
≥rmôãd_Æphabë_code2vÆue_4
[
code
];

211 
	}
}

213 
	$memb_£ndîTy≥_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

214 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

215 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

216 
size_t
 
size
;

218 if(!
•å
) {

219 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

221 
td
->
«me
, 
__FILE__
, 
__LINE__
);

225 
size
 = 
°
->size;

227 if((
size
 <= 8)

228 && !
	`check_≥rmôãd_Æphabë_5
(
°
)) {

232 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

234 
td
->
«me
, 
__FILE__
, 
__LINE__
);

237 
	}
}

239 
	$a¢_PER_MAP_£ndîTy≥_5_v2c
(
vÆue
) {

240 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_5
)/(permitted_alphabet_table_5[0]))

242  
≥rmôãd_Æphabë_èbÀ_5
[
vÆue
] - 1;

243 
	}
}

244 
	$a¢_PER_MAP_£ndîTy≥_5_c2v
(
code
) {

245 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_5
)/(permitted_alphabet_code2value_5[0]))

247  
≥rmôãd_Æphabë_code2vÆue_5
[
code
];

248 
	}
}

250 
	$memb_víd‹Name_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

251 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

252 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

253 
size_t
 
size
;

255 if(!
•å
) {

256 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

258 
td
->
«me
, 
__FILE__
, 
__LINE__
);

262 
size
 = 
°
->size;

264 if((
size
 <= 32)

265 && !
	`check_≥rmôãd_Æphabë_6
(
°
)) {

269 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

271 
td
->
«me
, 
__FILE__
, 
__LINE__
);

274 
	}
}

276 
	$a¢_PER_MAP_víd‹Name_6_v2c
(
vÆue
) {

277 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_6
)/(permitted_alphabet_table_6[0]))

279  
≥rmôãd_Æphabë_èbÀ_6
[
vÆue
] - 1;

280 
	}
}

281 
	$a¢_PER_MAP_víd‹Name_6_c2v
(
code
) {

282 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_6
)/(permitted_alphabet_code2value_6[0]))

284  
≥rmôãd_Æphabë_code2vÆue_6
[
code
];

285 
	}
}

286 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_fûeF‹m©vîsi⁄_c⁄°r_3
 
	gCC_NOTUSED
 = {

287 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

288 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 4, 4, 0, 15 } ,

289 
a¢_PER_MAP_fûeF‹m©vîsi⁄_3_v2c
,

290 
a¢_PER_MAP_fûeF‹m©vîsi⁄_3_c2v


292 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_£ndîName_c⁄°r_4
 
	gCC_NOTUSED
 = {

293 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

294 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 9, 9, 0, 400 } ,

295 
a¢_PER_MAP_£ndîName_4_v2c
,

296 
a¢_PER_MAP_£ndîName_4_c2v


298 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_£ndîTy≥_c⁄°r_5
 
	gCC_NOTUSED
 = {

299 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

300 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 4, 4, 0, 8 } ,

301 
a¢_PER_MAP_£ndîTy≥_5_v2c
,

302 
a¢_PER_MAP_£ndîTy≥_5_c2v


304 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_víd‹Name_c⁄°r_6
 
	gCC_NOTUSED
 = {

305 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

306 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 6, 6, 0, 32 } ,

307 
a¢_PER_MAP_víd‹Name_6_v2c
,

308 
a¢_PER_MAP_víd‹Name_6_c2v


310 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_1
[] = {

311 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
, 
cﬁÀtSèπTime
),

312 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

314 &
a¢_DEF_TimeSèmp
,

320 { 
ATF_POINTER
, 4, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
, 
fûeF‹m©vîsi⁄
),

321 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

323 &
a¢_DEF_PröèbÀSåög
,

325 { 0, &
a¢_PER_memb_fûeF‹m©vîsi⁄_c⁄°r_3
, 
memb_fûeF‹m©vîsi⁄_c⁄°øöt_1
 },

329 { 
ATF_POINTER
, 3, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
, 
£ndîName
),

330 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

332 &
a¢_DEF_PröèbÀSåög
,

334 { 0, &
a¢_PER_memb_£ndîName_c⁄°r_4
, 
memb_£ndîName_c⁄°øöt_1
 },

338 { 
ATF_POINTER
, 2, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
, 
£ndîTy≥
),

339 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

341 &
a¢_DEF_PröèbÀSåög
,

343 { 0, &
a¢_PER_memb_£ndîTy≥_c⁄°r_5
, 
memb_£ndîTy≥_c⁄°øöt_1
 },

347 { 
ATF_POINTER
, 1, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
, 
víd‹Name
),

348 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

350 &
a¢_DEF_PröèbÀSåög
,

352 { 0, &
a¢_PER_memb_víd‹Name_c⁄°r_6
, 
memb_víd‹Name_c⁄°øöt_1
 },

357 c⁄° 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_oms_1
[] = { 1, 2, 3, 4 };

358 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
[] = {

359 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

361 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_èg2ñ_1
[] = {

362 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

363 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

364 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

365 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

366 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 }

368 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_•ecs_1
 = {

369 (
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
),

370 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
, 
_a¢_˘x
),

371 
a¢_MAP_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_èg2ñ_1
,

373 
a¢_MAP_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_oms_1
,

377 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
 = {

380 &
a¢_OP_SEQUENCE
,

381 
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
,

382 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
)

383 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
[0]),

384 
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
,

385 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
)

386 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_ègs_1
[0]),

387 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

388 
a¢_MBR_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_1
,

390 &
a¢_SPC_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1_•ecs_1


	@E2SM-KPM-IndicationHeader.c

8 
	~"E2SM-KPM-Indiˇti⁄Hódî.h
"

10 
	~"E2SM-KPM-Indiˇti⁄Hódî-F‹m©1.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ödiˇti⁄Hódî_f‹m©s_c⁄°r_2
 
	gCC_NOTUSED
 = {

12 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

13 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_ödiˇti⁄Hódî_f‹m©s_2
[] = {

17 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî__ödiˇti⁄Hódî_f‹m©s
, 
choi˚
.
ödiˇti⁄Hódî_F‹m©1
),

18 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

20 &
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_F‹m©1
,

27 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_ödiˇti⁄Hódî_f‹m©s_èg2ñ_2
[] = {

28 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

30 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_ödiˇti⁄Hódî_f‹m©s_•ecs_2
 = {

31 (
E2SM_KPM_Indiˇti⁄Hódî__ödiˇti⁄Hódî_f‹m©s
),

32 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî__ödiˇti⁄Hódî_f‹m©s
, 
_a¢_˘x
),

33 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî__ödiˇti⁄Hódî_f‹m©s
, 
¥e£¡
),

34 (((
E2SM_KPM_Indiˇti⁄Hódî__ödiˇti⁄Hódî_f‹m©s
 *)0)->
¥e£¡
),

35 
a¢_MAP_ödiˇti⁄Hódî_f‹m©s_èg2ñ_2
,

41 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ödiˇti⁄Hódî_f‹m©s_2
 = {

44 &
a¢_OP_CHOICE
,

49 { 0, &
a¢_PER_ty≥_ödiˇti⁄Hódî_f‹m©s_c⁄°r_2
, 
CHOICE_c⁄°øöt
 },

50 
a¢_MBR_ödiˇti⁄Hódî_f‹m©s_2
,

52 &
a¢_SPC_ödiˇti⁄Hódî_f‹m©s_•ecs_2


55 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_Indiˇti⁄Hódî_1
[] = {

56 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî
, 
ödiˇti⁄Hódî_f‹m©s
),

57 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

59 &
a¢_DEF_ödiˇti⁄Hódî_f‹m©s_2
,

66 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
[] = {

67 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

69 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Hódî_èg2ñ_1
[] = {

70 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

72 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_Indiˇti⁄Hódî_•ecs_1
 = {

73 (
E2SM_KPM_Indiˇti⁄Hódî
),

74 
off£tof
(
E2SM_KPM_Indiˇti⁄Hódî
, 
_a¢_˘x
),

75 
a¢_MAP_E2SM_KPM_Indiˇti⁄Hódî_èg2ñ_1
,

80 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Hódî
 = {

83 &
a¢_OP_SEQUENCE
,

84 
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
,

85 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
)

86 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
[0]),

87 
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
,

88 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
)

89 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Hódî_ègs_1
[0]),

90 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

91 
a¢_MBR_E2SM_KPM_Indiˇti⁄Hódî_1
,

93 &
a¢_SPC_E2SM_KPM_Indiˇti⁄Hódî_•ecs_1


	@E2SM-KPM-IndicationMessage-Format1.c

8 
	~"E2SM-KPM-Indiˇti⁄Mesßge-F‹m©1.h
"

10 
	~"MósuªmítInfoLi°.h
"

11 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_1
[] = {

12 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
, 
mósD©a
),

13 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

15 &
a¢_DEF_MósuªmítD©a
,

21 { 
ATF_POINTER
, 2, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
, 
mósInfoLi°
),

22 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

24 &
a¢_DEF_MósuªmítInfoLi°
,

30 { 
ATF_POINTER
, 1, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
, 
gønulPîiod
),

31 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

33 &
a¢_DEF_GønuœrôyPîiod
,

40 c⁄° 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_oms_1
[] = { 1, 2 };

41 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
[] = {

42 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

44 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_èg2ñ_1
[] = {

45 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

46 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

47 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

49 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_•ecs_1
 = {

50 (
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
),

51 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
, 
_a¢_˘x
),

52 
a¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_èg2ñ_1
,

54 
a¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_oms_1
,

58 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
 = {

61 &
a¢_OP_SEQUENCE
,

62 
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
,

63 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
)

64 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
[0]),

65 
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
,

66 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
)

67 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_ègs_1
[0]),

68 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

69 
a¢_MBR_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_1
,

71 &
a¢_SPC_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1_•ecs_1


	@E2SM-KPM-IndicationMessage-Format2.c

8 
	~"E2SM-KPM-Indiˇti⁄Mesßge-F‹m©2.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
, 
mósD©a
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_MósuªmítD©a
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
, 
mósC⁄dUEidLi°
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_MósuªmítC⁄dUEidLi°
,

29 { 
ATF_POINTER
, 1, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
, 
gønulPîiod
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_GønuœrôyPîiod
,

39 c⁄° 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_oms_1
[] = { 2 };

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

43 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_èg2ñ_1
[] = {

44 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

45 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

46 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

48 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_•ecs_1
 = {

49 (
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
),

50 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
, 
_a¢_˘x
),

51 
a¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_èg2ñ_1
,

53 
a¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_oms_1
,

57 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
 = {

60 &
a¢_OP_SEQUENCE
,

61 
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
,

62 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
)

63 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
[0]),

64 
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
,

65 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
)

66 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_ègs_1
[0]),

67 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

68 
a¢_MBR_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_1
,

70 &
a¢_SPC_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2_•ecs_1


	@E2SM-KPM-IndicationMessage.c

8 
	~"E2SM-KPM-Indiˇti⁄Mesßge.h
"

10 
	~"E2SM-KPM-Indiˇti⁄Mesßge-F‹m©1.h
"

11 
	~"E2SM-KPM-Indiˇti⁄Mesßge-F‹m©2.h
"

12 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ödiˇti⁄Mesßge_f‹m©s_c⁄°r_2
 
	gCC_NOTUSED
 = {

13 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

14 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

17 
a¢_TYPE_membî_t
 
	ga¢_MBR_ödiˇti⁄Mesßge_f‹m©s_2
[] = {

18 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge__ödiˇti⁄Mesßge_f‹m©s
, 
choi˚
.
ödiˇti⁄Mesßge_F‹m©1
),

19 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

21 &
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©1
,

27 { 
ATF_POINTER
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge__ödiˇti⁄Mesßge_f‹m©s
, 
choi˚
.
ödiˇti⁄Mesßge_F‹m©2
),

28 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

30 &
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_F‹m©2
,

37 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_ödiˇti⁄Mesßge_f‹m©s_èg2ñ_2
[] = {

38 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

39 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

41 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_ödiˇti⁄Mesßge_f‹m©s_•ecs_2
 = {

42 (
E2SM_KPM_Indiˇti⁄Mesßge__ödiˇti⁄Mesßge_f‹m©s
),

43 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge__ödiˇti⁄Mesßge_f‹m©s
, 
_a¢_˘x
),

44 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge__ödiˇti⁄Mesßge_f‹m©s
, 
¥e£¡
),

45 (((
E2SM_KPM_Indiˇti⁄Mesßge__ödiˇti⁄Mesßge_f‹m©s
 *)0)->
¥e£¡
),

46 
a¢_MAP_ödiˇti⁄Mesßge_f‹m©s_èg2ñ_2
,

52 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ödiˇti⁄Mesßge_f‹m©s_2
 = {

55 &
a¢_OP_CHOICE
,

60 { 0, &
a¢_PER_ty≥_ödiˇti⁄Mesßge_f‹m©s_c⁄°r_2
, 
CHOICE_c⁄°øöt
 },

61 
a¢_MBR_ödiˇti⁄Mesßge_f‹m©s_2
,

63 &
a¢_SPC_ödiˇti⁄Mesßge_f‹m©s_•ecs_2


66 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_Indiˇti⁄Mesßge_1
[] = {

67 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge
, 
ödiˇti⁄Mesßge_f‹m©s
),

68 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

70 &
a¢_DEF_ödiˇti⁄Mesßge_f‹m©s_2
,

77 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
[] = {

78 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

80 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_èg2ñ_1
[] = {

81 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

83 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_Indiˇti⁄Mesßge_•ecs_1
 = {

84 (
E2SM_KPM_Indiˇti⁄Mesßge
),

85 
off£tof
(
E2SM_KPM_Indiˇti⁄Mesßge
, 
_a¢_˘x
),

86 
a¢_MAP_E2SM_KPM_Indiˇti⁄Mesßge_èg2ñ_1
,

91 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge
 = {

94 &
a¢_OP_SEQUENCE
,

95 
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
,

96 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
)

97 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
[0]),

98 
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
,

99 (
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
)

100 /(
a¢_DEF_E2SM_KPM_Indiˇti⁄Mesßge_ègs_1
[0]),

101 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

102 
a¢_MBR_E2SM_KPM_Indiˇti⁄Mesßge_1
,

104 &
a¢_SPC_E2SM_KPM_Indiˇti⁄Mesßge_•ecs_1


	@E2SM-KPM-RANfunction-Description.c

8 
	~"E2SM-KPM-RANfun˘i⁄-Des¸ùti⁄.h
"

10 
	~"RIC-EvítTriggîStyÀ-Iãm.h
"

11 
	~"RIC-Rï‹tStyÀ-Iãm.h
"

13 
	$memb_ric_EvítTriggîStyÀ_Li°_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

14 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

15 
size_t
 
size
;

17 if(!
•å
) {

18 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

20 
td
->
«me
, 
__FILE__
, 
__LINE__
);

25 
size
 = 
	`_A_CSEQUENCE_FROM_VOID
(
•å
)->
cou¡
;

27 if((
size
 >= 1 && size <= 63)) {

29  
td
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
—d, 
•å
, 
˘Áûcb
, 
≠p_key
);

31 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

33 
td
->
«me
, 
__FILE__
, 
__LINE__
);

36 
	}
}

39 
	$memb_ric_Rï‹tStyÀ_Li°_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

40 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

41 
size_t
 
size
;

43 if(!
•å
) {

44 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

46 
td
->
«me
, 
__FILE__
, 
__LINE__
);

51 
size
 = 
	`_A_CSEQUENCE_FROM_VOID
(
•å
)->
cou¡
;

53 if((
size
 >= 1 && size <= 63)) {

55  
td
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
—d, 
•å
, 
˘Áûcb
, 
≠p_key
);

57 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

59 
td
->
«me
, 
__FILE__
, 
__LINE__
);

62 
	}
}

64 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ric_EvítTriggîStyÀ_Li°_c⁄°r_3
 
	gCC_NOTUSED
 = {

65 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

66 { 
APC_CONSTRAINED
, 6, 6, 1, 63 } ,

69 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ric_Rï‹tStyÀ_Li°_c⁄°r_5
 
	gCC_NOTUSED
 = {

70 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

71 { 
APC_CONSTRAINED
, 6, 6, 1, 63 } ,

74 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ric_EvítTriggîStyÀ_Li°_c⁄°r_3
 
	gCC_NOTUSED
 = {

75 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

76 { 
APC_CONSTRAINED
, 6, 6, 1, 63 } ,

79 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ric_Rï‹tStyÀ_Li°_c⁄°r_5
 
	gCC_NOTUSED
 = {

80 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

81 { 
APC_CONSTRAINED
, 6, 6, 1, 63 } ,

84 
a¢_TYPE_membî_t
 
	ga¢_MBR_ric_EvítTriggîStyÀ_Li°_3
[] = {

85 { 
ATF_POINTER
, 0, 0,

86 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

88 &
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm
,

95 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
[] = {

96 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

97 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

99 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_ric_EvítTriggîStyÀ_Li°_•ecs_3
 = {

100 (
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄__ric_EvítTriggîStyÀ_Li°
),

101 
off£tof
(
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄__ric_EvítTriggîStyÀ_Li°
, 
_a¢_˘x
),

105 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ric_EvítTriggîStyÀ_Li°_3
 = {

108 &
a¢_OP_SEQUENCE_OF
,

109 
a¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
,

110 (
a¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
)

111 /(
a¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
[0]) - 1,

112 
a¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
,

113 (
a¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
)

114 /(
a¢_DEF_ric_EvítTriggîStyÀ_Li°_ègs_3
[0]),

115 { 0, &
a¢_PER_ty≥_ric_EvítTriggîStyÀ_Li°_c⁄°r_3
, 
SEQUENCE_OF_c⁄°øöt
 },

116 
a¢_MBR_ric_EvítTriggîStyÀ_Li°_3
,

118 &
a¢_SPC_ric_EvítTriggîStyÀ_Li°_•ecs_3


121 
a¢_TYPE_membî_t
 
	ga¢_MBR_ric_Rï‹tStyÀ_Li°_5
[] = {

122 { 
ATF_POINTER
, 0, 0,

123 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

125 &
a¢_DEF_RIC_Rï‹tStyÀ_Iãm
,

132 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
[] = {

133 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

134 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

136 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_ric_Rï‹tStyÀ_Li°_•ecs_5
 = {

137 (
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄__ric_Rï‹tStyÀ_Li°
),

138 
off£tof
(
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄__ric_Rï‹tStyÀ_Li°
, 
_a¢_˘x
),

142 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ric_Rï‹tStyÀ_Li°_5
 = {

145 &
a¢_OP_SEQUENCE_OF
,

146 
a¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
,

147 (
a¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
)

148 /(
a¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
[0]) - 1,

149 
a¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
,

150 (
a¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
)

151 /(
a¢_DEF_ric_Rï‹tStyÀ_Li°_ègs_5
[0]),

152 { 0, &
a¢_PER_ty≥_ric_Rï‹tStyÀ_Li°_c⁄°r_5
, 
SEQUENCE_OF_c⁄°øöt
 },

153 
a¢_MBR_ric_Rï‹tStyÀ_Li°_5
,

155 &
a¢_SPC_ric_Rï‹tStyÀ_Li°_•ecs_5


158 
a¢_TYPE_membî_t
 
	ga¢_MBR_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_1
[] = {

159 { 
ATF_NOFLAGS
, 0, 
off£tof
(
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄
, 
ønFun˘i⁄_Name
),

160 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

162 &
a¢_DEF_RANfun˘i⁄_Name
,

168 { 
ATF_POINTER
, 2, 
off£tof
(
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄
, 
ric_EvítTriggîStyÀ_Li°
),

169 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

171 &
a¢_DEF_ric_EvítTriggîStyÀ_Li°_3
,

173 { 0, &
a¢_PER_memb_ric_EvítTriggîStyÀ_Li°_c⁄°r_3
, 
memb_ric_EvítTriggîStyÀ_Li°_c⁄°øöt_1
 },

177 { 
ATF_POINTER
, 1, 
off£tof
(
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄
, 
ric_Rï‹tStyÀ_Li°
),

178 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

180 &
a¢_DEF_ric_Rï‹tStyÀ_Li°_5
,

182 { 0, &
a¢_PER_memb_ric_Rï‹tStyÀ_Li°_c⁄°r_5
, 
memb_ric_Rï‹tStyÀ_Li°_c⁄°øöt_1
 },

187 c⁄° 
	ga¢_MAP_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_oms_1
[] = { 1, 2 };

188 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
[] = {

189 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

191 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_èg2ñ_1
[] = {

192 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

193 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

194 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

196 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_•ecs_1
 = {

197 (
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄
),

198 
off£tof
(
E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄
, 
_a¢_˘x
),

199 
a¢_MAP_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_èg2ñ_1
,

201 
a¢_MAP_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_oms_1
,

205 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄
 = {

208 &
a¢_OP_SEQUENCE
,

209 
a¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
,

210 (
a¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
)

211 /(
a¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
[0]),

212 
a¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
,

213 (
a¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
)

214 /(
a¢_DEF_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_ègs_1
[0]),

215 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

216 
a¢_MBR_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_1
,

218 &
a¢_SPC_E2SM_KPM_RANfun˘i⁄_Des¸ùti⁄_•ecs_1


	@EN-GNB-ID.c

8 
	~"EN-GNB-ID.h
"

11 
	$memb_í_gNB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 >= 22 && size <= 32)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

41 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_í_gNB_ID_c⁄°r_2
 
	gCC_NOTUSED
 = {

42 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

43 { 
APC_CONSTRAINED
, 4, 4, 22, 32 } ,

46 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_EN_GNB_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

47 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

48 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

51 
a¢_TYPE_membî_t
 
	ga¢_MBR_EN_GNB_ID_1
[] = {

52 { 
ATF_NOFLAGS
, 0, 
off£tof
(
EN_GNB_ID
, 
choi˚
.
í_gNB_ID
),

53 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

55 &
a¢_DEF_BIT_STRING
,

57 { 0, &
a¢_PER_memb_í_gNB_ID_c⁄°r_2
, 
memb_í_gNB_ID_c⁄°øöt_1
 },

62 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_EN_GNB_ID_èg2ñ_1
[] = {

63 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

65 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_EN_GNB_ID_•ecs_1
 = {

66 (
EN_GNB_ID
),

67 
off£tof
(
EN_GNB_ID
, 
_a¢_˘x
),

68 
off£tof
(
EN_GNB_ID
, 
¥e£¡
),

69 (((
EN_GNB_ID
 *)0)->
¥e£¡
),

70 
a¢_MAP_EN_GNB_ID_èg2ñ_1
,

75 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_EN_GNB_ID
 = {

78 &
a¢_OP_CHOICE
,

83 { 0, &
a¢_PER_ty≥_EN_GNB_ID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

84 
a¢_MBR_EN_GNB_ID_1
,

86 &
a¢_SPC_EN_GNB_ID_•ecs_1


	@ENB-ID.c

8 
	~"ENB-ID.h
"

11 
	$memb_ma¸o_eNB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 20)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

42 
	$memb_home_eNB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

43 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

44 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

45 
size_t
 
size
;

47 if(!
•å
) {

48 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

50 
td
->
«me
, 
__FILE__
, 
__LINE__
);

54 if(
°
->
size
 > 0) {

56 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

58 
size
 = 0;

61 if((
size
 == 28)) {

65 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

67 
td
->
«me
, 
__FILE__
, 
__LINE__
);

70 
	}
}

73 
	$memb_sh‹t_Ma¸o_eNB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

74 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

75 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

76 
size_t
 
size
;

78 if(!
•å
) {

79 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

81 
td
->
«me
, 
__FILE__
, 
__LINE__
);

85 if(
°
->
size
 > 0) {

87 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

89 
size
 = 0;

92 if((
size
 == 18)) {

96 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

98 
td
->
«me
, 
__FILE__
, 
__LINE__
);

101 
	}
}

104 
	$memb_l⁄g_Ma¸o_eNB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

105 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

106 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

107 
size_t
 
size
;

109 if(!
•å
) {

110 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

112 
td
->
«me
, 
__FILE__
, 
__LINE__
);

116 if(
°
->
size
 > 0) {

118 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

120 
size
 = 0;

123 if((
size
 == 21)) {

127 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

129 
td
->
«me
, 
__FILE__
, 
__LINE__
);

132 
	}
}

134 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ma¸o_eNB_ID_c⁄°r_2
 
	gCC_NOTUSED
 = {

135 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

136 { 
APC_CONSTRAINED
, 0, 0, 20, 20 } ,

139 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_home_eNB_ID_c⁄°r_3
 
	gCC_NOTUSED
 = {

140 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

141 { 
APC_CONSTRAINED
, 0, 0, 28, 28 } ,

144 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_sh‹t_Ma¸o_eNB_ID_c⁄°r_5
 
	gCC_NOTUSED
 = {

145 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

146 { 
APC_CONSTRAINED
, 0, 0, 18, 18 } ,

149 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_l⁄g_Ma¸o_eNB_ID_c⁄°r_6
 
	gCC_NOTUSED
 = {

150 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

151 { 
APC_CONSTRAINED
, 0, 0, 21, 21 } ,

154 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ENB_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

155 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

156 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

159 
a¢_TYPE_membî_t
 
	ga¢_MBR_ENB_ID_1
[] = {

160 { 
ATF_NOFLAGS
, 0, 
off£tof
(
ENB_ID
, 
choi˚
.
ma¸o_eNB_ID
),

161 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

163 &
a¢_DEF_BIT_STRING
,

165 { 0, &
a¢_PER_memb_ma¸o_eNB_ID_c⁄°r_2
, 
memb_ma¸o_eNB_ID_c⁄°øöt_1
 },

169 { 
ATF_NOFLAGS
, 0, 
off£tof
(
ENB_ID
, 
choi˚
.
home_eNB_ID
),

170 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

172 &
a¢_DEF_BIT_STRING
,

174 { 0, &
a¢_PER_memb_home_eNB_ID_c⁄°r_3
, 
memb_home_eNB_ID_c⁄°øöt_1
 },

178 { 
ATF_NOFLAGS
, 0, 
off£tof
(
ENB_ID
, 
choi˚
.
sh‹t_Ma¸o_eNB_ID
),

179 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

181 &
a¢_DEF_BIT_STRING
,

183 { 0, &
a¢_PER_memb_sh‹t_Ma¸o_eNB_ID_c⁄°r_5
, 
memb_sh‹t_Ma¸o_eNB_ID_c⁄°øöt_1
 },

187 { 
ATF_NOFLAGS
, 0, 
off£tof
(
ENB_ID
, 
choi˚
.
l⁄g_Ma¸o_eNB_ID
),

188 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

190 &
a¢_DEF_BIT_STRING
,

192 { 0, &
a¢_PER_memb_l⁄g_Ma¸o_eNB_ID_c⁄°r_6
, 
memb_l⁄g_Ma¸o_eNB_ID_c⁄°øöt_1
 },

197 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_ENB_ID_èg2ñ_1
[] = {

198 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

199 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

200 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

201 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 }

203 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_ENB_ID_•ecs_1
 = {

204 (
ENB_ID
),

205 
off£tof
(
ENB_ID
, 
_a¢_˘x
),

206 
off£tof
(
ENB_ID
, 
¥e£¡
),

207 (((
ENB_ID
 *)0)->
¥e£¡
),

208 
a¢_MAP_ENB_ID_èg2ñ_1
,

213 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ENB_ID
 = {

216 &
a¢_OP_CHOICE
,

221 { 0, &
a¢_PER_ty≥_ENB_ID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

222 
a¢_MBR_ENB_ID_1
,

224 &
a¢_SPC_ENB_ID_•ecs_1


	@ENB-UE-X2AP-ID-Extension.c

8 
	~"ENB-UE-X2AP-ID-Exãnsi⁄.h
"

11 
	$ENB_UE_X2AP_ID_Exãnsi⁄_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 4095)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ENB_UE_X2AP_ID_Exãnsi⁄_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 12, 12, 0, 4095 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
,

52 (
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
)

53 /(
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
[0]),

54 
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
,

55 (
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
)

56 /(
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_ENB_UE_X2AP_ID_Exãnsi⁄_c⁄°r_1
, 
ENB_UE_X2AP_ID_Exãnsi⁄_c⁄°øöt
 },

	@ENB-UE-X2AP-ID.c

8 
	~"ENB-UE-X2AP-ID.h
"

11 
	$ENB_UE_X2AP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 4095)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ENB_UE_X2AP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
, 12, 12, 0, 4095 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_ENB_UE_X2AP_ID_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ENB_UE_X2AP_ID
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_ENB_UE_X2AP_ID_ègs_1
,

52 (
a¢_DEF_ENB_UE_X2AP_ID_ègs_1
)

53 /(
a¢_DEF_ENB_UE_X2AP_ID_ègs_1
[0]),

54 
a¢_DEF_ENB_UE_X2AP_ID_ègs_1
,

55 (
a¢_DEF_ENB_UE_X2AP_ID_ègs_1
)

56 /(
a¢_DEF_ENB_UE_X2AP_ID_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_ENB_UE_X2AP_ID_c⁄°r_1
, 
ENB_UE_X2AP_ID_c⁄°øöt
 },

	@EUTRA-CGI.c

8 
	~"EUTRA-CGI.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_EUTRA_CGI_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
EUTRA_CGI
, 
pLMNIdítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
EUTRA_CGI
, 
eUTRACñlIdítôy
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_EUTRACñlIdítôy
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_EUTRA_CGI_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_EUTRA_CGI_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_EUTRA_CGI_•ecs_1
 = {

38 (
EUTRA_CGI
),

39 
off£tof
(
EUTRA_CGI
, 
_a¢_˘x
),

40 
a¢_MAP_EUTRA_CGI_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_EUTRA_CGI
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_EUTRA_CGI_ègs_1
,

50 (
a¢_DEF_EUTRA_CGI_ègs_1
)

51 /(
a¢_DEF_EUTRA_CGI_ègs_1
[0]),

52 
a¢_DEF_EUTRA_CGI_ègs_1
,

53 (
a¢_DEF_EUTRA_CGI_ègs_1
)

54 /(
a¢_DEF_EUTRA_CGI_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_EUTRA_CGI_1
,

58 &
a¢_SPC_EUTRA_CGI_•ecs_1


	@EUTRACellIdentity.c

8 
	~"EUTRACñlIdítôy.h
"

11 
	$EUTRACñlIdítôy_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 28)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_EUTRACñlIdítôy_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

47 { 
APC_CONSTRAINED
, 0, 0, 28, 28 } ,

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_EUTRACñlIdítôy_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (3 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_EUTRACñlIdítôy
 = {

56 &
a¢_OP_BIT_STRING
,

57 
a¢_DEF_EUTRACñlIdítôy_ègs_1
,

58 (
a¢_DEF_EUTRACñlIdítôy_ègs_1
)

59 /(
a¢_DEF_EUTRACñlIdítôy_ègs_1
[0]),

60 
a¢_DEF_EUTRACñlIdítôy_ègs_1
,

61 (
a¢_DEF_EUTRACñlIdítôy_ègs_1
)

62 /(
a¢_DEF_EUTRACñlIdítôy_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_EUTRACñlIdítôy_c⁄°r_1
, 
EUTRACñlIdítôy_c⁄°øöt
 },

65 &
a¢_SPC_BIT_STRING_•ecs


	@FiveGS-TAC.c

8 
	~"FiveGS-TAC.h
"

11 
	$FiveGS_TAC_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 3)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_FiveGS_TAC_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 3, 3 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_FiveGS_TAC_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_FiveGS_TAC
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_FiveGS_TAC_ègs_1
,

53 (
a¢_DEF_FiveGS_TAC_ègs_1
)

54 /(
a¢_DEF_FiveGS_TAC_ègs_1
[0]),

55 
a¢_DEF_FiveGS_TAC_ègs_1
,

56 (
a¢_DEF_FiveGS_TAC_ègs_1
)

57 /(
a¢_DEF_FiveGS_TAC_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_FiveGS_TAC_c⁄°r_1
, 
FiveGS_TAC_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@FiveQI.c

8 
	~"FiveQI.h
"

11 
	$FiveQI_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 255)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_FiveQI_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 8, 8, 0, 255 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_FiveQI_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_FiveQI
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_FiveQI_ègs_1
,

52 (
a¢_DEF_FiveQI_ègs_1
)

53 /(
a¢_DEF_FiveQI_ègs_1
[0]),

54 
a¢_DEF_FiveQI_ègs_1
,

55 (
a¢_DEF_FiveQI_ègs_1
)

56 /(
a¢_DEF_FiveQI_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_FiveQI_c⁄°r_1
, 
FiveQI_c⁄°øöt
 },

	@FreqBandNrItem.c

8 
	~"FªqB™dNrIãm.h
"

11 
	$memb_‰eqB™dIndiˇt‹Nr_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 1024)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

35 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_‰eqB™dIndiˇt‹Nr_c⁄°r_2
 
	gCC_NOTUSED
 = {

36 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 10, 10, 1, 1024 } ,

37 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

40 
a¢_TYPE_membî_t
 
	ga¢_MBR_FªqB™dNrIãm_1
[] = {

41 { 
ATF_NOFLAGS
, 0, 
off£tof
(
FªqB™dNrIãm
, 
‰eqB™dIndiˇt‹Nr
),

42 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

44 &
a¢_DEF_N©iveI¡egî
,

46 { 0, &
a¢_PER_memb_‰eqB™dIndiˇt‹Nr_c⁄°r_2
, 
memb_‰eqB™dIndiˇt‹Nr_c⁄°øöt_1
 },

51 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_FªqB™dNrIãm_ègs_1
[] = {

52 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

54 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_FªqB™dNrIãm_èg2ñ_1
[] = {

55 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

57 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_FªqB™dNrIãm_•ecs_1
 = {

58 (
FªqB™dNrIãm
),

59 
off£tof
(
FªqB™dNrIãm
, 
_a¢_˘x
),

60 
a¢_MAP_FªqB™dNrIãm_èg2ñ_1
,

65 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_FªqB™dNrIãm
 = {

68 &
a¢_OP_SEQUENCE
,

69 
a¢_DEF_FªqB™dNrIãm_ègs_1
,

70 (
a¢_DEF_FªqB™dNrIãm_ègs_1
)

71 /(
a¢_DEF_FªqB™dNrIãm_ègs_1
[0]),

72 
a¢_DEF_FªqB™dNrIãm_ègs_1
,

73 (
a¢_DEF_FªqB™dNrIãm_ègs_1
)

74 /(
a¢_DEF_FªqB™dNrIãm_ègs_1
[0]),

75 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

76 
a¢_MBR_FªqB™dNrIãm_1
,

78 &
a¢_SPC_FªqB™dNrIãm_•ecs_1


	@GNB-CU-CP-UE-E1AP-ID.c

8 
	~"GNB-CU-CP-UE-E1AP-ID.h
"

11 
	$GNB_CU_CP_UE_E1AP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

14 if(!
•å
) {

15 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

17 
td
->
«me
, 
__FILE__
, 
__LINE__
);

24 
	}
}

30 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GNB_CU_CP_UE_E1AP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

31 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

32 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

35 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_GNB_CU_CP_UE_E1AP_ID_•ecs_1
 = {

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

43 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GNB_CU_CP_UE_E1AP_ID
 = {

46 &
a¢_OP_N©iveI¡egî
,

47 
a¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
,

48 (
a¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
)

49 /(
a¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
[0]),

50 
a¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
,

51 (
a¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
)

52 /(
a¢_DEF_GNB_CU_CP_UE_E1AP_ID_ègs_1
[0]),

53 { 0, &
a¢_PER_ty≥_GNB_CU_CP_UE_E1AP_ID_c⁄°r_1
, 
GNB_CU_CP_UE_E1AP_ID_c⁄°øöt
 },

55 &
a¢_SPC_GNB_CU_CP_UE_E1AP_ID_•ecs_1


	@GNB-CU-UE-F1AP-ID.c

8 
	~"GNB-CU-UE-F1AP-ID.h
"

11 
	$GNB_CU_UE_F1AP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

14 if(!
•å
) {

15 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

17 
td
->
«me
, 
__FILE__
, 
__LINE__
);

24 
	}
}

30 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GNB_CU_UE_F1AP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

31 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

32 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

35 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_GNB_CU_UE_F1AP_ID_•ecs_1
 = {

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

43 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GNB_CU_UE_F1AP_ID
 = {

46 &
a¢_OP_N©iveI¡egî
,

47 
a¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
,

48 (
a¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
)

49 /(
a¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
[0]),

50 
a¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
,

51 (
a¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
)

52 /(
a¢_DEF_GNB_CU_UE_F1AP_ID_ègs_1
[0]),

53 { 0, &
a¢_PER_ty≥_GNB_CU_UE_F1AP_ID_c⁄°r_1
, 
GNB_CU_UE_F1AP_ID_c⁄°øöt
 },

55 &
a¢_SPC_GNB_CU_UE_F1AP_ID_•ecs_1


	@GNB-CU-UP-ID.c

8 
	~"GNB-CU-UP-ID.h
"

11 
	$GNB_CU_UP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

14 
vÆue
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
)) {

24 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

26 
td
->
«me
, 
__FILE__
, 
__LINE__
);

30 if((
vÆue
 >= 0 && value <= 68719476735)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GNB_CU_UP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_CONSTRAINED
, 36, -1, 0, 68719476735 } ,

47 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GNB_CU_UP_ID_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GNB_CU_UP_ID
 = {

56 &
a¢_OP_INTEGER
,

57 
a¢_DEF_GNB_CU_UP_ID_ègs_1
,

58 (
a¢_DEF_GNB_CU_UP_ID_ègs_1
)

59 /(
a¢_DEF_GNB_CU_UP_ID_ègs_1
[0]),

60 
a¢_DEF_GNB_CU_UP_ID_ègs_1
,

61 (
a¢_DEF_GNB_CU_UP_ID_ègs_1
)

62 /(
a¢_DEF_GNB_CU_UP_ID_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_GNB_CU_UP_ID_c⁄°r_1
, 
GNB_CU_UP_ID_c⁄°øöt
 },

	@GNB-DU-ID.c

8 
	~"GNB-DU-ID.h
"

11 
	$GNB_DU_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

14 
vÆue
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
)) {

24 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

26 
td
->
«me
, 
__FILE__
, 
__LINE__
);

30 if((
vÆue
 >= 0 && value <= 68719476735)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GNB_DU_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_CONSTRAINED
, 36, -1, 0, 68719476735 } ,

47 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GNB_DU_ID_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GNB_DU_ID
 = {

56 &
a¢_OP_INTEGER
,

57 
a¢_DEF_GNB_DU_ID_ègs_1
,

58 (
a¢_DEF_GNB_DU_ID_ègs_1
)

59 /(
a¢_DEF_GNB_DU_ID_ègs_1
[0]),

60 
a¢_DEF_GNB_DU_ID_ègs_1
,

61 (
a¢_DEF_GNB_DU_ID_ègs_1
)

62 /(
a¢_DEF_GNB_DU_ID_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_GNB_DU_ID_c⁄°r_1
, 
GNB_DU_ID_c⁄°øöt
 },

	@GNB-ID.c

8 
	~"GNB-ID.h
"

11 
	$memb_gNB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 >= 22 && size <= 32)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

41 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_gNB_ID_c⁄°r_2
 
	gCC_NOTUSED
 = {

42 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

43 { 
APC_CONSTRAINED
, 4, 4, 22, 32 } ,

46 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GNB_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

47 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

48 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

51 
a¢_TYPE_membî_t
 
	ga¢_MBR_GNB_ID_1
[] = {

52 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GNB_ID
, 
choi˚
.
gNB_ID
),

53 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

55 &
a¢_DEF_BIT_STRING
,

57 { 0, &
a¢_PER_memb_gNB_ID_c⁄°r_2
, 
memb_gNB_ID_c⁄°øöt_1
 },

62 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GNB_ID_èg2ñ_1
[] = {

63 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

65 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_GNB_ID_•ecs_1
 = {

66 (
GNB_ID
),

67 
off£tof
(
GNB_ID
, 
_a¢_˘x
),

68 
off£tof
(
GNB_ID
, 
¥e£¡
),

69 (((
GNB_ID
 *)0)->
¥e£¡
),

70 
a¢_MAP_GNB_ID_èg2ñ_1
,

75 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GNB_ID
 = {

78 &
a¢_OP_CHOICE
,

83 { 0, &
a¢_PER_ty≥_GNB_ID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

84 
a¢_MBR_GNB_ID_1
,

86 &
a¢_SPC_GNB_ID_•ecs_1


	@GUAMI.c

8 
	~"GUAMI.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_GUAMI_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUAMI
, 
pLMNIdítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUAMI
, 
aMFRegi⁄ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_AMFRegi⁄ID
,

29 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUAMI
, 
aMFSëID
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_AMFSëID
,

38 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUAMI
, 
aMFPoöãr
),

39 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

41 &
a¢_DEF_AMFPoöãr
,

48 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GUAMI_ègs_1
[] = {

49 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

51 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GUAMI_èg2ñ_1
[] = {

52 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

53 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

54 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

55 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 }

57 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_GUAMI_•ecs_1
 = {

58 (
GUAMI
),

59 
off£tof
(
GUAMI
, 
_a¢_˘x
),

60 
a¢_MAP_GUAMI_èg2ñ_1
,

65 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GUAMI
 = {

68 &
a¢_OP_SEQUENCE
,

69 
a¢_DEF_GUAMI_ègs_1
,

70 (
a¢_DEF_GUAMI_ègs_1
)

71 /(
a¢_DEF_GUAMI_ègs_1
[0]),

72 
a¢_DEF_GUAMI_ègs_1
,

73 (
a¢_DEF_GUAMI_ègs_1
)

74 /(
a¢_DEF_GUAMI_ègs_1
[0]),

75 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

76 
a¢_MBR_GUAMI_1
,

78 &
a¢_SPC_GUAMI_•ecs_1


	@GUMMEI.c

8 
	~"GUMMEI.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_GUMMEI_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUMMEI
, 
pLMN_Idítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUMMEI
, 
mME_Group_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_MME_Group_ID
,

29 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GUMMEI
, 
mME_Code
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_MME_Code
,

39 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GUMMEI_ègs_1
[] = {

40 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

42 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GUMMEI_èg2ñ_1
[] = {

43 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

44 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

45 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

47 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_GUMMEI_•ecs_1
 = {

48 (
GUMMEI
),

49 
off£tof
(
GUMMEI
, 
_a¢_˘x
),

50 
a¢_MAP_GUMMEI_èg2ñ_1
,

55 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GUMMEI
 = {

58 &
a¢_OP_SEQUENCE
,

59 
a¢_DEF_GUMMEI_ègs_1
,

60 (
a¢_DEF_GUMMEI_ègs_1
)

61 /(
a¢_DEF_GUMMEI_ègs_1
[0]),

62 
a¢_DEF_GUMMEI_ègs_1
,

63 (
a¢_DEF_GUMMEI_ègs_1
)

64 /(
a¢_DEF_GUMMEI_ègs_1
[0]),

65 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

66 
a¢_MBR_GUMMEI_1
,

68 &
a¢_SPC_GUMMEI_•ecs_1


	@GlobalENB-ID.c

8 
	~"GlobÆENB-ID.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_GlobÆENB_ID_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆENB_ID
, 
pLMNIdítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆENB_ID
, 
eNB_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_ENB_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GlobÆENB_ID_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GlobÆENB_ID_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_GlobÆENB_ID_•ecs_1
 = {

38 (
GlobÆENB_ID
),

39 
off£tof
(
GlobÆENB_ID
, 
_a¢_˘x
),

40 
a¢_MAP_GlobÆENB_ID_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GlobÆENB_ID
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_GlobÆENB_ID_ègs_1
,

50 (
a¢_DEF_GlobÆENB_ID_ègs_1
)

51 /(
a¢_DEF_GlobÆENB_ID_ègs_1
[0]),

52 
a¢_DEF_GlobÆENB_ID_ègs_1
,

53 (
a¢_DEF_GlobÆENB_ID_ègs_1
)

54 /(
a¢_DEF_GlobÆENB_ID_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_GlobÆENB_ID_1
,

58 &
a¢_SPC_GlobÆENB_ID_•ecs_1


	@GlobalGNB-ID.c

8 
	~"GlobÆGNB-ID.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_GlobÆGNB_ID_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆGNB_ID
, 
pLMNIdítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆGNB_ID
, 
gNB_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_GNB_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GlobÆGNB_ID_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GlobÆGNB_ID_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_GlobÆGNB_ID_•ecs_1
 = {

38 (
GlobÆGNB_ID
),

39 
off£tof
(
GlobÆGNB_ID
, 
_a¢_˘x
),

40 
a¢_MAP_GlobÆGNB_ID_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GlobÆGNB_ID
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_GlobÆGNB_ID_ègs_1
,

50 (
a¢_DEF_GlobÆGNB_ID_ègs_1
)

51 /(
a¢_DEF_GlobÆGNB_ID_ègs_1
[0]),

52 
a¢_DEF_GlobÆGNB_ID_ègs_1
,

53 (
a¢_DEF_GlobÆGNB_ID_ègs_1
)

54 /(
a¢_DEF_GlobÆGNB_ID_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_GlobÆGNB_ID_1
,

58 &
a¢_SPC_GlobÆGNB_ID_•ecs_1


	@GlobalNGRANNodeID.c

8 
	~"GlobÆNGRANNodeID.h
"

10 
	~"GlobÆGNB-ID.h
"

11 
	~"GlobÆNgENB-ID.h
"

12 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GlobÆNGRANNodeID_c⁄°r_1
 
	gCC_NOTUSED
 = {

13 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

14 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

17 
a¢_TYPE_membî_t
 
	ga¢_MBR_GlobÆNGRANNodeID_1
[] = {

18 { 
ATF_POINTER
, 0, 
off£tof
(
GlobÆNGRANNodeID
, 
choi˚
.
gNB
),

19 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

21 &
a¢_DEF_GlobÆGNB_ID
,

27 { 
ATF_POINTER
, 0, 
off£tof
(
GlobÆNGRANNodeID
, 
choi˚
.
ng_eNB
),

28 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

30 &
a¢_DEF_GlobÆNgENB_ID
,

37 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GlobÆNGRANNodeID_èg2ñ_1
[] = {

38 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

39 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

41 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_GlobÆNGRANNodeID_•ecs_1
 = {

42 (
GlobÆNGRANNodeID
),

43 
off£tof
(
GlobÆNGRANNodeID
, 
_a¢_˘x
),

44 
off£tof
(
GlobÆNGRANNodeID
, 
¥e£¡
),

45 (((
GlobÆNGRANNodeID
 *)0)->
¥e£¡
),

46 
a¢_MAP_GlobÆNGRANNodeID_èg2ñ_1
,

51 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GlobÆNGRANNodeID
 = {

54 &
a¢_OP_CHOICE
,

59 { 0, &
a¢_PER_ty≥_GlobÆNGRANNodeID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

60 
a¢_MBR_GlobÆNGRANNodeID_1
,

62 &
a¢_SPC_GlobÆNGRANNodeID_•ecs_1


	@GlobalNgENB-ID.c

8 
	~"GlobÆNgENB-ID.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_GlobÆNgENB_ID_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆNgENB_ID
, 
pLMNIdítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆNgENB_ID
, 
ngENB_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_NgENB_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GlobÆNgENB_ID_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GlobÆNgENB_ID_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_GlobÆNgENB_ID_•ecs_1
 = {

38 (
GlobÆNgENB_ID
),

39 
off£tof
(
GlobÆNgENB_ID
, 
_a¢_˘x
),

40 
a¢_MAP_GlobÆNgENB_ID_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GlobÆNgENB_ID
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_GlobÆNgENB_ID_ègs_1
,

50 (
a¢_DEF_GlobÆNgENB_ID_ègs_1
)

51 /(
a¢_DEF_GlobÆNgENB_ID_ègs_1
[0]),

52 
a¢_DEF_GlobÆNgENB_ID_ègs_1
,

53 (
a¢_DEF_GlobÆNgENB_ID_ègs_1
)

54 /(
a¢_DEF_GlobÆNgENB_ID_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_GlobÆNgENB_ID_1
,

58 &
a¢_SPC_GlobÆNgENB_ID_•ecs_1


	@GlobalenGNB-ID.c

8 
	~"GlobÆíGNB-ID.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_GlobÆíGNB_ID_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆíGNB_ID
, 
pLMN_Idítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GlobÆíGNB_ID
, 
í_gNB_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_EN_GNB_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GlobÆíGNB_ID_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GlobÆíGNB_ID_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_GlobÆíGNB_ID_•ecs_1
 = {

38 (
GlobÆíGNB_ID
),

39 
off£tof
(
GlobÆíGNB_ID
, 
_a¢_˘x
),

40 
a¢_MAP_GlobÆíGNB_ID_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GlobÆíGNB_ID
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_GlobÆíGNB_ID_ègs_1
,

50 (
a¢_DEF_GlobÆíGNB_ID_ègs_1
)

51 /(
a¢_DEF_GlobÆíGNB_ID_ègs_1
[0]),

52 
a¢_DEF_GlobÆíGNB_ID_ègs_1
,

53 (
a¢_DEF_GlobÆíGNB_ID_ègs_1
)

54 /(
a¢_DEF_GlobÆíGNB_ID_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_GlobÆíGNB_ID_1
,

58 &
a¢_SPC_GlobÆíGNB_ID_•ecs_1


	@GranularityPeriod.c

8 
	~"GønuœrôyPîiod.h
"

11 
	$GønuœrôyPîiod_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 4294967295)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GønuœrôyPîiod_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
, 32, -1, 1, 4294967295 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_GønuœrôyPîiod_•ecs_1
 = {

49 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_GønuœrôyPîiod_ègs_1
[] = {

50 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

52 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GønuœrôyPîiod
 = {

55 &
a¢_OP_N©iveI¡egî
,

56 
a¢_DEF_GønuœrôyPîiod_ègs_1
,

57 (
a¢_DEF_GønuœrôyPîiod_ègs_1
)

58 /(
a¢_DEF_GønuœrôyPîiod_ègs_1
[0]),

59 
a¢_DEF_GønuœrôyPîiod_ègs_1
,

60 (
a¢_DEF_GønuœrôyPîiod_ègs_1
)

61 /(
a¢_DEF_GønuœrôyPîiod_ègs_1
[0]),

62 { 0, &
a¢_PER_ty≥_GønuœrôyPîiod_c⁄°r_1
, 
GønuœrôyPîiod_c⁄°øöt
 },

64 &
a¢_SPC_GønuœrôyPîiod_•ecs_1


	@GroupID.c

8 
	~"GroupID.h
"

10 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_GroupID_c⁄°r_1
 
	gCC_NOTUSED
 = {

11 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

15 
a¢_TYPE_membî_t
 
	ga¢_MBR_GroupID_1
[] = {

16 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GroupID
, 
choi˚
.
fiveGC
),

17 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

19 &
a¢_DEF_FiveQI
,

25 { 
ATF_NOFLAGS
, 0, 
off£tof
(
GroupID
, 
choi˚
.
ePC
),

26 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

28 &
a¢_DEF_QCI
,

35 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_GroupID_èg2ñ_1
[] = {

36 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

37 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

39 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_GroupID_•ecs_1
 = {

40 (
GroupID
),

41 
off£tof
(
GroupID
, 
_a¢_˘x
),

42 
off£tof
(
GroupID
, 
¥e£¡
),

43 (((
GroupID
 *)0)->
¥e£¡
),

44 
a¢_MAP_GroupID_èg2ñ_1
,

49 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_GroupID
 = {

52 &
a¢_OP_CHOICE
,

57 { 0, &
a¢_PER_ty≥_GroupID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

58 
a¢_MBR_GroupID_1
,

60 &
a¢_SPC_GroupID_•ecs_1


	@INTEGER.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<INTEGER.h
>

8 
	~<a¢_codecs_¥im.h
>

9 
	~<î∫o.h
>

14 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_INTEGER_ègs
[] = {

15 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

17 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_INTEGER
 = {

18 
INTEGER_‰ì
,

19 
INTEGER_¥öt
,

20 
INTEGER_com∑ª
,

21 
bî_decode_¥imôive
,

22 
INTEGER_ícode_dî
,

23 
INTEGER_decode_xî
,

24 
INTEGER_ícode_xî
,

25 #ifde‡ 
ASN_DISABLE_OER_SUPPORT


29 
INTEGER_decode_€r
,

30 
INTEGER_ícode_€r
,

32 #ifdef 
ASN_DISABLE_PER_SUPPORT


38 
INTEGER_decode_u≥r
,

39 
INTEGER_ícode_u≥r
,

40 
INTEGER_decode_≠î
,

41 
INTEGER_ícode_≠î
,

43 
INTEGER_øndom_fûl
,

46 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_INTEGER
 = {

49 &
a¢_OP_INTEGER
,

50 
a¢_DEF_INTEGER_ègs
,

51 (
a¢_DEF_INTEGER_ègs
) / (asn_DEF_INTEGER_tags[0]),

52 
a¢_DEF_INTEGER_ègs
,

53 (
a¢_DEF_INTEGER_ègs
) / (asn_DEF_INTEGER_tags[0]),

54 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

62 
a¢_íc_rvÆ_t


63 
	$INTEGER_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

64 
èg_mode
, 
bî_év_èg_t
 
èg
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

65 *
≠p_key
) {

66 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

67 
a¢_íc_rvÆ_t
 
rvÆ
;

68 
INTEGER_t
 
ef„˘ive_öãgî
;

70 
	`ASN_DEBUG
("%s %sás INTEGER (tm=%d)",

71 
cb
?"Encodög":"E°im©ög", 
td
->
«me
, 
èg_mode
);

77 if(
°
->
buf
) {

78 
uöt8_t
 *
buf
 = 
°
->buf;

79 
uöt8_t
 *
íd1
 = 
buf
 + 
°
->
size
 - 1;

80 
shi·
;

83 ; 
buf
 < 
íd1
; buf++) {

91 *
buf
) {

92 0x00: if((
buf
[1] & 0x80) == 0)

95 0xff: if((
buf
[1] & 0x80))

103 
shi·
 = 
buf
 - 
°
->buf;

104 if(
shi·
) {

106 c⁄° 
uöt8_t
 *
c_buf
;

107 
uöt8_t
 *
nc_buf
;

108 } 
unc⁄°
;

109 
unc⁄°
.
c_buf
 = 
°
->
buf
;

110 
ef„˘ive_öãgî
.
buf
 = 
unc⁄°
.
nc_buf
 + 
shi·
;

111 
ef„˘ive_öãgî
.
size
 = 
°
->sizê- 
shi·
;

113 
°
 = &
ef„˘ive_öãgî
;

117 
rvÆ
 = 
	`dî_ícode_¥imôive
(
td
, 
°
, 
èg_mode
, 
èg
, 
cb
, 
≠p_key
);

118 if(
rvÆ
.
°ru˘uª_±r
 =&
ef„˘ive_öãgî
) {

119 
rvÆ
.
°ru˘uª_±r
 = 
•å
;

121  
rvÆ
;

122 
	}
}

124 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
INTEGER_m≠_íum2vÆue
(

125 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
, c⁄° *
l°¨t
,

126 c⁄° *
l°›
);

131 
ssize_t


132 
	$INTEGER__dump
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° 
INTEGER_t
 *
°
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
, 
∂aöOrXER
) {

133 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

134 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

135 
s¸©ch
[32];

136 
uöt8_t
 *
buf
 = 
°
->buf;

137 
uöt8_t
 *
buf_íd
 = 
°
->
buf
 + st->
size
;

138 
ötmax_t
 
vÆue
;

139 
ssize_t
 
wrŸe
 = 0;

140 *
p
;

141 
ªt
;

143 if(
•ecs
 && s≥cs->
fõld_unsig√d
)

144 
ªt
 = 
	`a¢_INTEGER2umax
(
°
, (
uötmax_t
 *)&
vÆue
);

146 
ªt
 = 
	`a¢_INTEGER2imax
(
°
, &
vÆue
);

149 if(
ªt
 == 0) {

150 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ
;

151 
ñ
 = (
vÆue
 >0 || !
•ecs
 || !•ecs->
fõld_unsig√d
)

152 ? 
	`INTEGER_m≠_vÆue2íum
(
•ecs
, 
vÆue
) : 0;

153 if(
ñ
) {

154 if(
∂aöOrXER
 == 0)

155  
	`a¢__f‹m©_to_ˇŒback
(
cb
, 
≠p_key
,

156 "%" 
ASN_PRIdMAX
 " (%s)", 
vÆue
, 
ñ
->
íum_«me
);

158  
	`a¢__f‹m©_to_ˇŒback
(
cb
, 
≠p_key
,

159 "<%s/>", 
ñ
->
íum_«me
);

160 } if(
∂aöOrXER
 && 
•ecs
 && s≥cs->
°ri˘_íumî©i⁄
) {

161 
	`ASN_DEBUG
("ASN.1 forbids dealing with "

163 
î∫o
 = 
EPERM
;

166  
	`a¢__f‹m©_to_ˇŒback
(
cb
, 
≠p_key
,

167 (
•ecs
 && s≥cs->
fõld_unsig√d
)

168 ? "%" 
ASN_PRIuMAX


169 : "%" 
ASN_PRIdMAX
,

170 
vÆue
);

172 } if(
∂aöOrXER
 && 
•ecs
 && s≥cs->
°ri˘_íumî©i⁄
) {

177 
	`ASN_DEBUG
("ASN.1 forbids dealing with "

179 
î∫o
 = 
EPERM
;

185 
p
 = 
s¸©ch
; 
buf
 < 
buf_íd
; buf++) {

186 c⁄° * c⁄° 
h2c
 = "0123456789ABCDEF";

187 if((
p
 - 
s¸©ch
Ë>(
ssize_t
)((scratch) - 4)) {

189 if(
	`cb
(
s¸©ch
, 
p
 - s¸©ch, 
≠p_key
) < 0)

191 
wrŸe
 +
p
 - 
s¸©ch
;

192 
p
 = 
s¸©ch
;

194 *
p
++ = 
h2c
[*
buf
 >> 4];

195 *
p
++ = 
h2c
[*
buf
 & 0x0F];

196 *
p
++ = 0x3a;

198 if(
p
 !
s¸©ch
)

199 
p
--;

201 
wrŸe
 +
p
 - 
s¸©ch
;

202  (
	`cb
(
s¸©ch
, 
p
 - s¸©ch, 
≠p_key
Ë< 0Ë? -1 : 
wrŸe
;

203 
	}
}

209 
	$INTEGER_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

210 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

211 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

212 
ssize_t
 
ªt
;

214 ()
ûevñ
;

216 if(!
°
 || !°->
buf
)

217 
ªt
 = 
	`cb
("<ab£¡>", 8, 
≠p_key
);

219 
ªt
 = 
	`INTEGER__dump
(
td
, 
°
, 
cb
, 
≠p_key
, 0);

221  (
ªt
 < 0) ? -1 : 0;

222 
	}
}

224 
	se2v_key
 {

225 c⁄° *
	m°¨t
;

226 c⁄° *
	m°›
;

227 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
	mvem≠
;

228 c⁄° *
	mevm≠
;

231 
	$INTEGER__com∑r_íum2vÆue
(c⁄° *
kp
, c⁄° *
am
) {

232 c⁄° 
e2v_key
 *
key
 = (c⁄° e2v_key *)
kp
;

233 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ
 = (c⁄°á¢_INTEGER_íum_m≠_à*)
am
;

234 c⁄° *
±r
, *
íd
, *
«me
;

237 
ñ
 = 
key
->
vem≠
 + key->
evm≠
[el - key->vemap];

240 
±r
 = 
key
->
°¨t
, 
íd
 = key->
°›
, 
«me
 = 
ñ
->
íum_«me
;

241 
±r
 < 
íd
;Öå++, 
«me
++) {

242 if(*
±r
 !*
«me
 || !*name)

243  *(c⁄° *)
±r


244 - *(c⁄° *)
«me
;

246  
«me
[0] ? -1 : 0;

247 
	}
}

249 c⁄° 
a¢_INTEGER_íum_m≠_t
 *

250 
	$INTEGER_m≠_íum2vÆue
(c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
, c⁄° *
l°¨t
,

251 c⁄° *
l°›
) {

252 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ_found
;

253 
cou¡
 = 
•ecs
 ? s≥cs->
m≠_cou¡
 : 0;

254 
e2v_key
 
key
;

255 c⁄° *
Õ
;

257 if(!
cou¡
Ë 
NULL
;

261 
l°¨t
++, 
Õ
 =Ü°¨t;Ü∞< 
l°›
;Üp++) {

262 *
Õ
) {

271 if(
Õ
 =
l°›
Ë 
NULL
;

272 
l°›
 = 
Õ
;

274 
key
.
°¨t
 = 
l°¨t
;

275 
key
.
°›
 = 
l°›
;

276 
key
.
vem≠
 = 
•ecs
->
vÆue2íum
;

277 
key
.
evm≠
 = 
•ecs
->
íum2vÆue
;

278 
ñ_found
 = (
a¢_INTEGER_íum_m≠_t
 *)
	`b£¨ch
(&
key
,

279 
•ecs
->
vÆue2íum
, 
cou¡
, (specs->value2enum[0]),

280 
INTEGER__com∑r_íum2vÆue
);

281 if(
ñ_found
) {

283 
ñ_found
 = 
key
.
vem≠
 + key.
evm≠
[el_found - key.vemap];

285  
ñ_found
;

286 
	}
}

289 
	$INTEGER__com∑r_vÆue2íum
(c⁄° *
kp
, c⁄° *
am
) {

290 
a
 = *(c⁄° *)
kp
;

291 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ
 = (c⁄°á¢_INTEGER_íum_m≠_à*)
am
;

292 
b
 = 
ñ
->
«t_vÆue
;

293 if(
a
 < 
b
)  -1;

294 if(
a
 =
b
)  0;

296 
	}
}

298 c⁄° 
a¢_INTEGER_íum_m≠_t
 *

299 
	$INTEGER_m≠_vÆue2íum
(c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
, 
vÆue
) {

300 
cou¡
 = 
•ecs
 ? s≥cs->
m≠_cou¡
 : 0;

301 if(!
cou¡
)  0;

302  (
a¢_INTEGER_íum_m≠_t
 *)
	`b£¨ch
(&
vÆue
, 
•ecs
->
vÆue2íum
,

303 
cou¡
, (
•ecs
->
vÆue2íum
[0]),

304 
INTEGER__com∑r_vÆue2íum
);

305 
	}
}

308 
	$INTEGER_°_¥óŒoc
(
INTEGER_t
 *
°
, 
mö_size
) {

309 *
p
 = 
	`MALLOC
(
mö_size
 + 1);

310 if(
p
) {

311 *
b
 = 
°
->
buf
;

312 
°
->
size
 = 0;

313 
°
->
buf
 = 
p
;

314 
	`FREEMEM
(
b
);

319 
	}
}

324 
xî_pbd_rvÆ


325 
	$INTEGER__xî_body_decode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

326 c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

327 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

328 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

329 
INTEGER_t
 *
°
 = (INTEGER_à*)
•å
;

330 
ötmax_t
 
dec_vÆue
;

331 
ötmax_t
 
hex_vÆue
 = 0;

332 c⁄° *
Õ
;

333 c⁄° *
l°¨t
 = (c⁄° *)
chunk_buf
;

334 c⁄° *
l°›
 = 
l°¨t
 + 
chunk_size
;

336 
ST_LEADSPACE
,

337 
ST_SKIPSPHEX
,

338 
ST_WAITDIGITS
,

339 
ST_DIGITS
,

340 
ST_DIGITS_TRAILSPACE
,

341 
ST_HEXDIGIT1
,

342 
ST_HEXDIGIT2
,

343 
ST_HEXDIGITS_TRAILSPACE
,

344 
ST_HEXCOLON
,

345 
ST_END_ENUM
,

346 
ST_UNEXPECTED


347 } 
°©e
 = 
ST_LEADSPACE
;

348 c⁄° *
dec_vÆue_°¨t
 = 0;

349 c⁄° *
dec_vÆue_íd
 = 0;

351 if(
chunk_size
)

352 
	`ASN_DEBUG
("INTEGER body %ld 0x%2x..0x%2x",

353 ()
chunk_size
, *
l°¨t
, 
l°›
[-1]);

355 if(
	`INTEGER_°_¥óŒoc
(
°
, (
chunk_size
/3) + 1))

356  
XPBD_SYSTEM_FAILURE
;

362 
Õ
 = 
l°¨t
;Ü∞< 
l°›
;Üp++) {

363 
lv
 = *
Õ
;

364 
lv
) {

366 
°©e
) {

367 
ST_LEADSPACE
:

368 
ST_DIGITS_TRAILSPACE
:

369 
ST_HEXDIGITS_TRAILSPACE
:

370 
ST_SKIPSPHEX
:

372 
ST_DIGITS
:

373 
dec_vÆue_íd
 = 
Õ
;

374 
°©e
 = 
ST_DIGITS_TRAILSPACE
;

376 
ST_HEXCOLON
:

377 
°©e
 = 
ST_HEXDIGITS_TRAILSPACE
;

384 if(
°©e
 =
ST_LEADSPACE
) {

385 
dec_vÆue
 = 0;

386 
dec_vÆue_°¨t
 = 
Õ
;

387 
°©e
 = 
ST_WAITDIGITS
;

392 if(
°©e
 =
ST_LEADSPACE
) {

393 
dec_vÆue
 = 0;

394 
dec_vÆue_°¨t
 = 
Õ
;

395 
°©e
 = 
ST_WAITDIGITS
;

401 
°©e
) {

402 
ST_DIGITS
: ;

403 
ST_SKIPSPHEX
:

404 
ST_HEXDIGIT1
:

405 
hex_vÆue
 = (
lv
 - 0x30) << 4;

406 
°©e
 = 
ST_HEXDIGIT2
;

408 
ST_HEXDIGIT2
:

409 
hex_vÆue
 +(
lv
 - 0x30);

410 
°©e
 = 
ST_HEXCOLON
;

411 
°
->
buf
[°->
size
++] = (
uöt8_t
)
hex_vÆue
;

413 
ST_HEXCOLON
:

414  
XPBD_BROKEN_ENCODING
;

415 
ST_LEADSPACE
:

416 
dec_vÆue
 = 0;

417 
dec_vÆue_°¨t
 = 
Õ
;

419 
ST_WAITDIGITS
:

420 
°©e
 = 
ST_DIGITS
;

427 if(
°©e
 =
ST_LEADSPACE
) {

428 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ
;

429 
ñ
 = 
	`INTEGER_m≠_íum2vÆue
(

430 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)

431 
td
->
•ecifics
, 
l°¨t
, 
l°›
);

432 if(
ñ
) {

433 
	`ASN_DEBUG
("Found \"%s\" => %ld",

434 
ñ
->
íum_«me
,Él->
«t_vÆue
);

435 
dec_vÆue
 = 
ñ
->
«t_vÆue
;

436 
°©e
 = 
ST_END_ENUM
;

437 
Õ
 = 
l°›
 - 1;

440 
	`ASN_DEBUG
("Unknown identifier for INTEGER");

442  
XPBD_BROKEN_ENCODING
;

444 if(
°©e
 =
ST_HEXCOLON
) {

446 
°©e
 = 
ST_HEXDIGIT1
;

448 } if(
°©e
 =
ST_DIGITS
) {

453 
	`ASN_DEBUG
("INTEGERÑe-evaluateás hex form");

454 
°©e
 = 
ST_SKIPSPHEX
;

455 
dec_vÆue_°¨t
 = 0;

456 
Õ
 = 
l°¨t
 - 1;

459 
	`ASN_DEBUG
("°©ê%dáà%ld", 
°©e
, ()(
Õ
 - 
l°¨t
));

465 
°©e
) {

466 
ST_SKIPSPHEX
:

467 
ST_LEADSPACE
:

468 
ST_HEXDIGIT1
:

469 
hex_vÆue
 = 
lv
 - ((lv < 0x61) ? 0x41 : 0x61);

470 
hex_vÆue
 += 10;

471 
hex_vÆue
 <<= 4;

472 
°©e
 = 
ST_HEXDIGIT2
;

474 
ST_HEXDIGIT2
:

475 
hex_vÆue
 +
lv
 - ((lv < 0x61) ? 0x41 : 0x61);

476 
hex_vÆue
 += 10;

477 
°
->
buf
[°->
size
++] = (
uöt8_t
)
hex_vÆue
;

478 
°©e
 = 
ST_HEXCOLON
;

480 
ST_DIGITS
:

481 
	`ASN_DEBUG
("INTEGERÑe-evaluateás hex form");

482 
°©e
 = 
ST_SKIPSPHEX
;

483 
dec_vÆue_°¨t
 = 0;

484 
Õ
 = 
l°¨t
 - 1;

493 
	`ASN_DEBUG
("INTEGER :: FoundÇon-numeric 0x%2xát %ld",

494 
lv
, ()(
Õ
 - 
l°¨t
));

495 
°©e
 = 
ST_UNEXPECTED
;

499 
°©e
) {

500 
ST_END_ENUM
:

503 
ST_DIGITS
:

504 
dec_vÆue_íd
 = 
l°›
;

506 
ST_DIGITS_TRAILSPACE
:

508 
	`a¢_°πoimax_lim
(
dec_vÆue_°¨t
, &
dec_vÆue_íd
, &
dec_vÆue
)) {

509 
ASN_STRTOX_OK
:

510 if(
•ecs
 && s≥cs->
fõld_unsig√d
 && (
uötmax_t
Ë
dec_vÆue
 <
ULONG_MAX
) {

512 } if(
dec_vÆue
 >
LONG_MIN
 && dec_vÆuê<
LONG_MAX
) {

519 
	`ASN_DEBUG
("INTEGERÉxceedsÜongÑange");

522 
ASN_STRTOX_ERROR_RANGE
:

523 
	`ASN_DEBUG
("INTEGER decodê%†hôÑ™gêlimô", 
td
->
«me
);

524  
XPBD_DECODER_LIMIT
;

525 
ASN_STRTOX_ERROR_INVAL
:

526 
ASN_STRTOX_EXPECT_MORE
:

527 
ASN_STRTOX_EXTRA_DATA
:

528  
XPBD_BROKEN_ENCODING
;

531 
ST_HEXCOLON
:

532 
ST_HEXDIGITS_TRAILSPACE
:

533 
°
->
buf
[°->
size
] = 0;

534  
XPBD_BODY_CONSUMED
;

535 
ST_HEXDIGIT1
:

536 
ST_HEXDIGIT2
:

537 
ST_SKIPSPHEX
:

538  
XPBD_BROKEN_ENCODING
;

539 
ST_LEADSPACE
:

541  
XPBD_NOT_BODY_IGNORE
;

542 
ST_WAITDIGITS
:

543 
ST_UNEXPECTED
:

544 
	`ASN_DEBUG
("INTEGER: Nÿu£fu»digô†(°©ê%d)", 
°©e
);

545  
XPBD_BROKEN_ENCODING
;

552 if(
	`a¢_imax2INTEGER
(
°
, 
dec_vÆue
)) {

553 
	`ASN_DEBUG
("INTEGER decodê%†c⁄vîsi⁄ faûed", 
td
->
«me
);

554  
XPBD_SYSTEM_FAILURE
;

557  
XPBD_BODY_CONSUMED
;

558 
	}
}

560 
a¢_dec_rvÆ_t


561 
	$INTEGER_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

562 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

563 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

564  
	`xî_decode_¥imôive
(
›t_codec_˘x
, 
td
,

565 
•å
, (
INTEGER_t
), 
›t_m«me
,

566 
buf_±r
, 
size
, 
INTEGER__xî_body_decode
);

567 
	}
}

569 
a¢_íc_rvÆ_t


570 
	$INTEGER_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

571 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

572 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

573 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

574 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

576 ()
ûevñ
;

577 ()
Êags
;

579 if(!
°
 || !°->
buf
)

580 
ASN__ENCODE_FAILED
;

582 
î
.
ícoded
 = 
	`INTEGER__dump
(
td
, 
°
, 
cb
, 
≠p_key
, 1);

583 if(
î
.
ícoded
 < 0Ë
ASN__ENCODE_FAILED
;

585 
	`ASN__ENCODED_OK
(
î
);

586 
	}
}

588 #i‚def 
ASN_DISABLE_PER_SUPPORT


590 
a¢_dec_rvÆ_t


591 
	$INTEGER_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

592 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

593 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

594 
a¢_≥r_d©a_t
 *
pd
) {

595 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

596 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

597 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

598 
INTEGER_t
 *
°
 = (INTEGER_à*)*
•å
;

599 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

600 
ª≥©
;

602 ()
›t_codec_˘x
;

604 if(!
°
) {

605 
°
 = (
INTEGER_t
 *)(*
•å
 = 
	`CALLOC
(1, (*st)));

606 if(!
°
Ë
ASN__DECODE_FAILED
;

609 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

610 
˘
 = 
c⁄°øöts
 ? &c⁄°øöts->
vÆue
 : 0;

612 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

613 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

614 if(
öext
 < 0Ë
ASN__DECODE_STARVED
;

615 if(
öext
Ë
˘
 = 0;

618 
	`FREEMEM
(
°
->
buf
);

619 
°
->
buf
 = 0;

620 
°
->
size
 = 0;

621 if(
˘
) {

622 if(
˘
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

623 
°
->
buf
 = (
uöt8_t
 *)
	`CALLOC
(1, 2);

624 if(!
°
->
buf
Ë
ASN__DECODE_FAILED
;

625 
°
->
size
 = 1;

626 } if(
˘
->
Êags
 & 
APC_CONSTRAINED
 && ct->
ønge_bôs
 >= 0) {

627 
size_t
 
size
 = (
˘
->
ønge_bôs
 + 7) >> 3;

628 
°
->
buf
 = (
uöt8_t
 *)
	`MALLOC
(1 + 
size
 + 1);

629 if(!
°
->
buf
Ë
ASN__DECODE_FAILED
;

630 
°
->
size
 = size;

635 if(
˘
 && ct->
Êags
 !
APC_UNCONSTRAINED
) {

637 
	`ASN_DEBUG
("I¡egî wôhÑ™gê%d bôs", 
˘
->
ønge_bôs
);

638 if(
˘
->
ønge_bôs
 >= 0) {

639 if((
size_t
)
˘
->
ønge_bôs
 > 8 * ())

640 
ASN__DECODE_FAILED
;

642 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

643 
uvÆue
 = 0;

644 if(
	`u≥r_gë_c⁄°øöed_whﬁe_numbî
(
pd
,

645 &
uvÆue
, 
˘
->
ønge_bôs
))

646 
ASN__DECODE_STARVED
;

647 
	`ASN_DEBUG
("Got value %lu +Üow %ld",

648 
uvÆue
, 
˘
->
lowî_bound
);

649 
uvÆue
 +
˘
->
lowî_bound
;

650 if(
	`a¢_ul⁄g2INTEGER
(
°
, 
uvÆue
))

651 
ASN__DECODE_FAILED
;

653 
uvÆue
 = 0;

654 
svÆue
;

655 if(
	`u≥r_gë_c⁄°øöed_whﬁe_numbî
(
pd
,

656 &
uvÆue
, 
˘
->
ønge_bôs
))

657 
ASN__DECODE_STARVED
;

658 
	`ASN_DEBUG
("Got value %lu +Üow %ld",

659 
uvÆue
, 
˘
->
lowî_bound
);

660 if(
	`≥r_l⁄g_ønge_uƒeba£
(
uvÆue
, 
˘
->
lowî_bound
,

661 
˘
->
uµî_bound
, &
svÆue
)

662 || 
	`a¢_l⁄g2INTEGER
(
°
, 
svÆue
)) {

663 
ASN__DECODE_FAILED
;

666  
rvÆ
;

669 
	`ASN_DEBUG
("Decodög unc⁄°øöed i¡egî %s", 
td
->
«me
);

674 
ssize_t
 
Àn
 = 0;

675 *
p
 = 
NULL
;

676 
ªt
 = 0;

679 
Àn
 = 
	`u≥r_gë_Àngth
(
pd
, -1, 0, &
ª≥©
);

680 if(
Àn
 < 0Ë
ASN__DECODE_STARVED
;

682 
p
 = 
	`REALLOC
(
°
->
buf
, st->
size
 + 
Àn
 + 1);

683 if(!
p
Ë
ASN__DECODE_FAILED
;

684 
°
->
buf
 = (
uöt8_t
 *)
p
;

686 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, &
°
->
buf
[°->
size
], 0, 8 * 
Àn
);

687 if(
ªt
 < 0Ë
ASN__DECODE_STARVED
;

688 
°
->
size
 +
Àn
;

689 } 
ª≥©
);

690 
°
->
buf
[°->
size
] = 0;

693 if(
˘
 && ct->
lowî_bound
) {

697 
vÆue
 = 0;

698 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
))

699 
ASN__DECODE_FAILED
;

700 if(
	`a¢_imax2INTEGER
(
°
, 
vÆue
 + 
˘
->
lowî_bound
))

701 
ASN__DECODE_FAILED
;

704  
rvÆ
;

705 
	}
}

707 
a¢_íc_rvÆ_t


708 
	$INTEGER_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

709 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

710 
a¢_≥r_ouç_t
 *
po
) {

711 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

712 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

713 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

714 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

715 c⁄° 
uöt8_t
 *
buf
;

716 c⁄° 
uöt8_t
 *
íd
;

717 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

718 
vÆue
 = 0;

720 if(!
°
 || st->
size
 =0Ë
ASN__ENCODE_FAILED
;

722 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

723 
˘
 = 
c⁄°øöts
 ? &c⁄°øöts->
vÆue
 : 0;

725 
î
.
ícoded
 = 0;

727 if(
˘
) {

728 
öext
 = 0;

729 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

730 
uvÆ
;

731 if(
	`a¢_INTEGER2ul⁄g
(
°
, &
uvÆ
))

732 
ASN__ENCODE_FAILED
;

734 if(
˘
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

735 if(
uvÆ
 < ()
˘
->
lowî_bound
)

736 
öext
 = 1;

737 } if(
˘
->
ønge_bôs
 >= 0) {

738 if(
uvÆ
 < ()
˘
->
lowî_bound


739 || 
uvÆ
 > ()
˘
->
uµî_bound
)

740 
öext
 = 1;

742 
	`ASN_DEBUG
("VÆuê%lu (%02x/%" 
ASN_PRI_SIZE
 ")Üb %lu ub %lu %s",

743 
uvÆ
, 
°
->
buf
[0], st->
size
,

744 
˘
->
lowî_bound
, ct->
uµî_bound
,

745 
öext
 ? "ext" : "fix");

746 
vÆue
 = 
uvÆ
;

748 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
))

749 
ASN__ENCODE_FAILED
;

751 if(
˘
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

752 if(
vÆue
 < 
˘
->
lowî_bound
)

753 
öext
 = 1;

754 } if(
˘
->
ønge_bôs
 >= 0) {

755 if(
vÆue
 < 
˘
->
lowî_bound


756 || 
vÆue
 > 
˘
->
uµî_bound
)

757 
öext
 = 1;

759 
	`ASN_DEBUG
("VÆuê%ld (%02x/%" 
ASN_PRI_SIZE
 ")Üb %ld ub %ld %s",

760 
vÆue
, 
°
->
buf
[0], st->
size
,

761 
˘
->
lowî_bound
, ct->
uµî_bound
,

762 
öext
 ? "ext" : "fix");

764 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

765 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

766 
ASN__ENCODE_FAILED
;

767 if(
öext
Ë
˘
 = 0;

768 } if(
öext
) {

769 
ASN__ENCODE_FAILED
;

775 if(
˘
 && ct->
ønge_bôs
 >= 0) {

776 
v
;

778 
	`ASN_DEBUG
("Encoding integer %ld (%lu) withÑange %d bits",

779 
vÆue
, vÆuê- 
˘
->
lowî_bound
, ct->
ønge_bôs
);

780 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

781 i‡–(()
˘
->
lowî_bound
 > ()(˘->
uµî_bound
)

782 || (()
vÆue
 < ()
˘
->
lowî_bound
))

783 || (()
vÆue
 > ()
˘
->
uµî_bound
)

785 
	`ASN_DEBUG
("Value %luÅo-be-encoded is outsideÅhe bounds [%lu, %lu]!",

786 
vÆue
, 
˘
->
lowî_bound
, ct->
uµî_bound
);

787 
ASN__ENCODE_FAILED
;

789 
v
 = ()
vÆue
 - ()
˘
->
lowî_bound
;

791 if(
	`≥r_l⁄g_ønge_ªba£
(
vÆue
, 
˘
->
lowî_bound
, ct->
uµî_bound
, &
v
)) {

792 
ASN__ENCODE_FAILED
;

795 if(
	`u≥r_put_c⁄°øöed_whﬁe_numbî_u
(
po
, 
v
, 
˘
->
ønge_bôs
))

796 
ASN__ENCODE_FAILED
;

797 
	`ASN__ENCODED_OK
(
î
);

800 if(
˘
 && ct->
lowî_bound
) {

801 
	`ASN_DEBUG
("Adju°Üowî boundÅÿ%ld", 
˘
->
lowî_bound
);

803 
ASN__ENCODE_FAILED
;

806 
buf
 = 
°
->buf, 
íd
 = st->bu‡+ st->
size
; buf <Énd;) {

807 
√ed_eom
 = 0;

808 
ssize_t
 
mayEncode
 = 
	`u≥r_put_Àngth
(
po
, 
íd
 - 
buf
, &
√ed_eom
);

809 if(
mayEncode
 < 0)

810 
ASN__ENCODE_FAILED
;

811 if(
	`≥r_put_m™y_bôs
(
po
, 
buf
, 8 * 
mayEncode
))

812 
ASN__ENCODE_FAILED
;

813 
buf
 +
mayEncode
;

814 if(
√ed_eom
 && 
	`u≥r_put_Àngth
(
po
, 0, 0)Ë
ASN__ENCODE_FAILED
;

817 
	`ASN__ENCODED_OK
(
î
);

818 
	}
}

820 
a¢_dec_rvÆ_t


821 
	$INTEGER_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

822 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

823 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

824 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = (c⁄°á¢_INTEGER_•ecifics_à*)
td
->
•ecifics
;

825 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

826 
INTEGER_t
 *
°
 = (INTEGER_à*)*
•å
;

827 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

828 
ª≥©
;

830 ()
›t_codec_˘x
;

832 if(!
°
) {

833 
°
 = (
INTEGER_t
 *)(*
•å
 = 
	`CALLOC
(1, (*st)));

834 if(!
°
Ë
ASN__DECODE_FAILED
;

837 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

838 
˘
 = 
c⁄°øöts
 ? &c⁄°øöts->
vÆue
 : 0;

840 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

841 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

842 if(
öext
 < 0Ë
ASN__DECODE_STARVED
;

843 if(
öext
Ë
˘
 = 0;

846 
	`FREEMEM
(
°
->
buf
);

847 
°
->
buf
 = 0;

848 
°
->
size
 = 0;

849 if(
˘
) {

850 if(
˘
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

851 
°
->
buf
 = (
uöt8_t
 *)
	`CALLOC
(1, 2);

852 if(!
°
->
buf
Ë
ASN__DECODE_FAILED
;

853 
°
->
size
 = 1;

854 } if(
˘
->
Êags
 & 
APC_CONSTRAINED
 && ct->
ønge_bôs
 >= 0) {

855 
size_t
 
size
 = (
˘
->
ønge_bôs
 + 7) >> 3;

856 
°
->
buf
 = (
uöt8_t
 *)
	`MALLOC
(1 + 
size
 + 1);

857 if(!
°
->
buf
Ë
ASN__DECODE_FAILED
;

858 
°
->
size
 = size;

863 if(
˘
 && ct->
Êags
 !
APC_UNCONSTRAINED
) {

865 
	`ASN_DEBUG
("I¡egî wôhÑ™gê%d bôs", 
˘
->
ønge_bôs
);

866 if(
˘
->
ønge_bôs
 >= 0) {

867 i‡(
˘
->
ønge_bôs
 > 16) {

868 
max_ønge_byãs
 = (
˘
->
ønge_bôs
 >> 3) +

869 (((
˘
->
ønge_bôs
 % 8) > 0) ? 1 : 0);

870 
Àngth
 = 0, 
i
;

871 
vÆue
 = 0;

873 
i
 = 1; ; i++) {

874 
uµî
 = 1 << 
i
;

875 i‡(
uµî
 >
max_ønge_byãs
)

878 
	`ASN_DEBUG
("C™Éncodê%d (%d byãsËö %d bôs", 
˘
->
ønge_bôs
,

879 
max_ønge_byãs
, 
i
);

881 i‡((
Àngth
 = 
	`≥r_gë_„w_bôs
(
pd
, 
i
)) < 0)

882 
ASN__DECODE_FAILED
;

885 
Àngth
 += 1;

886 
	`ASN_DEBUG
("GŸÜígth %d", 
Àngth
);

887 i‡(
	`≠î_gë_Æign
(
pd
) != 0)

888 
ASN__DECODE_FAILED
;

889 
Àngth
--) {

890 
buf
 = 
	`≥r_gë_„w_bôs
(
pd
, 8);

891 i‡(
buf
 < 0)

892 
ASN__DECODE_FAILED
;

893 
vÆue
 +((()
buf
Ë<< (8 * 
Àngth
));

896 
vÆue
 +
˘
->
lowî_bound
;

897 if((
•ecs
 && s≥cs->
fõld_unsig√d
)

898 ? 
	`a¢_uöt642INTEGER
(
°
, ()
vÆue
)

899 : 
	`a¢_öt642INTEGER
(
°
, 
vÆue
))

900 
ASN__DECODE_FAILED
;

901 
	`ASN_DEBUG
("Got value %ld +Üow %ld",

902 
vÆue
, 
˘
->
lowî_bound
);

904 
vÆue
 = 0;

905 i‡(
˘
->
ønge_bôs
 < 8) {

906 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ønge_bôs
);

907 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

908 } i‡(
˘
->
ønge_bôs
 == 8) {

909 i‡(
	`≠î_gë_Æign
(
pd
) < 0)

910 
ASN__DECODE_FAILED
;

911 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ønge_bôs
);

912 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

915 i‡(
	`≠î_gë_Æign
(
pd
) < 0)

916 
ASN__DECODE_FAILED
;

917 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 16);

918 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

920 
vÆue
 +
˘
->
lowî_bound
;

921 if((
•ecs
 && s≥cs->
fõld_unsig√d
)

922 ? 
	`a¢_ul⁄g2INTEGER
(
°
, 
vÆue
)

923 : 
	`a¢_l⁄g2INTEGER
(
°
, 
vÆue
))

924 
ASN__DECODE_FAILED
;

925 
	`ASN_DEBUG
("Got value %ld +Üow %ld",

926 
vÆue
, 
˘
->
lowî_bound
);

928  
rvÆ
;

930 
ASN__DECODE_FAILED
;

933 
	`ASN_DEBUG
("Decodög unc⁄°øöed i¡egî %s", 
td
->
«me
);

938 
ssize_t
 
Àn
;

939 *
p
;

940 
ªt
;

943 
Àn
 = 
	`≠î_gë_Àngth
(
pd
, -1, -1, &
ª≥©
);

944 if(
Àn
 < 0Ë
ASN__DECODE_STARVED
;

946 
p
 = 
	`REALLOC
(
°
->
buf
, st->
size
 + 
Àn
 + 1);

947 if(!
p
Ë
ASN__DECODE_FAILED
;

948 
°
->
buf
 = (
uöt8_t
 *)
p
;

950 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, &
°
->
buf
[°->
size
], 0, 8 * 
Àn
);

951 if(
ªt
 < 0Ë
ASN__DECODE_STARVED
;

952 
°
->
size
 +
Àn
;

953 } 
ª≥©
);

954 
°
->
buf
[°->
size
] = 0;

957 if(
˘
 && ct->
lowî_bound
) {

961 
vÆue
;

962 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
))

963 
ASN__DECODE_FAILED
;

964 if(
	`a¢_l⁄g2INTEGER
(
°
, 
vÆue
 + 
˘
->
lowî_bound
))

965 
ASN__DECODE_FAILED
;

968  
rvÆ
;

969 
	}
}

971 
a¢_íc_rvÆ_t


972 
	$INTEGER_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

973 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

974 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

975 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = (c⁄°á¢_INTEGER_•ecifics_à*)
td
->
•ecifics
;

976 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

977 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

978 c⁄° 
uöt8_t
 *
buf
;

979 c⁄° 
uöt8_t
 *
íd
;

980 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

981 
vÆue
 = 0;

983 if(!
°
 || st->
size
 =0Ë
ASN__ENCODE_FAILED
;

985 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

986 
˘
 = 
c⁄°øöts
 ? &c⁄°øöts->
vÆue
 : 0;

988 
î
.
ícoded
 = 0;

990 if(
˘
) {

991 
öext
 = 0;

992 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

993 
uvÆ
;

994 if(
	`a¢_INTEGER2ul⁄g
(
°
, &
uvÆ
))

995 
ASN__ENCODE_FAILED
;

997 if(
˘
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

998 if(
uvÆ
 < ()
˘
->
lowî_bound
)

999 
öext
 = 1;

1000 } if(
˘
->
ønge_bôs
 >= 0) {

1001 if(
uvÆ
 < ()
˘
->
lowî_bound


1002 || 
uvÆ
 > ()
˘
->
uµî_bound
)

1003 
öext
 = 1;

1005 
	`ASN_DEBUG
("Value %lu (%02x/%lu)Üb %ld ub %ld %s",

1006 
uvÆ
, 
°
->
buf
[0], st->
size
,

1007 
˘
->
lowî_bound
, ct->
uµî_bound
,

1008 
öext
 ? "ext" : "fix");

1009 
vÆue
 = 
uvÆ
;

1011 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
)Ë
ASN__ENCODE_FAILED
;

1013 if(
˘
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

1014 if(
vÆue
 < 
˘
->
lowî_bound
)

1015 
öext
 = 1;

1016 } if(
˘
->
ønge_bôs
 >= 0) {

1017 if(
vÆue
 < 
˘
->
lowî_bound


1018 || 
vÆue
 > 
˘
->
uµî_bound
)

1019 
öext
 = 1;

1021 
	`ASN_DEBUG
("Value %lu (%02x/%lu)Üb %ld ub %ld %s",

1022 
vÆue
, 
°
->
buf
[0], st->
size
,

1023 
˘
->
lowî_bound
, ct->
uµî_bound
,

1024 
öext
 ? "ext" : "fix");

1026 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

1027 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

1028 
ASN__ENCODE_FAILED
;

1029 if(
öext
Ë
˘
 = 0;

1030 } if(
öext
) {

1031 
ASN__ENCODE_FAILED
;

1036 if(
˘
 && ct->
ønge_bôs
 >= 0) {

1037 
v
;

1040 
	`ASN_DEBUG
("Encoding integer %ld (%lu) withÑange %d bits",

1041 
vÆue
, vÆuê- 
˘
->
lowî_bound
, ct->
ønge_bôs
);

1043 
v
 = 
vÆue
 - 
˘
->
lowî_bound
;

1046 i‡(
˘
->
ønge_bôs
 < 8) {

1047 if(
	`≥r_put_„w_bôs
(
po
, 0x00 | 
v
, 
˘
->
ønge_bôs
))

1048 
ASN__ENCODE_FAILED
;

1049 } i‡(
˘
->
ønge_bôs
 == 8) {

1050 if(
	`≠î_put_Æign
(
po
) < 0)

1051 
ASN__ENCODE_FAILED
;

1052 if(
	`≥r_put_„w_bôs
(
po
, 0x00 | 
v
, 
˘
->
ønge_bôs
))

1053 
ASN__ENCODE_FAILED
;

1054 } i‡(
˘
->
ønge_bôs
 <= 16) {

1056 if(
	`≠î_put_Æign
(
po
) < 0)

1057 
ASN__ENCODE_FAILED
;

1058 if(
	`≥r_put_„w_bôs
(
po
, 0x0000 | 
v
,

1060 
ASN__ENCODE_FAILED
;

1063 
öt64_t
 
v64
 = 
v
;

1064 
i
, 
j
;

1065 
max_ønge_byãs
 = (
˘
->
ønge_bôs
 >> 3) +

1066 (((
˘
->
ønge_bôs
 % 8) > 0) ? 1 : 0);

1068 
i
 = 1; ; i++) {

1069 
uµî
 = 1 << 
i
;

1070 i‡(
uµî
 >
max_ønge_byãs
)

1074 
j
 = (
öt64_t
) -1; j != 0; j--) {

1075 
öt64_t
 
vÆ
;

1076 
vÆ
 = 
v64
 >> (
j
 * 8);

1077 i‡(
vÆ
 != 0)

1082 i‡(
	`≥r_put_„w_bôs
(
po
, 
j
, 
i
))

1083 
ASN__ENCODE_FAILED
;

1086 i‡(
	`≠î_put_Æign
(
po
) < 0)

1087 
ASN__ENCODE_FAILED
;

1089 
i
 = 0; i <
j
; i++) {

1090 if(
	`≥r_put_„w_bôs
(
po
, (
v64
 >> (8 * (
j
 - 
i
))) & 0xff, 8))

1091 
ASN__ENCODE_FAILED
;

1094 
	`ASN__ENCODED_OK
(
î
);

1097 if(
˘
 && ct->
lowî_bound
) {

1098 
	`ASN_DEBUG
("Adju°Üowî boundÅÿ%ld", 
˘
->
lowî_bound
);

1100 
ASN__ENCODE_FAILED
;

1103 
buf
 = 
°
->buf, 
íd
 = st->bu‡+ st->
size
; buf <Énd;) {

1104 
ssize_t
 
mayEncode
 = 
	`≠î_put_Àngth
(
po
, -1, 
íd
 - 
buf
);

1105 if(
mayEncode
 < 0)

1106 
ASN__ENCODE_FAILED
;

1107 if(
	`≥r_put_m™y_bôs
(
po
, 
buf
, 8 * 
mayEncode
))

1108 
ASN__ENCODE_FAILED
;

1109 
buf
 +
mayEncode
;

1112 
	`ASN__ENCODED_OK
(
î
);

1113 
	}
}

1117 
ötmax_t


1118 
	$a¢__öãgî_c⁄vît
(c⁄° 
uöt8_t
 *
b
, c⁄° uöt8_à*
íd
) {

1119 
uötmax_t
 
vÆue
;

1123 if((*
b
 >> 7)) {

1124 
vÆue
 = (
uötmax_t
)(-1);

1126 
vÆue
 = 0;

1130 ; 
b
 < 
íd
; b++) {

1131 
vÆue
 = (vÆuê<< 8Ë| *
b
;

1134  
vÆue
;

1135 
	}
}

1138 
	$a¢_INTEGER2imax
(c⁄° 
INTEGER_t
 *
ùå
, 
ötmax_t
 *
Õå
) {

1139 
uöt8_t
 *
b
, *
íd
;

1140 
size_t
 
size
;

1143 if(!
ùå
 || !ùå->
buf
 || !
Õå
) {

1144 
î∫o
 = 
EINVAL
;

1149 
b
 = 
ùå
->
buf
;

1150 
size
 = 
ùå
->size;

1151 
íd
 = 
b
 + 
size
;

1153 if(
size
 > (
ötmax_t
)) {

1154 
uöt8_t
 *
íd1
 = 
íd
 - 1;

1162 ; 
b
 < 
íd1
; b++) {

1163 *
b
) {

1164 0x00: if((
b
[1] & 0x80) == 0) ; ;

1165 0xff: if((
b
[1] & 0x80) != 0) ; ;

1170 
size
 = 
íd
 - 
b
;

1171 if(
size
 > (
ötmax_t
)) {

1173 
î∫o
 = 
ERANGE
;

1179 if(
íd
 =
b
) {

1180 *
Õå
 = 0;

1184 *
Õå
 = 
	`a¢__öãgî_c⁄vît
(
b
, 
íd
);

1186 
	}
}

1190 
	$a¢_INTEGER2umax
(c⁄° 
INTEGER_t
 *
ùå
, 
uötmax_t
 *
Õå
) {

1191 
uöt8_t
 *
b
, *
íd
;

1192 
uötmax_t
 
vÆue
;

1193 
size_t
 
size
;

1195 if(!
ùå
 || !ùå->
buf
 || !
Õå
) {

1196 
î∫o
 = 
EINVAL
;

1200 
b
 = 
ùå
->
buf
;

1201 
size
 = 
ùå
->size;

1202 
íd
 = 
b
 + 
size
;

1205 ; 
size
 > (
vÆue
); 
b
++, size--) {

1206 if(*
b
) {

1208 
î∫o
 = 
ERANGE
;

1214 
vÆue
 = 0; 
b
 < 
íd
; b++)

1215 
vÆue
 = (vÆuê<< 8Ë| *
b
;

1217 *
Õå
 = 
vÆue
;

1219 
	}
}

1222 
	$a¢_umax2INTEGER
(
INTEGER_t
 *
°
, 
uötmax_t
 
vÆue
) {

1223 
uöt8_t
 *
buf
;

1224 
uöt8_t
 *
íd
;

1225 
uöt8_t
 *
b
;

1226 
shr
;

1228 if(
vÆue
 <((~(
uötmax_t
)0) >> 1)) {

1229  
	`a¢_imax2INTEGER
(
°
, 
vÆue
);

1232 
buf
 = (
uöt8_t
 *)
	`MALLOC
(1 + (
vÆue
));

1233 if(!
buf
)  -1;

1235 
íd
 = 
buf
 + ((
vÆue
) + 1);

1236 
buf
[0] = 0;

1237 
b
 = 
buf
 + 1, 
shr
 = ((
vÆue
Ë- 1Ë* 8; b < 
íd
; shr -= 8, b++)

1238 *
b
 = (
uöt8_t
)(
vÆue
 >> 
shr
);

1240 if(
°
->
buf
Ë
	`FREEMEM
(st->buf);

1241 
°
->
buf
 = buf;

1242 
°
->
size
 = 1 + (
vÆue
);

1245 
	}
}

1248 
	$a¢_imax2INTEGER
(
INTEGER_t
 *
°
, 
ötmax_t
 
vÆue
) {

1249 
uöt8_t
 *
buf
, *
bp
;

1250 
uöt8_t
 *
p
;

1251 
uöt8_t
 *
p°¨t
;

1252 
uöt8_t
 *
≥nd1
;

1253 
lôéeEndün
 = 1;

1254 
add
;

1256 if(!
°
) {

1257 
î∫o
 = 
EINVAL
;

1261 
buf
 = (
uöt8_t
 *)(*)
	`MALLOC
((
vÆue
));

1262 if(!
buf
)  -1;

1264 if(*(*)&
lôéeEndün
) {

1265 
p°¨t
 = (
uöt8_t
 *)&
vÆue
 + (value) - 1;

1266 
≥nd1
 = (
uöt8_t
 *)&
vÆue
;

1267 
add
 = -1;

1269 
p°¨t
 = (
uöt8_t
 *)&
vÆue
;

1270 
≥nd1
 = 
p°¨t
 + (
vÆue
) - 1;

1271 
add
 = 1;

1280 
p
 = 
p°¨t
;Ö !
≥nd1
;Ö +
add
) {

1281 *
p
) {

1282 0x00: if((*(
p
+
add
) & 0x80) == 0)

1285 0xff: if((*(
p
+
add
) & 0x80))

1292 
bp
 = 
buf
, 
≥nd1
 +
add
; 
p
 !=Öend1;Ö +=ádd)

1293 *
bp
++ = *
p
;

1295 if(
°
->
buf
Ë
	`FREEMEM
(st->buf);

1296 
°
->
buf
 = buf;

1297 
°
->
size
 = 
bp
 - 
buf
;

1300 
	}
}

1303 
	$a¢_INTEGER2l⁄g
(c⁄° 
INTEGER_t
 *
ùå
, *
l
) {

1304 
ötmax_t
 
v
;

1305 if(
	`a¢_INTEGER2imax
(
ùå
, &
v
) == 0) {

1306 if(
v
 < 
LONG_MIN
 || v > 
LONG_MAX
) {

1307 
î∫o
 = 
ERANGE
;

1310 *
l
 = 
v
;

1315 
	}
}

1318 
	$a¢_INTEGER2ul⁄g
(c⁄° 
INTEGER_t
 *
ùå
, *
l
) {

1319 
uötmax_t
 
v
;

1320 if(
	`a¢_INTEGER2umax
(
ùå
, &
v
) == 0) {

1321 if(
v
 > 
ULONG_MAX
) {

1322 
î∫o
 = 
ERANGE
;

1325 *
l
 = 
v
;

1330 
	}
}

1333 
	$a¢_l⁄g2INTEGER
(
INTEGER_t
 *
°
, 
vÆue
) {

1334  
	`a¢_imax2INTEGER
(
°
, 
vÆue
);

1335 
	}
}

1338 
	$a¢_ul⁄g2INTEGER
(
INTEGER_t
 *
°
, 
vÆue
) {

1339  
	`a¢_imax2INTEGER
(
°
, 
vÆue
);

1340 
	}
}

1344 
	$a¢_uöt642INTEGER
(
INTEGER_t
 *
°
, 
uöt64_t
 
vÆue
) {

1345 
uöt8_t
 *
buf
;

1346 
uöt8_t
 *
íd
;

1347 
uöt8_t
 *
b
;

1348 
shr
;

1350 if(
vÆue
 <
INT64_MAX
)

1351  
	`a¢_öt642INTEGER
(
°
, 
vÆue
);

1353 
buf
 = (
uöt8_t
 *)
	`MALLOC
(1 + (
vÆue
));

1354 if(!
buf
)  -1;

1356 
íd
 = 
buf
 + ((
vÆue
) + 1);

1357 
buf
[0] = 0;

1358 
b
 = 
buf
 + 1, 
shr
 = ((
vÆue
)-1)*8; b < 
íd
; shr -= 8, b++)

1359 *
b
 = (
uöt8_t
)(
vÆue
 >> 
shr
);

1361 if(
°
->
buf
Ë
	`FREEMEM
(st->buf);

1362 
°
->
buf
 = buf;

1363 
°
->
size
 = 1 + (
vÆue
);

1366 
	}
}

1369 
	$a¢_öt642INTEGER
(
INTEGER_t
 *
°
, 
öt64_t
 
vÆue
) {

1370 
uöt8_t
 *
buf
, *
bp
;

1371 
uöt8_t
 *
p
;

1372 
uöt8_t
 *
p°¨t
;

1373 
uöt8_t
 *
≥nd1
;

1374 
lôéeEndün
 = 1;

1375 
add
;

1377 if(!
°
) {

1378 
î∫o
 = 
EINVAL
;

1382 
buf
 = (
uöt8_t
 *)
	`MALLOC
((
vÆue
));

1383 if(!
buf
)  -1;

1385 if(*(*)&
lôéeEndün
) {

1386 
p°¨t
 = (
uöt8_t
 *)&
vÆue
 + (value) - 1;

1387 
≥nd1
 = (
uöt8_t
 *)&
vÆue
;

1388 
add
 = -1;

1390 
p°¨t
 = (
uöt8_t
 *)&
vÆue
;

1391 
≥nd1
 = 
p°¨t
 + (
vÆue
) - 1;

1392 
add
 = 1;

1401 
p
 = 
p°¨t
;Ö !
≥nd1
;Ö +
add
) {

1402 *
p
) {

1403 0x00: if((*(
p
+
add
) & 0x80) == 0)

1406 0xff: if((*(
p
+
add
) & 0x80))

1413 
p°¨t
 = 
p
, 
bp
 = 
buf
, 
≥nd1
 +
add
;Ö !=Öend1;Ö +=ádd)

1414 *
bp
++ = *
p
;

1416 if(
°
->
buf
Ë
	`FREEMEM
(st->buf);

1417 
°
->
buf
 = buf;

1418 
°
->
size
 = 
bp
 - 
buf
;

1421 
	}
}

1429 
a¢_°πox_ªsu…_e


1430 
	$a¢_°πoimax_lim
(c⁄° *
°r
, c⁄° **
íd
, 
ötmax_t
 *
öç
) {

1431 
sign
 = 1;

1432 
ötmax_t
 
vÆue
;

1434 
	#ASN1_INTMAX_MAX
 ((~(
uötmax_t
)0Ë>> 1)

	)

1435 c⁄° 
ötmax_t
 
uµî_bound¨y
 = 
ASN1_INTMAX_MAX
 / 10;

1436 
ötmax_t
 
œ°_digô_max
 = 
ASN1_INTMAX_MAX
 % 10;

1437 #unde‡
ASN1_INTMAX_MAX


1439 if(
°r
 >*
íd
Ë 
ASN_STRTOX_ERROR_INVAL
;

1441 *
°r
) {

1443 
œ°_digô_max
++;

1444 
sign
 = -1;

1447 
°r
++;

1448 if(
°r
 >*
íd
) {

1449 *
íd
 = 
°r
;

1450  
ASN_STRTOX_EXPECT_MORE
;

1454 
vÆue
 = 0; 
°r
 < (*
íd
); str++) {

1455 *
°r
) {

1458 
d
 = *
°r
 - '0';

1459 if(
vÆue
 < 
uµî_bound¨y
) {

1460 
vÆue
 = vÆuê* 10 + 
d
;

1461 } if(
vÆue
 =
uµî_bound¨y
) {

1462 if(
d
 <
œ°_digô_max
) {

1463 if(
sign
 > 0) {

1464 
vÆue
 = vÆuê* 10 + 
d
;

1466 
sign
 = 1;

1467 
vÆue
 = -vÆuê* 10 - 
d
;

1470 *
íd
 = 
°r
;

1471  
ASN_STRTOX_ERROR_RANGE
;

1474 *
íd
 = 
°r
;

1475  
ASN_STRTOX_ERROR_RANGE
;

1480 *
íd
 = 
°r
;

1481 *
öç
 = 
sign
 * 
vÆue
;

1482  
ASN_STRTOX_EXTRA_DATA
;

1486 *
íd
 = 
°r
;

1487 *
öç
 = 
sign
 * 
vÆue
;

1488  
ASN_STRTOX_OK
;

1489 
	}
}

1497 
a¢_°πox_ªsu…_e


1498 
	$a¢_°πoumax_lim
(c⁄° *
°r
, c⁄° **
íd
, 
uötmax_t
 *
uöç
) {

1499 
uötmax_t
 
vÆue
;

1501 
	#ASN1_UINTMAX_MAX
 ((~(
uötmax_t
)0))

	)

1502 c⁄° 
uötmax_t
 
uµî_bound¨y
 = 
ASN1_UINTMAX_MAX
 / 10;

1503 
uötmax_t
 
œ°_digô_max
 = 
ASN1_UINTMAX_MAX
 % 10;

1504 #unde‡
ASN1_UINTMAX_MAX


1506 if(
°r
 >*
íd
Ë 
ASN_STRTOX_ERROR_INVAL
;

1508 *
°r
) {

1510  
ASN_STRTOX_ERROR_INVAL
;

1512 
°r
++;

1513 if(
°r
 >*
íd
) {

1514 *
íd
 = 
°r
;

1515  
ASN_STRTOX_EXPECT_MORE
;

1519 
vÆue
 = 0; 
°r
 < (*
íd
); str++) {

1520 *
°r
) {

1523 
d
 = *
°r
 - '0';

1524 if(
vÆue
 < 
uµî_bound¨y
) {

1525 
vÆue
 = vÆuê* 10 + 
d
;

1526 } if(
vÆue
 =
uµî_bound¨y
) {

1527 if(
d
 <
œ°_digô_max
) {

1528 
vÆue
 = vÆuê* 10 + 
d
;

1530 *
íd
 = 
°r
;

1531  
ASN_STRTOX_ERROR_RANGE
;

1534 *
íd
 = 
°r
;

1535  
ASN_STRTOX_ERROR_RANGE
;

1540 *
íd
 = 
°r
;

1541 *
uöç
 = 
vÆue
;

1542  
ASN_STRTOX_EXTRA_DATA
;

1546 *
íd
 = 
°r
;

1547 *
uöç
 = 
vÆue
;

1548  
ASN_STRTOX_OK
;

1549 
	}
}

1551 
a¢_°πox_ªsu…_e


1552 
	$a¢_°πﬁ_lim
(c⁄° *
°r
, c⁄° **
íd
, *
Õ
) {

1553 
ötmax_t
 
vÆue
;

1554 
	`a¢_°πoimax_lim
(
°r
, 
íd
, &
vÆue
)) {

1555 
ASN_STRTOX_ERROR_RANGE
:

1556  
ASN_STRTOX_ERROR_RANGE
;

1557 
ASN_STRTOX_ERROR_INVAL
:

1558  
ASN_STRTOX_ERROR_INVAL
;

1559 
ASN_STRTOX_EXPECT_MORE
:

1560  
ASN_STRTOX_EXPECT_MORE
;

1561 
ASN_STRTOX_OK
:

1562 if(
vÆue
 >
LONG_MIN
 && vÆuê<
LONG_MAX
) {

1563 *
Õ
 = 
vÆue
;

1564  
ASN_STRTOX_OK
;

1566  
ASN_STRTOX_ERROR_RANGE
;

1568 
ASN_STRTOX_EXTRA_DATA
:

1569 if(
vÆue
 >
LONG_MIN
 && vÆuê<
LONG_MAX
) {

1570 *
Õ
 = 
vÆue
;

1571  
ASN_STRTOX_EXTRA_DATA
;

1573  
ASN_STRTOX_ERROR_RANGE
;

1577 
	`as£π
(!"Unreachable");

1578  
ASN_STRTOX_ERROR_INVAL
;

1579 
	}
}

1581 
a¢_°πox_ªsu…_e


1582 
	$a¢_°πoul_lim
(c⁄° *
°r
, c⁄° **
íd
, *
uÕ
) {

1583 
uötmax_t
 
vÆue
;

1584 
	`a¢_°πoumax_lim
(
°r
, 
íd
, &
vÆue
)) {

1585 
ASN_STRTOX_ERROR_RANGE
:

1586  
ASN_STRTOX_ERROR_RANGE
;

1587 
ASN_STRTOX_ERROR_INVAL
:

1588  
ASN_STRTOX_ERROR_INVAL
;

1589 
ASN_STRTOX_EXPECT_MORE
:

1590  
ASN_STRTOX_EXPECT_MORE
;

1591 
ASN_STRTOX_OK
:

1592 if(
vÆue
 <
ULONG_MAX
) {

1593 *
uÕ
 = 
vÆue
;

1594  
ASN_STRTOX_OK
;

1596  
ASN_STRTOX_ERROR_RANGE
;

1598 
ASN_STRTOX_EXTRA_DATA
:

1599 if(
vÆue
 <
ULONG_MAX
) {

1600 *
uÕ
 = 
vÆue
;

1601  
ASN_STRTOX_EXTRA_DATA
;

1603  
ASN_STRTOX_ERROR_RANGE
;

1607 
	`as£π
(!"Unreachable");

1608  
ASN_STRTOX_ERROR_INVAL
;

1609 
	}
}

1612 
	$INTEGER_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

1613 c⁄° *
b±r
) {

1614 c⁄° 
INTEGER_t
 *
a
 = 
≠å
;

1615 c⁄° 
INTEGER_t
 *
b
 = 
b±r
;

1617 ()
td
;

1619 if(
a
 && 
b
) {

1620 if(
a
->
size
 && 
b
->size) {

1621 
sign_a
 = (
a
->
buf
[0] & 0x80) ? -1 : 1;

1622 
sign_b
 = (
b
->
buf
[0] & 0x80) ? -1 : 1;

1624 if(
sign_a
 < 
sign_b
)  -1;

1625 if(
sign_a
 > 
sign_b
)  1;

1628 if(
a
->
size
 < 
b
->size) {

1629  -1 * 
sign_a
;

1630 } if(
a
->
size
 > 
b
->size) {

1631  1 * 
sign_b
;

1634  
sign_a
 * 
	`memcmp
(
a
->
buf
, 
b
->buf,á->
size
);

1635 } if(
a
->
size
) {

1636 
sign
 = (
a
->
buf
[0] & 0x80) ? -1 : 1;

1637  (1Ë* 
sign
;

1638 } if(
b
->
size
) {

1639 
sign
 = (
a
->
buf
[0] & 0x80) ? -1 : 1;

1640  (-1Ë* 
sign
;

1644 } if(!
a
 && !
b
) {

1646 } if(!
a
) {

1652 
	}
}

1654 
a¢_øndom_fûl_ªsu…_t


1655 
	$INTEGER_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1656 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

1657 
size_t
 
max_Àngth
) {

1658 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

1659 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

1660 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

1661 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

1662 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

1663 
INTEGER_t
 *
°
 = *
•å
;

1664 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
em≠
;

1665 
size_t
 
em≠_Àn
;

1666 
ötmax_t
 
vÆue
;

1667 
föd_öside_m≠
;

1669 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

1671 if(
°
 =
NULL
) {

1672 
°
 = (
INTEGER_t
 *)
	`CALLOC
(1, (*st));

1673 if(
°
 =
NULL
) {

1674  
ªsu…_Áûed
;

1678 if(
•ecs
) {

1679 
em≠
 = 
•ecs
->
vÆue2íum
;

1680 
em≠_Àn
 = 
•ecs
->
m≠_cou¡
;

1681 if(
•ecs
->
°ri˘_íumî©i⁄
) {

1682 
föd_öside_m≠
 = 
em≠_Àn
 > 0;

1684 
föd_öside_m≠
 = 
em≠_Àn
 ? 
	`a¢_øndom_bëwìn
(0, 1) : 0;

1687 
em≠
 = 0;

1688 
em≠_Àn
 = 0;

1689 
föd_öside_m≠
 = 0;

1692 if(
föd_öside_m≠
) {

1693 
	`as£π
(
em≠_Àn
 > 0);

1694 
vÆue
 = 
em≠
[
	`a¢_øndom_bëwìn
(0, 
em≠_Àn
 - 1)].
«t_vÆue
;

1696 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
˘
;

1698 c⁄° 
v¨ü¡s
[] = {

1704 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

1705 
	`as£π
(
v¨ü¡s
[18] == 0);

1706 
vÆue
 = 
v¨ü¡s
[
	`a¢_øndom_bëwìn
(

1707 18, (
v¨ü¡s
) / (variants[0]) - 1)];

1709 
vÆue
 = 
v¨ü¡s
[
	`a¢_øndom_bëwìn
(

1710 0, (
v¨ü¡s
) / (variants[0]) - 1)];

1713 if(!
c⁄°øöts
Ëc⁄°øöt†&
td
->
ícodög_c⁄°øöts
;

1714 
˘
 = 
c⁄°øöts
 ? c⁄°øöts->
≥r_c⁄°øöts
 : 0;

1715 if(
˘
 && (˘->
vÆue
.
Êags
 & 
APC_CONSTRAINED
)) {

1716 if(
vÆue
 < 
˘
->vÆue.
lowî_bound
 || vÆuê> ct->vÆue.
uµî_bound
) {

1717 
vÆue
 = 
	`a¢_øndom_bëwìn
(
˘
->vÆue.
lowî_bound
,

1718 
˘
->
vÆue
.
uµî_bound
);

1723 if(
	`a¢_imax2INTEGER
(
°
, 
vÆue
)) {

1724 if(
°
 =*
•å
) {

1725 
	`ASN_STRUCT_RESET
(*
td
, 
°
);

1727 
	`ASN_STRUCT_FREE
(*
td
, 
°
);

1729  
ªsu…_Áûed
;

1731 *
•å
 = 
°
;

1732 
ªsu…_ok
.
Àngth
 = 
°
->
size
;

1733  
ªsu…_ok
;

1735 
	}
}

	@IndexToRFSP.c

8 
	~"IndexToRFSP.h
"

11 
	$IndexToRFSP_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 256)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_IndexToRFSP_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 8, 8, 1, 256 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_IndexToRFSP_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_IndexToRFSP
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_IndexToRFSP_ègs_1
,

52 (
a¢_DEF_IndexToRFSP_ègs_1
)

53 /(
a¢_DEF_IndexToRFSP_ègs_1
[0]),

54 
a¢_DEF_IndexToRFSP_ègs_1
,

55 (
a¢_DEF_IndexToRFSP_ègs_1
)

56 /(
a¢_DEF_IndexToRFSP_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_IndexToRFSP_c⁄°r_1
, 
IndexToRFSP_c⁄°øöt
 },

	@Interface-MessageID.c

8 
	~"I¡îÁ˚-MesßgeID.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_mesßgeTy≥_c⁄°r_3
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 2, 2, 0, 2 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_mesßgeTy≥_vÆue2íum_3
[] = {

25 c⁄° 
	ga¢_MAP_mesßgeTy≥_íum2vÆue_3
[] = {

31 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_mesßgeTy≥_•ecs_3
 = {

32 
a¢_MAP_mesßgeTy≥_vÆue2íum_3
,

33 
a¢_MAP_mesßgeTy≥_íum2vÆue_3
,

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_mesßgeTy≥_ègs_3
[] = {

41 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

42 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_mesßgeTy≥_3
 = {

48 &
a¢_OP_N©iveEnumî©ed
,

49 
a¢_DEF_mesßgeTy≥_ègs_3
,

50 (
a¢_DEF_mesßgeTy≥_ègs_3
)

51 /(
a¢_DEF_mesßgeTy≥_ègs_3
[0]) - 1,

52 
a¢_DEF_mesßgeTy≥_ègs_3
,

53 (
a¢_DEF_mesßgeTy≥_ègs_3
)

54 /(
a¢_DEF_mesßgeTy≥_ègs_3
[0]),

55 { 0, &
a¢_PER_ty≥_mesßgeTy≥_c⁄°r_3
, 
N©iveEnumî©ed_c⁄°øöt
 },

57 &
a¢_SPC_mesßgeTy≥_•ecs_3


60 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚_MesßgeID_1
[] = {

61 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚_MesßgeID
, 
öãrÁ˚Pro˚duªID
),

62 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

64 &
a¢_DEF_N©iveI¡egî
,

70 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚_MesßgeID
, 
mesßgeTy≥
),

71 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

73 &
a¢_DEF_mesßgeTy≥_3
,

80 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
[] = {

81 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

83 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚_MesßgeID_èg2ñ_1
[] = {

84 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

85 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

87 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚_MesßgeID_•ecs_1
 = {

88 (
I¡îÁ˚_MesßgeID
),

89 
off£tof
(
I¡îÁ˚_MesßgeID
, 
_a¢_˘x
),

90 
a¢_MAP_I¡îÁ˚_MesßgeID_èg2ñ_1
,

95 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚_MesßgeID
 = {

98 &
a¢_OP_SEQUENCE
,

99 
a¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
,

100 (
a¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
)

101 /(
a¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
[0]),

102 
a¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
,

103 (
a¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
)

104 /(
a¢_DEF_I¡îÁ˚_MesßgeID_ègs_1
[0]),

105 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

106 
a¢_MBR_I¡îÁ˚_MesßgeID_1
,

108 &
a¢_SPC_I¡îÁ˚_MesßgeID_•ecs_1


	@InterfaceID-E1.c

8 
	~"I¡îÁ˚ID-E1.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_E1_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_E1
, 
globÆGNB_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GlobÆGNB_ID
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_E1
, 
gNB_CU_UP_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_GNB_CU_UP_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_E1_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_E1_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_E1_•ecs_1
 = {

38 (
I¡îÁ˚ID_E1
),

39 
off£tof
(
I¡îÁ˚ID_E1
, 
_a¢_˘x
),

40 
a¢_MAP_I¡îÁ˚ID_E1_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_E1
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_I¡îÁ˚ID_E1_ègs_1
,

50 (
a¢_DEF_I¡îÁ˚ID_E1_ègs_1
)

51 /(
a¢_DEF_I¡îÁ˚ID_E1_ègs_1
[0]),

52 
a¢_DEF_I¡îÁ˚ID_E1_ègs_1
,

53 (
a¢_DEF_I¡îÁ˚ID_E1_ègs_1
)

54 /(
a¢_DEF_I¡îÁ˚ID_E1_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_I¡îÁ˚ID_E1_1
,

58 &
a¢_SPC_I¡îÁ˚ID_E1_•ecs_1


	@InterfaceID-F1.c

8 
	~"I¡îÁ˚ID-F1.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_F1_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_F1
, 
globÆGNB_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GlobÆGNB_ID
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_F1
, 
gNB_DU_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_GNB_DU_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_F1_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_F1_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_F1_•ecs_1
 = {

38 (
I¡îÁ˚ID_F1
),

39 
off£tof
(
I¡îÁ˚ID_F1
, 
_a¢_˘x
),

40 
a¢_MAP_I¡îÁ˚ID_F1_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_F1
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_I¡îÁ˚ID_F1_ègs_1
,

50 (
a¢_DEF_I¡îÁ˚ID_F1_ègs_1
)

51 /(
a¢_DEF_I¡îÁ˚ID_F1_ègs_1
[0]),

52 
a¢_DEF_I¡îÁ˚ID_F1_ègs_1
,

53 (
a¢_DEF_I¡îÁ˚ID_F1_ègs_1
)

54 /(
a¢_DEF_I¡îÁ˚ID_F1_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_I¡îÁ˚ID_F1_1
,

58 &
a¢_SPC_I¡îÁ˚ID_F1_•ecs_1


	@InterfaceID-NG.c

8 
	~"I¡îÁ˚ID-NG.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_NG_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_NG
, 
guami
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GUAMI
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_NG_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_NG_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_NG_•ecs_1
 = {

28 (
I¡îÁ˚ID_NG
),

29 
off£tof
(
I¡îÁ˚ID_NG
, 
_a¢_˘x
),

30 
a¢_MAP_I¡îÁ˚ID_NG_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_NG
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_I¡îÁ˚ID_NG_ègs_1
,

40 (
a¢_DEF_I¡îÁ˚ID_NG_ègs_1
)

41 /(
a¢_DEF_I¡îÁ˚ID_NG_ègs_1
[0]),

42 
a¢_DEF_I¡îÁ˚ID_NG_ègs_1
,

43 (
a¢_DEF_I¡îÁ˚ID_NG_ègs_1
)

44 /(
a¢_DEF_I¡îÁ˚ID_NG_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_I¡îÁ˚ID_NG_1
,

48 &
a¢_SPC_I¡îÁ˚ID_NG_•ecs_1


	@InterfaceID-S1.c

8 
	~"I¡îÁ˚ID-S1.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_S1_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_S1
, 
gUMMEI
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GUMMEI
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_S1_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_S1_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_S1_•ecs_1
 = {

28 (
I¡îÁ˚ID_S1
),

29 
off£tof
(
I¡îÁ˚ID_S1
, 
_a¢_˘x
),

30 
a¢_MAP_I¡îÁ˚ID_S1_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_S1
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_I¡îÁ˚ID_S1_ègs_1
,

40 (
a¢_DEF_I¡îÁ˚ID_S1_ègs_1
)

41 /(
a¢_DEF_I¡îÁ˚ID_S1_ègs_1
[0]),

42 
a¢_DEF_I¡îÁ˚ID_S1_ègs_1
,

43 (
a¢_DEF_I¡îÁ˚ID_S1_ègs_1
)

44 /(
a¢_DEF_I¡îÁ˚ID_S1_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_I¡îÁ˚ID_S1_1
,

48 &
a¢_SPC_I¡îÁ˚ID_S1_•ecs_1


	@InterfaceID-W1.c

8 
	~"I¡îÁ˚ID-W1.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_W1_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_W1
, 
globÆ_ng_eNB_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GlobÆNgENB_ID
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_W1
, 
ng_eNB_DU_ID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_NGENB_DU_ID
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_W1_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_W1_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_W1_•ecs_1
 = {

38 (
I¡îÁ˚ID_W1
),

39 
off£tof
(
I¡îÁ˚ID_W1
, 
_a¢_˘x
),

40 
a¢_MAP_I¡îÁ˚ID_W1_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_W1
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_I¡îÁ˚ID_W1_ègs_1
,

50 (
a¢_DEF_I¡îÁ˚ID_W1_ègs_1
)

51 /(
a¢_DEF_I¡îÁ˚ID_W1_ègs_1
[0]),

52 
a¢_DEF_I¡îÁ˚ID_W1_ègs_1
,

53 (
a¢_DEF_I¡îÁ˚ID_W1_ègs_1
)

54 /(
a¢_DEF_I¡îÁ˚ID_W1_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_I¡îÁ˚ID_W1_1
,

58 &
a¢_SPC_I¡îÁ˚ID_W1_•ecs_1


	@InterfaceID-X2.c

8 
	~"I¡îÁ˚ID-X2.h
"

10 
	~"GlobÆENB-ID.h
"

11 
	~"GlobÆíGNB-ID.h
"

12 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_nodeTy≥_c⁄°r_2
 
	gCC_NOTUSED
 = {

13 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

14 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

17 
a¢_TYPE_membî_t
 
	ga¢_MBR_nodeTy≥_2
[] = {

18 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚ID_X2__nodeTy≥
, 
choi˚
.
globÆ_eNB_ID
),

19 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

21 &
a¢_DEF_GlobÆENB_ID
,

27 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚ID_X2__nodeTy≥
, 
choi˚
.
globÆ_í_gNB_ID
),

28 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

30 &
a¢_DEF_GlobÆíGNB_ID
,

37 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_nodeTy≥_èg2ñ_2
[] = {

38 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

39 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

41 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_nodeTy≥_•ecs_2
 = {

42 (
I¡îÁ˚ID_X2__nodeTy≥
),

43 
off£tof
(
I¡îÁ˚ID_X2__nodeTy≥
, 
_a¢_˘x
),

44 
off£tof
(
I¡îÁ˚ID_X2__nodeTy≥
, 
¥e£¡
),

45 (((
I¡îÁ˚ID_X2__nodeTy≥
 *)0)->
¥e£¡
),

46 
a¢_MAP_nodeTy≥_èg2ñ_2
,

52 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_nodeTy≥_2
 = {

55 &
a¢_OP_CHOICE
,

60 { 0, &
a¢_PER_ty≥_nodeTy≥_c⁄°r_2
, 
CHOICE_c⁄°øöt
 },

61 
a¢_MBR_nodeTy≥_2
,

63 &
a¢_SPC_nodeTy≥_•ecs_2


66 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_X2_1
[] = {

67 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_X2
, 
nodeTy≥
),

68 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

70 &
a¢_DEF_nodeTy≥_2
,

77 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_X2_ègs_1
[] = {

78 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

80 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_X2_èg2ñ_1
[] = {

81 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

83 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_X2_•ecs_1
 = {

84 (
I¡îÁ˚ID_X2
),

85 
off£tof
(
I¡îÁ˚ID_X2
, 
_a¢_˘x
),

86 
a¢_MAP_I¡îÁ˚ID_X2_èg2ñ_1
,

91 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_X2
 = {

94 &
a¢_OP_SEQUENCE
,

95 
a¢_DEF_I¡îÁ˚ID_X2_ègs_1
,

96 (
a¢_DEF_I¡îÁ˚ID_X2_ègs_1
)

97 /(
a¢_DEF_I¡îÁ˚ID_X2_ègs_1
[0]),

98 
a¢_DEF_I¡îÁ˚ID_X2_ègs_1
,

99 (
a¢_DEF_I¡îÁ˚ID_X2_ègs_1
)

100 /(
a¢_DEF_I¡îÁ˚ID_X2_ègs_1
[0]),

101 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

102 
a¢_MBR_I¡îÁ˚ID_X2_1
,

104 &
a¢_SPC_I¡îÁ˚ID_X2_•ecs_1


	@InterfaceID-Xn.c

8 
	~"I¡îÁ˚ID-Xn.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚ID_Xn_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
I¡îÁ˚ID_Xn
, 
globÆ_NG_RAN_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GlobÆNGRANNodeID
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚ID_Xn_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚ID_Xn_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚ID_Xn_•ecs_1
 = {

28 (
I¡îÁ˚ID_Xn
),

29 
off£tof
(
I¡îÁ˚ID_Xn
, 
_a¢_˘x
),

30 
a¢_MAP_I¡îÁ˚ID_Xn_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚ID_Xn
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_I¡îÁ˚ID_Xn_ègs_1
,

40 (
a¢_DEF_I¡îÁ˚ID_Xn_ègs_1
)

41 /(
a¢_DEF_I¡îÁ˚ID_Xn_ègs_1
[0]),

42 
a¢_DEF_I¡îÁ˚ID_Xn_ègs_1
,

43 (
a¢_DEF_I¡îÁ˚ID_Xn_ègs_1
)

44 /(
a¢_DEF_I¡îÁ˚ID_Xn_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_I¡îÁ˚ID_Xn_1
,

48 &
a¢_SPC_I¡îÁ˚ID_Xn_•ecs_1


	@InterfaceIdentifier.c

8 
	~"I¡îÁ˚Idítifõr.h
"

10 
	~"I¡îÁ˚ID-NG.h
"

11 
	~"I¡îÁ˚ID-Xn.h
"

12 
	~"I¡îÁ˚ID-F1.h
"

13 
	~"I¡îÁ˚ID-E1.h
"

14 
	~"I¡îÁ˚ID-S1.h
"

15 
	~"I¡îÁ˚ID-X2.h
"

16 
	~"I¡îÁ˚ID-W1.h
"

17 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_I¡îÁ˚Idítifõr_c⁄°r_1
 
	gCC_NOTUSED
 = {

18 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 6 } ,

19 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

22 
a¢_TYPE_membî_t
 
	ga¢_MBR_I¡îÁ˚Idítifõr_1
[] = {

23 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
nG
),

24 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

26 &
a¢_DEF_I¡îÁ˚ID_NG
,

32 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
xN
),

33 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

35 &
a¢_DEF_I¡îÁ˚ID_Xn
,

41 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
f1
),

42 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

44 &
a¢_DEF_I¡îÁ˚ID_F1
,

50 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
e1
),

51 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

53 &
a¢_DEF_I¡îÁ˚ID_E1
,

59 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
s1
),

60 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

62 &
a¢_DEF_I¡îÁ˚ID_S1
,

68 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
x2
),

69 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

71 &
a¢_DEF_I¡îÁ˚ID_X2
,

77 { 
ATF_POINTER
, 0, 
off£tof
(
I¡îÁ˚Idítifõr
, 
choi˚
.
w1
),

78 (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)),

80 &
a¢_DEF_I¡îÁ˚ID_W1
,

87 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_I¡îÁ˚Idítifõr_èg2ñ_1
[] = {

88 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

89 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

90 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

91 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

92 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

93 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 },

94 { (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)), 6, 0, 0 }

96 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚Idítifõr_•ecs_1
 = {

97 (
I¡îÁ˚Idítifõr
),

98 
off£tof
(
I¡îÁ˚Idítifõr
, 
_a¢_˘x
),

99 
off£tof
(
I¡îÁ˚Idítifõr
, 
¥e£¡
),

100 (((
I¡îÁ˚Idítifõr
 *)0)->
¥e£¡
),

101 
a¢_MAP_I¡îÁ˚Idítifõr_èg2ñ_1
,

106 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚Idítifõr
 = {

109 &
a¢_OP_CHOICE
,

114 { 0, &
a¢_PER_ty≥_I¡îÁ˚Idítifõr_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

115 
a¢_MBR_I¡îÁ˚Idítifõr_1
,

117 &
a¢_SPC_I¡îÁ˚Idítifõr_•ecs_1


	@InterfaceType.c

8 
	~"I¡îÁ˚Ty≥.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_I¡îÁ˚Ty≥_c⁄°r_1
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 6 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_I¡îÁ˚Ty≥_vÆue2íum_1
[] = {

29 c⁄° 
	ga¢_MAP_I¡îÁ˚Ty≥_íum2vÆue_1
[] = {

39 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_I¡îÁ˚Ty≥_•ecs_1
 = {

40 
a¢_MAP_I¡îÁ˚Ty≥_vÆue2íum_1
,

41 
a¢_MAP_I¡îÁ˚Ty≥_íum2vÆue_1
,

48 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_I¡îÁ˚Ty≥_ègs_1
[] = {

49 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

51 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_I¡îÁ˚Ty≥
 = {

54 &
a¢_OP_N©iveEnumî©ed
,

55 
a¢_DEF_I¡îÁ˚Ty≥_ègs_1
,

56 (
a¢_DEF_I¡îÁ˚Ty≥_ègs_1
)

57 /(
a¢_DEF_I¡îÁ˚Ty≥_ègs_1
[0]),

58 
a¢_DEF_I¡îÁ˚Ty≥_ègs_1
,

59 (
a¢_DEF_I¡îÁ˚Ty≥_ègs_1
)

60 /(
a¢_DEF_I¡îÁ˚Ty≥_ègs_1
[0]),

61 { 0, &
a¢_PER_ty≥_I¡îÁ˚Ty≥_c⁄°r_1
, 
N©iveEnumî©ed_c⁄°øöt
 },

63 &
a¢_SPC_I¡îÁ˚Ty≥_•ecs_1


	@LabelInfoItem.c

8 
	~"LabñInfoIãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_LabñInfoIãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
LabñInfoIãm
, 
mósLabñ
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_MósuªmítLabñ
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_LabñInfoIãm_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_LabñInfoIãm_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_LabñInfoIãm_•ecs_1
 = {

28 (
LabñInfoIãm
),

29 
off£tof
(
LabñInfoIãm
, 
_a¢_˘x
),

30 
a¢_MAP_LabñInfoIãm_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_LabñInfoIãm
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_LabñInfoIãm_ègs_1
,

40 (
a¢_DEF_LabñInfoIãm_ègs_1
)

41 /(
a¢_DEF_LabñInfoIãm_ègs_1
[0]),

42 
a¢_DEF_LabñInfoIãm_ègs_1
,

43 (
a¢_DEF_LabñInfoIãm_ègs_1
)

44 /(
a¢_DEF_LabñInfoIãm_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_LabñInfoIãm_1
,

48 &
a¢_SPC_LabñInfoIãm_•ecs_1


	@LabelInfoList.c

8 
	~"LabñInfoLi°.h
"

10 
	~"LabñInfoIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_LabñInfoLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 31, -1, 1, 2147483647 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_LabñInfoLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_LabñInfoIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_LabñInfoLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_LabñInfoLi°_•ecs_1
 = {

31 (
LabñInfoLi°
),

32 
off£tof
(
LabñInfoLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_LabñInfoLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_LabñInfoLi°_ègs_1
,

40 (
a¢_DEF_LabñInfoLi°_ègs_1
)

41 /(
a¢_DEF_LabñInfoLi°_ègs_1
[0]),

42 
a¢_DEF_LabñInfoLi°_ègs_1
,

43 (
a¢_DEF_LabñInfoLi°_ègs_1
)

44 /(
a¢_DEF_LabñInfoLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_LabñInfoLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_LabñInfoLi°_1
,

48 &
a¢_SPC_LabñInfoLi°_•ecs_1


	@MME-Code.c

8 
	~"MME-Code.h
"

11 
	$MME_Code_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 1)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MME_Code_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 1, 1 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MME_Code_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MME_Code
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_MME_Code_ègs_1
,

53 (
a¢_DEF_MME_Code_ègs_1
)

54 /(
a¢_DEF_MME_Code_ègs_1
[0]),

55 
a¢_DEF_MME_Code_ègs_1
,

56 (
a¢_DEF_MME_Code_ègs_1
)

57 /(
a¢_DEF_MME_Code_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_MME_Code_c⁄°r_1
, 
MME_Code_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@MME-Group-ID.c

8 
	~"MME-Group-ID.h
"

11 
	$MME_Group_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 2)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MME_Group_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 2, 2 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MME_Group_ID_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MME_Group_ID
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_MME_Group_ID_ègs_1
,

53 (
a¢_DEF_MME_Group_ID_ègs_1
)

54 /(
a¢_DEF_MME_Group_ID_ègs_1
[0]),

55 
a¢_DEF_MME_Group_ID_ègs_1
,

56 (
a¢_DEF_MME_Group_ID_ègs_1
)

57 /(
a¢_DEF_MME_Group_ID_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_MME_Group_ID_c⁄°r_1
, 
MME_Group_ID_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@MME-UE-S1AP-ID.c

8 
	~"MME-UE-S1AP-ID.h
"

11 
	$MME_UE_S1AP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

14 if(!
•å
) {

15 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

17 
td
->
«me
, 
__FILE__
, 
__LINE__
);

24 
	}
}

30 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MME_UE_S1AP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

31 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

32 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

35 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_MME_UE_S1AP_ID_•ecs_1
 = {

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MME_UE_S1AP_ID_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

43 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MME_UE_S1AP_ID
 = {

46 &
a¢_OP_N©iveI¡egî
,

47 
a¢_DEF_MME_UE_S1AP_ID_ègs_1
,

48 (
a¢_DEF_MME_UE_S1AP_ID_ègs_1
)

49 /(
a¢_DEF_MME_UE_S1AP_ID_ègs_1
[0]),

50 
a¢_DEF_MME_UE_S1AP_ID_ègs_1
,

51 (
a¢_DEF_MME_UE_S1AP_ID_ègs_1
)

52 /(
a¢_DEF_MME_UE_S1AP_ID_ègs_1
[0]),

53 { 0, &
a¢_PER_ty≥_MME_UE_S1AP_ID_c⁄°r_1
, 
MME_UE_S1AP_ID_c⁄°øöt
 },

55 &
a¢_SPC_MME_UE_S1AP_ID_•ecs_1


	@MatchingCondItem.c

8 
	~"M©chögC⁄dIãm.h
"

10 
	~"MósuªmítLabñ.h
"

11 
	~"Te°C⁄dInfo.h
"

12 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_M©chögC⁄dIãm_c⁄°r_1
 
	gCC_NOTUSED
 = {

13 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

14 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

17 
a¢_TYPE_membî_t
 
	ga¢_MBR_M©chögC⁄dIãm_1
[] = {

18 { 
ATF_POINTER
, 0, 
off£tof
(
M©chögC⁄dIãm
, 
choi˚
.
mósLabñ
),

19 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

21 &
a¢_DEF_MósuªmítLabñ
,

27 { 
ATF_POINTER
, 0, 
off£tof
(
M©chögC⁄dIãm
, 
choi˚
.
ã°C⁄dInfo
),

28 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

30 &
a¢_DEF_Te°C⁄dInfo
,

37 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_M©chögC⁄dIãm_èg2ñ_1
[] = {

38 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

39 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

41 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_M©chögC⁄dIãm_•ecs_1
 = {

42 (
M©chögC⁄dIãm
),

43 
off£tof
(
M©chögC⁄dIãm
, 
_a¢_˘x
),

44 
off£tof
(
M©chögC⁄dIãm
, 
¥e£¡
),

45 (((
M©chögC⁄dIãm
 *)0)->
¥e£¡
),

46 
a¢_MAP_M©chögC⁄dIãm_èg2ñ_1
,

51 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_M©chögC⁄dIãm
 = {

54 &
a¢_OP_CHOICE
,

59 { 0, &
a¢_PER_ty≥_M©chögC⁄dIãm_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

60 
a¢_MBR_M©chögC⁄dIãm_1
,

62 &
a¢_SPC_M©chögC⁄dIãm_•ecs_1


	@MatchingCondList.c

8 
	~"M©chögC⁄dLi°.h
"

10 
	~"M©chögC⁄dIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_M©chögC⁄dLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 15, 15, 1, 32768 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_M©chögC⁄dLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

20 &
a¢_DEF_M©chögC⁄dIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_M©chögC⁄dLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_M©chögC⁄dLi°_•ecs_1
 = {

31 (
M©chögC⁄dLi°
),

32 
off£tof
(
M©chögC⁄dLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_M©chögC⁄dLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_M©chögC⁄dLi°_ègs_1
,

40 (
a¢_DEF_M©chögC⁄dLi°_ègs_1
)

41 /(
a¢_DEF_M©chögC⁄dLi°_ègs_1
[0]),

42 
a¢_DEF_M©chögC⁄dLi°_ègs_1
,

43 (
a¢_DEF_M©chögC⁄dLi°_ègs_1
)

44 /(
a¢_DEF_M©chögC⁄dLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_M©chögC⁄dLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_M©chögC⁄dLi°_1
,

48 &
a¢_SPC_M©chögC⁄dLi°_•ecs_1


	@MatchingUEidItem.c

8 
	~"M©chögUEidIãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_M©chögUEidIãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
M©chögUEidIãm
, 
ueID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_UEID
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_M©chögUEidIãm_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_M©chögUEidIãm_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_M©chögUEidIãm_•ecs_1
 = {

28 (
M©chögUEidIãm
),

29 
off£tof
(
M©chögUEidIãm
, 
_a¢_˘x
),

30 
a¢_MAP_M©chögUEidIãm_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_M©chögUEidIãm
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_M©chögUEidIãm_ègs_1
,

40 (
a¢_DEF_M©chögUEidIãm_ègs_1
)

41 /(
a¢_DEF_M©chögUEidIãm_ègs_1
[0]),

42 
a¢_DEF_M©chögUEidIãm_ègs_1
,

43 (
a¢_DEF_M©chögUEidIãm_ègs_1
)

44 /(
a¢_DEF_M©chögUEidIãm_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_M©chögUEidIãm_1
,

48 &
a¢_SPC_M©chögUEidIãm_•ecs_1


	@MatchingUEidList.c

8 
	~"M©chögUEidLi°.h
"

10 
	~"M©chögUEidIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_M©chögUEidLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_M©chögUEidLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_M©chögUEidIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_M©chögUEidLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_M©chögUEidLi°_•ecs_1
 = {

31 (
M©chögUEidLi°
),

32 
off£tof
(
M©chögUEidLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_M©chögUEidLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_M©chögUEidLi°_ègs_1
,

40 (
a¢_DEF_M©chögUEidLi°_ègs_1
)

41 /(
a¢_DEF_M©chögUEidLi°_ègs_1
[0]),

42 
a¢_DEF_M©chögUEidLi°_ègs_1
,

43 (
a¢_DEF_M©chögUEidLi°_ègs_1
)

44 /(
a¢_DEF_M©chögUEidLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_M©chögUEidLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_M©chögUEidLi°_1
,

48 &
a¢_SPC_M©chögUEidLi°_•ecs_1


	@MeasurementCondItem.c

8 
	~"MósuªmítC⁄dIãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítC⁄dIãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítC⁄dIãm
, 
mósTy≥
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_MósuªmítTy≥
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítC⁄dIãm
, 
m©chögC⁄d
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_M©chögC⁄dLi°
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítC⁄dIãm_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítC⁄dIãm_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_MósuªmítC⁄dIãm_•ecs_1
 = {

38 (
MósuªmítC⁄dIãm
),

39 
off£tof
(
MósuªmítC⁄dIãm
, 
_a¢_˘x
),

40 
a¢_MAP_MósuªmítC⁄dIãm_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítC⁄dIãm
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_MósuªmítC⁄dIãm_ègs_1
,

50 (
a¢_DEF_MósuªmítC⁄dIãm_ègs_1
)

51 /(
a¢_DEF_MósuªmítC⁄dIãm_ègs_1
[0]),

52 
a¢_DEF_MósuªmítC⁄dIãm_ègs_1
,

53 (
a¢_DEF_MósuªmítC⁄dIãm_ègs_1
)

54 /(
a¢_DEF_MósuªmítC⁄dIãm_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_MósuªmítC⁄dIãm_1
,

58 &
a¢_SPC_MósuªmítC⁄dIãm_•ecs_1


	@MeasurementCondList.c

8 
	~"MósuªmítC⁄dLi°.h
"

10 
	~"MósuªmítC⁄dIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítC⁄dLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítC⁄dLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_MósuªmítC⁄dIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítC⁄dLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_MósuªmítC⁄dLi°_•ecs_1
 = {

31 (
MósuªmítC⁄dLi°
),

32 
off£tof
(
MósuªmítC⁄dLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítC⁄dLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_MósuªmítC⁄dLi°_ègs_1
,

40 (
a¢_DEF_MósuªmítC⁄dLi°_ègs_1
)

41 /(
a¢_DEF_MósuªmítC⁄dLi°_ègs_1
[0]),

42 
a¢_DEF_MósuªmítC⁄dLi°_ègs_1
,

43 (
a¢_DEF_MósuªmítC⁄dLi°_ègs_1
)

44 /(
a¢_DEF_MósuªmítC⁄dLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_MósuªmítC⁄dLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_MósuªmítC⁄dLi°_1
,

48 &
a¢_SPC_MósuªmítC⁄dLi°_•ecs_1


	@MeasurementCondUEidItem.c

8 
	~"MósuªmítC⁄dUEidIãm.h
"

10 
	~"M©chögUEidLi°.h
"

11 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítC⁄dUEidIãm_1
[] = {

12 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítC⁄dUEidIãm
, 
mósTy≥
),

13 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

15 &
a¢_DEF_MósuªmítTy≥
,

21 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítC⁄dUEidIãm
, 
m©chögC⁄d
),

22 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

24 &
a¢_DEF_M©chögC⁄dLi°
,

30 { 
ATF_POINTER
, 1, 
off£tof
(
MósuªmítC⁄dUEidIãm
, 
m©chögUEidLi°
),

31 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

33 &
a¢_DEF_M©chögUEidLi°
,

40 c⁄° 
	ga¢_MAP_MósuªmítC⁄dUEidIãm_oms_1
[] = { 2 };

41 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
[] = {

42 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

44 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítC⁄dUEidIãm_èg2ñ_1
[] = {

45 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

46 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

47 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

49 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_MósuªmítC⁄dUEidIãm_•ecs_1
 = {

50 (
MósuªmítC⁄dUEidIãm
),

51 
off£tof
(
MósuªmítC⁄dUEidIãm
, 
_a¢_˘x
),

52 
a¢_MAP_MósuªmítC⁄dUEidIãm_èg2ñ_1
,

54 
a¢_MAP_MósuªmítC⁄dUEidIãm_oms_1
,

58 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítC⁄dUEidIãm
 = {

61 &
a¢_OP_SEQUENCE
,

62 
a¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
,

63 (
a¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
)

64 /(
a¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
[0]),

65 
a¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
,

66 (
a¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
)

67 /(
a¢_DEF_MósuªmítC⁄dUEidIãm_ègs_1
[0]),

68 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

69 
a¢_MBR_MósuªmítC⁄dUEidIãm_1
,

71 &
a¢_SPC_MósuªmítC⁄dUEidIãm_•ecs_1


	@MeasurementCondUEidList.c

8 
	~"MósuªmítC⁄dUEidLi°.h
"

10 
	~"MósuªmítC⁄dUEidIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítC⁄dUEidLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítC⁄dUEidLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_MósuªmítC⁄dUEidIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_MósuªmítC⁄dUEidLi°_•ecs_1
 = {

31 (
MósuªmítC⁄dUEidLi°
),

32 
off£tof
(
MósuªmítC⁄dUEidLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítC⁄dUEidLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
,

40 (
a¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
)

41 /(
a¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
[0]),

42 
a¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
,

43 (
a¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
)

44 /(
a¢_DEF_MósuªmítC⁄dUEidLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_MósuªmítC⁄dUEidLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_MósuªmítC⁄dUEidLi°_1
,

48 &
a¢_SPC_MósuªmítC⁄dUEidLi°_•ecs_1


	@MeasurementData.c

8 
	~"MósuªmítD©a.h
"

10 
	~"MósuªmítD©aIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítD©a_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítD©a_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_MósuªmítD©aIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítD©a_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_MósuªmítD©a_•ecs_1
 = {

31 (
MósuªmítD©a
),

32 
off£tof
(
MósuªmítD©a
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítD©a
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_MósuªmítD©a_ègs_1
,

40 (
a¢_DEF_MósuªmítD©a_ègs_1
)

41 /(
a¢_DEF_MósuªmítD©a_ègs_1
[0]),

42 
a¢_DEF_MósuªmítD©a_ègs_1
,

43 (
a¢_DEF_MósuªmítD©a_ègs_1
)

44 /(
a¢_DEF_MósuªmítD©a_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_MósuªmítD©a_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_MósuªmítD©a_1
,

48 &
a¢_SPC_MósuªmítD©a_•ecs_1


	@MeasurementDataItem.c

8 
	~"MósuªmítD©aIãm.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_öcom∂ëeFœg_c⁄°r_3
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_öcom∂ëeFœg_vÆue2íum_3
[] = {

23 c⁄° 
	ga¢_MAP_öcom∂ëeFœg_íum2vÆue_3
[] = {

27 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_öcom∂ëeFœg_•ecs_3
 = {

28 
a¢_MAP_öcom∂ëeFœg_vÆue2íum_3
,

29 
a¢_MAP_öcom∂ëeFœg_íum2vÆue_3
,

36 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_öcom∂ëeFœg_ègs_3
[] = {

37 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

38 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

41 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_öcom∂ëeFœg_3
 = {

44 &
a¢_OP_N©iveEnumî©ed
,

45 
a¢_DEF_öcom∂ëeFœg_ègs_3
,

46 (
a¢_DEF_öcom∂ëeFœg_ègs_3
)

47 /(
a¢_DEF_öcom∂ëeFœg_ègs_3
[0]) - 1,

48 
a¢_DEF_öcom∂ëeFœg_ègs_3
,

49 (
a¢_DEF_öcom∂ëeFœg_ègs_3
)

50 /(
a¢_DEF_öcom∂ëeFœg_ègs_3
[0]),

51 { 0, &
a¢_PER_ty≥_öcom∂ëeFœg_c⁄°r_3
, 
N©iveEnumî©ed_c⁄°øöt
 },

53 &
a¢_SPC_öcom∂ëeFœg_•ecs_3


56 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítD©aIãm_1
[] = {

57 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítD©aIãm
, 
mósRec‹d
),

58 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

60 &
a¢_DEF_MósuªmítRec‹d
,

66 { 
ATF_POINTER
, 1, 
off£tof
(
MósuªmítD©aIãm
, 
öcom∂ëeFœg
),

67 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

69 &
a¢_DEF_öcom∂ëeFœg_3
,

76 c⁄° 
	ga¢_MAP_MósuªmítD©aIãm_oms_1
[] = { 1 };

77 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítD©aIãm_ègs_1
[] = {

78 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

80 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítD©aIãm_èg2ñ_1
[] = {

81 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

82 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

84 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_MósuªmítD©aIãm_•ecs_1
 = {

85 (
MósuªmítD©aIãm
),

86 
off£tof
(
MósuªmítD©aIãm
, 
_a¢_˘x
),

87 
a¢_MAP_MósuªmítD©aIãm_èg2ñ_1
,

89 
a¢_MAP_MósuªmítD©aIãm_oms_1
,

93 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítD©aIãm
 = {

96 &
a¢_OP_SEQUENCE
,

97 
a¢_DEF_MósuªmítD©aIãm_ègs_1
,

98 (
a¢_DEF_MósuªmítD©aIãm_ègs_1
)

99 /(
a¢_DEF_MósuªmítD©aIãm_ègs_1
[0]),

100 
a¢_DEF_MósuªmítD©aIãm_ègs_1
,

101 (
a¢_DEF_MósuªmítD©aIãm_ègs_1
)

102 /(
a¢_DEF_MósuªmítD©aIãm_ègs_1
[0]),

103 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

104 
a¢_MBR_MósuªmítD©aIãm_1
,

106 &
a¢_SPC_MósuªmítD©aIãm_•ecs_1


	@MeasurementInfo-Action-Item.c

8 
	~"MósuªmítInfo-A˘i⁄-Iãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítInfo_A˘i⁄_Iãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítInfo_A˘i⁄_Iãm
, 
mósName
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_MósuªmítTy≥Name
,

20 { 
ATF_POINTER
, 1, 
off£tof
(
MósuªmítInfo_A˘i⁄_Iãm
, 
mósID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_MósuªmítTy≥ID
,

30 c⁄° 
	ga¢_MAP_MósuªmítInfo_A˘i⁄_Iãm_oms_1
[] = { 1 };

31 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
[] = {

32 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

34 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítInfo_A˘i⁄_Iãm_èg2ñ_1
[] = {

35 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

36 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

38 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_MósuªmítInfo_A˘i⁄_Iãm_•ecs_1
 = {

39 (
MósuªmítInfo_A˘i⁄_Iãm
),

40 
off£tof
(
MósuªmítInfo_A˘i⁄_Iãm
, 
_a¢_˘x
),

41 
a¢_MAP_MósuªmítInfo_A˘i⁄_Iãm_èg2ñ_1
,

43 
a¢_MAP_MósuªmítInfo_A˘i⁄_Iãm_oms_1
,

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítInfo_A˘i⁄_Iãm
 = {

50 &
a¢_OP_SEQUENCE
,

51 
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
,

52 (
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
)

53 /(
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
[0]),

54 
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
,

55 (
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
)

56 /(
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm_ègs_1
[0]),

57 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

58 
a¢_MBR_MósuªmítInfo_A˘i⁄_Iãm_1
,

60 &
a¢_SPC_MósuªmítInfo_A˘i⁄_Iãm_•ecs_1


	@MeasurementInfo-Action-List.c

8 
	~"MósuªmítInfo-A˘i⁄-Li°.h
"

10 
	~"MósuªmítInfo-A˘i⁄-Iãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítInfo_A˘i⁄_Li°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítInfo_A˘i⁄_Li°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_MósuªmítInfo_A˘i⁄_Iãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_MósuªmítInfo_A˘i⁄_Li°_•ecs_1
 = {

31 (
MósuªmítInfo_A˘i⁄_Li°
),

32 
off£tof
(
MósuªmítInfo_A˘i⁄_Li°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítInfo_A˘i⁄_Li°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
,

40 (
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
)

41 /(
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
[0]),

42 
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
,

43 (
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
)

44 /(
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_MósuªmítInfo_A˘i⁄_Li°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_MósuªmítInfo_A˘i⁄_Li°_1
,

48 &
a¢_SPC_MósuªmítInfo_A˘i⁄_Li°_•ecs_1


	@MeasurementInfoItem.c

8 
	~"MósuªmítInfoIãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítInfoIãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítInfoIãm
, 
mósTy≥
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_MósuªmítTy≥
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítInfoIãm
, 
œbñInfoLi°
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_LabñInfoLi°
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítInfoIãm_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítInfoIãm_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_MósuªmítInfoIãm_•ecs_1
 = {

38 (
MósuªmítInfoIãm
),

39 
off£tof
(
MósuªmítInfoIãm
, 
_a¢_˘x
),

40 
a¢_MAP_MósuªmítInfoIãm_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítInfoIãm
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_MósuªmítInfoIãm_ègs_1
,

50 (
a¢_DEF_MósuªmítInfoIãm_ègs_1
)

51 /(
a¢_DEF_MósuªmítInfoIãm_ègs_1
[0]),

52 
a¢_DEF_MósuªmítInfoIãm_ègs_1
,

53 (
a¢_DEF_MósuªmítInfoIãm_ègs_1
)

54 /(
a¢_DEF_MósuªmítInfoIãm_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_MósuªmítInfoIãm_1
,

58 &
a¢_SPC_MósuªmítInfoIãm_•ecs_1


	@MeasurementInfoList.c

8 
	~"MósuªmítInfoLi°.h
"

10 
	~"MósuªmítInfoIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítInfoLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítInfoLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_MósuªmítInfoIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítInfoLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_MósuªmítInfoLi°_•ecs_1
 = {

31 (
MósuªmítInfoLi°
),

32 
off£tof
(
MósuªmítInfoLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítInfoLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_MósuªmítInfoLi°_ègs_1
,

40 (
a¢_DEF_MósuªmítInfoLi°_ègs_1
)

41 /(
a¢_DEF_MósuªmítInfoLi°_ègs_1
[0]),

42 
a¢_DEF_MósuªmítInfoLi°_ègs_1
,

43 (
a¢_DEF_MósuªmítInfoLi°_ègs_1
)

44 /(
a¢_DEF_MósuªmítInfoLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_MósuªmítInfoLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_MósuªmítInfoLi°_1
,

48 &
a¢_SPC_MósuªmítInfoLi°_•ecs_1


	@MeasurementLabel.c

8 
	~"MósuªmítLabñ.h
"

10 
	~"S-NSSAI.h
"

40 
	$memb_aRPmax_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

41 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

42 
vÆue
;

44 if(!
•å
) {

45 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

47 
td
->
«me
, 
__FILE__
, 
__LINE__
);

51 
vÆue
 = *(c⁄° *)
•å
;

53 if((
vÆue
 >= 1 && value <= 15)) {

57 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

59 
td
->
«me
, 
__FILE__
, 
__LINE__
);

62 
	}
}

65 
	$memb_aRPmö_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

66 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

67 
vÆue
;

69 if(!
•å
) {

70 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

72 
td
->
«me
, 
__FILE__
, 
__LINE__
);

76 
vÆue
 = *(c⁄° *)
•å
;

78 if((
vÆue
 >= 1 && value <= 15)) {

82 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

84 
td
->
«me
, 
__FILE__
, 
__LINE__
);

87 
	}
}

90 
	$memb_bôøãR™ge_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

91 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

92 
vÆue
;

94 if(!
•å
) {

95 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

97 
td
->
«me
, 
__FILE__
, 
__LINE__
);

101 
vÆue
 = *(c⁄° *)
•å
;

103 if((
vÆue
 >= 1 && value <= 65535)) {

107 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

109 
td
->
«me
, 
__FILE__
, 
__LINE__
);

112 
	}
}

115 
	$memb_œyîMU_MIMO_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

116 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

117 
vÆue
;

119 if(!
•å
) {

120 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

122 
td
->
«me
, 
__FILE__
, 
__LINE__
);

126 
vÆue
 = *(c⁄° *)
•å
;

128 if((
vÆue
 >= 1 && value <= 65535)) {

132 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

134 
td
->
«me
, 
__FILE__
, 
__LINE__
);

137 
	}
}

140 
	$memb_di°BöX_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

141 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

142 
vÆue
;

144 if(!
•å
) {

145 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

147 
td
->
«me
, 
__FILE__
, 
__LINE__
);

151 
vÆue
 = *(c⁄° *)
•å
;

153 if((
vÆue
 >= 1 && value <= 65535)) {

157 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

159 
td
->
«me
, 
__FILE__
, 
__LINE__
);

162 
	}
}

165 
	$memb_di°BöY_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

166 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

167 
vÆue
;

169 if(!
•å
) {

170 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

172 
td
->
«me
, 
__FILE__
, 
__LINE__
);

176 
vÆue
 = *(c⁄° *)
•å
;

178 if((
vÆue
 >= 1 && value <= 65535)) {

182 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

184 
td
->
«me
, 
__FILE__
, 
__LINE__
);

187 
	}
}

190 
	$memb_di°BöZ_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

191 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

192 
vÆue
;

194 if(!
•å
) {

195 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

197 
td
->
«me
, 
__FILE__
, 
__LINE__
);

201 
vÆue
 = *(c⁄° *)
•å
;

203 if((
vÆue
 >= 1 && value <= 65535)) {

207 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

209 
td
->
«me
, 
__FILE__
, 
__LINE__
);

212 
	}
}

214 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_noLabñ_c⁄°r_2
 
	gCC_NOTUSED
 = {

215 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

216 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

219 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_sUM_c⁄°r_16
 
	gCC_NOTUSED
 = {

220 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

221 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

224 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_¥eLabñOvîride_c⁄°r_22
 
	gCC_NOTUSED
 = {

225 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

226 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

229 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_°¨tEndInd_c⁄°r_25
 
	gCC_NOTUSED
 = {

230 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

231 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

234 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_mö_c⁄°r_29
 
	gCC_NOTUSED
 = {

235 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

236 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

239 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_max_c⁄°r_32
 
	gCC_NOTUSED
 = {

240 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

241 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

244 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_avg_c⁄°r_35
 
	gCC_NOTUSED
 = {

245 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

246 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

249 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_aRPmax_c⁄°r_12
 
	gCC_NOTUSED
 = {

250 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 4, 4, 1, 15 } ,

251 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

254 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_aRPmö_c⁄°r_13
 
	gCC_NOTUSED
 = {

255 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 4, 4, 1, 15 } ,

256 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

259 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_bôøãR™ge_c⁄°r_14
 
	gCC_NOTUSED
 = {

260 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 16, 16, 1, 65535 } ,

261 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

264 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_œyîMU_MIMO_c⁄°r_15
 
	gCC_NOTUSED
 = {

265 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 16, 16, 1, 65535 } ,

266 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

269 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_di°BöX_c⁄°r_19
 
	gCC_NOTUSED
 = {

270 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 16, 16, 1, 65535 } ,

271 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

274 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_di°BöY_c⁄°r_20
 
	gCC_NOTUSED
 = {

275 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 16, 16, 1, 65535 } ,

276 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

279 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_di°BöZ_c⁄°r_21
 
	gCC_NOTUSED
 = {

280 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 16, 16, 1, 65535 } ,

281 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

284 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_noLabñ_vÆue2íum_2
[] = {

288 c⁄° 
	ga¢_MAP_noLabñ_íum2vÆue_2
[] = {

292 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_noLabñ_•ecs_2
 = {

293 
a¢_MAP_noLabñ_vÆue2íum_2
,

294 
a¢_MAP_noLabñ_íum2vÆue_2
,

301 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_noLabñ_ègs_2
[] = {

302 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

303 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

306 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_noLabñ_2
 = {

309 &
a¢_OP_N©iveEnumî©ed
,

310 
a¢_DEF_noLabñ_ègs_2
,

311 (
a¢_DEF_noLabñ_ègs_2
)

312 /(
a¢_DEF_noLabñ_ègs_2
[0]) - 1,

313 
a¢_DEF_noLabñ_ègs_2
,

314 (
a¢_DEF_noLabñ_ègs_2
)

315 /(
a¢_DEF_noLabñ_ègs_2
[0]),

316 { 0, &
a¢_PER_ty≥_noLabñ_c⁄°r_2
, 
N©iveEnumî©ed_c⁄°øöt
 },

318 &
a¢_SPC_noLabñ_•ecs_2


321 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_sUM_vÆue2íum_16
[] = {

325 c⁄° 
	ga¢_MAP_sUM_íum2vÆue_16
[] = {

329 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_sUM_•ecs_16
 = {

330 
a¢_MAP_sUM_vÆue2íum_16
,

331 
a¢_MAP_sUM_íum2vÆue_16
,

338 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_sUM_ègs_16
[] = {

339 (
ASN_TAG_CLASS_CONTEXT
 | (12 << 2)),

340 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

343 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_sUM_16
 = {

346 &
a¢_OP_N©iveEnumî©ed
,

347 
a¢_DEF_sUM_ègs_16
,

348 (
a¢_DEF_sUM_ègs_16
)

349 /(
a¢_DEF_sUM_ègs_16
[0]) - 1,

350 
a¢_DEF_sUM_ègs_16
,

351 (
a¢_DEF_sUM_ègs_16
)

352 /(
a¢_DEF_sUM_ègs_16
[0]),

353 { 0, &
a¢_PER_ty≥_sUM_c⁄°r_16
, 
N©iveEnumî©ed_c⁄°øöt
 },

355 &
a¢_SPC_sUM_•ecs_16


358 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_¥eLabñOvîride_vÆue2íum_22
[] = {

362 c⁄° 
	ga¢_MAP_¥eLabñOvîride_íum2vÆue_22
[] = {

366 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_¥eLabñOvîride_•ecs_22
 = {

367 
a¢_MAP_¥eLabñOvîride_vÆue2íum_22
,

368 
a¢_MAP_¥eLabñOvîride_íum2vÆue_22
,

375 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_¥eLabñOvîride_ègs_22
[] = {

376 (
ASN_TAG_CLASS_CONTEXT
 | (16 << 2)),

377 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

380 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_¥eLabñOvîride_22
 = {

383 &
a¢_OP_N©iveEnumî©ed
,

384 
a¢_DEF_¥eLabñOvîride_ègs_22
,

385 (
a¢_DEF_¥eLabñOvîride_ègs_22
)

386 /(
a¢_DEF_¥eLabñOvîride_ègs_22
[0]) - 1,

387 
a¢_DEF_¥eLabñOvîride_ègs_22
,

388 (
a¢_DEF_¥eLabñOvîride_ègs_22
)

389 /(
a¢_DEF_¥eLabñOvîride_ègs_22
[0]),

390 { 0, &
a¢_PER_ty≥_¥eLabñOvîride_c⁄°r_22
, 
N©iveEnumî©ed_c⁄°øöt
 },

392 &
a¢_SPC_¥eLabñOvîride_•ecs_22


395 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_°¨tEndInd_vÆue2íum_25
[] = {

400 c⁄° 
	ga¢_MAP_°¨tEndInd_íum2vÆue_25
[] = {

405 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_°¨tEndInd_•ecs_25
 = {

406 
a¢_MAP_°¨tEndInd_vÆue2íum_25
,

407 
a¢_MAP_°¨tEndInd_íum2vÆue_25
,

414 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_°¨tEndInd_ègs_25
[] = {

415 (
ASN_TAG_CLASS_CONTEXT
 | (17 << 2)),

416 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

419 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_°¨tEndInd_25
 = {

422 &
a¢_OP_N©iveEnumî©ed
,

423 
a¢_DEF_°¨tEndInd_ègs_25
,

424 (
a¢_DEF_°¨tEndInd_ègs_25
)

425 /(
a¢_DEF_°¨tEndInd_ègs_25
[0]) - 1,

426 
a¢_DEF_°¨tEndInd_ègs_25
,

427 (
a¢_DEF_°¨tEndInd_ègs_25
)

428 /(
a¢_DEF_°¨tEndInd_ègs_25
[0]),

429 { 0, &
a¢_PER_ty≥_°¨tEndInd_c⁄°r_25
, 
N©iveEnumî©ed_c⁄°øöt
 },

431 &
a¢_SPC_°¨tEndInd_•ecs_25


434 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_mö_vÆue2íum_29
[] = {

438 c⁄° 
	ga¢_MAP_mö_íum2vÆue_29
[] = {

442 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_mö_•ecs_29
 = {

443 
a¢_MAP_mö_vÆue2íum_29
,

444 
a¢_MAP_mö_íum2vÆue_29
,

451 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_mö_ègs_29
[] = {

452 (
ASN_TAG_CLASS_CONTEXT
 | (18 << 2)),

453 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

456 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_mö_29
 = {

459 &
a¢_OP_N©iveEnumî©ed
,

460 
a¢_DEF_mö_ègs_29
,

461 (
a¢_DEF_mö_ègs_29
)

462 /(
a¢_DEF_mö_ègs_29
[0]) - 1,

463 
a¢_DEF_mö_ègs_29
,

464 (
a¢_DEF_mö_ègs_29
)

465 /(
a¢_DEF_mö_ègs_29
[0]),

466 { 0, &
a¢_PER_ty≥_mö_c⁄°r_29
, 
N©iveEnumî©ed_c⁄°øöt
 },

468 &
a¢_SPC_mö_•ecs_29


471 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_max_vÆue2íum_32
[] = {

475 c⁄° 
	ga¢_MAP_max_íum2vÆue_32
[] = {

479 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_max_•ecs_32
 = {

480 
a¢_MAP_max_vÆue2íum_32
,

481 
a¢_MAP_max_íum2vÆue_32
,

488 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_max_ègs_32
[] = {

489 (
ASN_TAG_CLASS_CONTEXT
 | (19 << 2)),

490 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

493 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_max_32
 = {

496 &
a¢_OP_N©iveEnumî©ed
,

497 
a¢_DEF_max_ègs_32
,

498 (
a¢_DEF_max_ègs_32
)

499 /(
a¢_DEF_max_ègs_32
[0]) - 1,

500 
a¢_DEF_max_ègs_32
,

501 (
a¢_DEF_max_ègs_32
)

502 /(
a¢_DEF_max_ègs_32
[0]),

503 { 0, &
a¢_PER_ty≥_max_c⁄°r_32
, 
N©iveEnumî©ed_c⁄°øöt
 },

505 &
a¢_SPC_max_•ecs_32


508 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_avg_vÆue2íum_35
[] = {

512 c⁄° 
	ga¢_MAP_avg_íum2vÆue_35
[] = {

516 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_avg_•ecs_35
 = {

517 
a¢_MAP_avg_vÆue2íum_35
,

518 
a¢_MAP_avg_íum2vÆue_35
,

525 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_avg_ègs_35
[] = {

526 (
ASN_TAG_CLASS_CONTEXT
 | (20 << 2)),

527 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

530 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_avg_35
 = {

533 &
a¢_OP_N©iveEnumî©ed
,

534 
a¢_DEF_avg_ègs_35
,

535 (
a¢_DEF_avg_ègs_35
)

536 /(
a¢_DEF_avg_ègs_35
[0]) - 1,

537 
a¢_DEF_avg_ègs_35
,

538 (
a¢_DEF_avg_ègs_35
)

539 /(
a¢_DEF_avg_ègs_35
[0]),

540 { 0, &
a¢_PER_ty≥_avg_c⁄°r_35
, 
N©iveEnumî©ed_c⁄°øöt
 },

542 &
a¢_SPC_avg_•ecs_35


545 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítLabñ_1
[] = {

546 { 
ATF_POINTER
, 21, 
off£tof
(
MósuªmítLabñ
, 
noLabñ
),

547 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

549 &
a¢_DEF_noLabñ_2
,

555 { 
ATF_POINTER
, 20, 
off£tof
(
MósuªmítLabñ
, 
∂mnID
),

556 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

558 &
a¢_DEF_PLMNIdítôy
,

564 { 
ATF_POINTER
, 19, 
off£tof
(
MósuªmítLabñ
, 
¶i˚ID
),

565 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

567 &
a¢_DEF_S_NSSAI
,

573 { 
ATF_POINTER
, 18, 
off£tof
(
MósuªmítLabñ
, 
fiveQI
),

574 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

576 &
a¢_DEF_FiveQI
,

582 { 
ATF_POINTER
, 17, 
off£tof
(
MósuªmítLabñ
, 
qFI
),

583 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

585 &
a¢_DEF_QosFlowIdítifõr
,

591 { 
ATF_POINTER
, 16, 
off£tof
(
MósuªmítLabñ
, 
qCI
),

592 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

594 &
a¢_DEF_QCI
,

600 { 
ATF_POINTER
, 15, 
off£tof
(
MósuªmítLabñ
, 
qCImax
),

601 (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)),

603 &
a¢_DEF_QCI
,

609 { 
ATF_POINTER
, 14, 
off£tof
(
MósuªmítLabñ
, 
qCImö
),

610 (
ASN_TAG_CLASS_CONTEXT
 | (7 << 2)),

612 &
a¢_DEF_QCI
,

618 { 
ATF_POINTER
, 13, 
off£tof
(
MósuªmítLabñ
, 
aRPmax
),

619 (
ASN_TAG_CLASS_CONTEXT
 | (8 << 2)),

621 &
a¢_DEF_N©iveI¡egî
,

623 { 0, &
a¢_PER_memb_aRPmax_c⁄°r_12
, 
memb_aRPmax_c⁄°øöt_1
 },

627 { 
ATF_POINTER
, 12, 
off£tof
(
MósuªmítLabñ
, 
aRPmö
),

628 (
ASN_TAG_CLASS_CONTEXT
 | (9 << 2)),

630 &
a¢_DEF_N©iveI¡egî
,

632 { 0, &
a¢_PER_memb_aRPmö_c⁄°r_13
, 
memb_aRPmö_c⁄°øöt_1
 },

636 { 
ATF_POINTER
, 11, 
off£tof
(
MósuªmítLabñ
, 
bôøãR™ge
),

637 (
ASN_TAG_CLASS_CONTEXT
 | (10 << 2)),

639 &
a¢_DEF_N©iveI¡egî
,

641 { 0, &
a¢_PER_memb_bôøãR™ge_c⁄°r_14
, 
memb_bôøãR™ge_c⁄°øöt_1
 },

645 { 
ATF_POINTER
, 10, 
off£tof
(
MósuªmítLabñ
, 
œyîMU_MIMO
),

646 (
ASN_TAG_CLASS_CONTEXT
 | (11 << 2)),

648 &
a¢_DEF_N©iveI¡egî
,

650 { 0, &
a¢_PER_memb_œyîMU_MIMO_c⁄°r_15
, 
memb_œyîMU_MIMO_c⁄°øöt_1
 },

654 { 
ATF_POINTER
, 9, 
off£tof
(
MósuªmítLabñ
, 
sUM
),

655 (
ASN_TAG_CLASS_CONTEXT
 | (12 << 2)),

657 &
a¢_DEF_sUM_16
,

663 { 
ATF_POINTER
, 8, 
off£tof
(
MósuªmítLabñ
, 
di°BöX
),

664 (
ASN_TAG_CLASS_CONTEXT
 | (13 << 2)),

666 &
a¢_DEF_N©iveI¡egî
,

668 { 0, &
a¢_PER_memb_di°BöX_c⁄°r_19
, 
memb_di°BöX_c⁄°øöt_1
 },

672 { 
ATF_POINTER
, 7, 
off£tof
(
MósuªmítLabñ
, 
di°BöY
),

673 (
ASN_TAG_CLASS_CONTEXT
 | (14 << 2)),

675 &
a¢_DEF_N©iveI¡egî
,

677 { 0, &
a¢_PER_memb_di°BöY_c⁄°r_20
, 
memb_di°BöY_c⁄°øöt_1
 },

681 { 
ATF_POINTER
, 6, 
off£tof
(
MósuªmítLabñ
, 
di°BöZ
),

682 (
ASN_TAG_CLASS_CONTEXT
 | (15 << 2)),

684 &
a¢_DEF_N©iveI¡egî
,

686 { 0, &
a¢_PER_memb_di°BöZ_c⁄°r_21
, 
memb_di°BöZ_c⁄°øöt_1
 },

690 { 
ATF_POINTER
, 5, 
off£tof
(
MósuªmítLabñ
, 
¥eLabñOvîride
),

691 (
ASN_TAG_CLASS_CONTEXT
 | (16 << 2)),

693 &
a¢_DEF_¥eLabñOvîride_22
,

699 { 
ATF_POINTER
, 4, 
off£tof
(
MósuªmítLabñ
, 
°¨tEndInd
),

700 (
ASN_TAG_CLASS_CONTEXT
 | (17 << 2)),

702 &
a¢_DEF_°¨tEndInd_25
,

708 { 
ATF_POINTER
, 3, 
off£tof
(
MósuªmítLabñ
, 
mö
),

709 (
ASN_TAG_CLASS_CONTEXT
 | (18 << 2)),

711 &
a¢_DEF_mö_29
,

717 { 
ATF_POINTER
, 2, 
off£tof
(
MósuªmítLabñ
, 
max
),

718 (
ASN_TAG_CLASS_CONTEXT
 | (19 << 2)),

720 &
a¢_DEF_max_32
,

726 { 
ATF_POINTER
, 1, 
off£tof
(
MósuªmítLabñ
, 
avg
),

727 (
ASN_TAG_CLASS_CONTEXT
 | (20 << 2)),

729 &
a¢_DEF_avg_35
,

736 c⁄° 
	ga¢_MAP_MósuªmítLabñ_oms_1
[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 };

737 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítLabñ_ègs_1
[] = {

738 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

740 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítLabñ_èg2ñ_1
[] = {

741 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

742 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

743 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

744 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

745 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

746 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 },

747 { (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)), 6, 0, 0 },

748 { (
ASN_TAG_CLASS_CONTEXT
 | (7 << 2)), 7, 0, 0 },

749 { (
ASN_TAG_CLASS_CONTEXT
 | (8 << 2)), 8, 0, 0 },

750 { (
ASN_TAG_CLASS_CONTEXT
 | (9 << 2)), 9, 0, 0 },

751 { (
ASN_TAG_CLASS_CONTEXT
 | (10 << 2)), 10, 0, 0 },

752 { (
ASN_TAG_CLASS_CONTEXT
 | (11 << 2)), 11, 0, 0 },

753 { (
ASN_TAG_CLASS_CONTEXT
 | (12 << 2)), 12, 0, 0 },

754 { (
ASN_TAG_CLASS_CONTEXT
 | (13 << 2)), 13, 0, 0 },

755 { (
ASN_TAG_CLASS_CONTEXT
 | (14 << 2)), 14, 0, 0 },

756 { (
ASN_TAG_CLASS_CONTEXT
 | (15 << 2)), 15, 0, 0 },

757 { (
ASN_TAG_CLASS_CONTEXT
 | (16 << 2)), 16, 0, 0 },

758 { (
ASN_TAG_CLASS_CONTEXT
 | (17 << 2)), 17, 0, 0 },

759 { (
ASN_TAG_CLASS_CONTEXT
 | (18 << 2)), 18, 0, 0 },

760 { (
ASN_TAG_CLASS_CONTEXT
 | (19 << 2)), 19, 0, 0 },

761 { (
ASN_TAG_CLASS_CONTEXT
 | (20 << 2)), 20, 0, 0 }

763 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_MósuªmítLabñ_•ecs_1
 = {

764 (
MósuªmítLabñ
),

765 
off£tof
(
MósuªmítLabñ
, 
_a¢_˘x
),

766 
a¢_MAP_MósuªmítLabñ_èg2ñ_1
,

768 
a¢_MAP_MósuªmítLabñ_oms_1
,

772 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítLabñ
 = {

775 &
a¢_OP_SEQUENCE
,

776 
a¢_DEF_MósuªmítLabñ_ègs_1
,

777 (
a¢_DEF_MósuªmítLabñ_ègs_1
)

778 /(
a¢_DEF_MósuªmítLabñ_ègs_1
[0]),

779 
a¢_DEF_MósuªmítLabñ_ègs_1
,

780 (
a¢_DEF_MósuªmítLabñ_ègs_1
)

781 /(
a¢_DEF_MósuªmítLabñ_ègs_1
[0]),

782 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

783 
a¢_MBR_MósuªmítLabñ_1
,

785 &
a¢_SPC_MósuªmítLabñ_•ecs_1


	@MeasurementRecord.c

8 
	~"MósuªmítRec‹d.h
"

10 
	~"MósuªmítRec‹dIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítRec‹d_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 31, -1, 1, 2147483647 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítRec‹d_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

20 &
a¢_DEF_MósuªmítRec‹dIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítRec‹d_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_MósuªmítRec‹d_•ecs_1
 = {

31 (
MósuªmítRec‹d
),

32 
off£tof
(
MósuªmítRec‹d
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítRec‹d
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_MósuªmítRec‹d_ègs_1
,

40 (
a¢_DEF_MósuªmítRec‹d_ègs_1
)

41 /(
a¢_DEF_MósuªmítRec‹d_ègs_1
[0]),

42 
a¢_DEF_MósuªmítRec‹d_ègs_1
,

43 (
a¢_DEF_MósuªmítRec‹d_ègs_1
)

44 /(
a¢_DEF_MósuªmítRec‹d_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_MósuªmítRec‹d_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_MósuªmítRec‹d_1
,

48 &
a¢_SPC_MósuªmítRec‹d_•ecs_1


	@MeasurementRecordItem.c

8 
	~"MósuªmítRec‹dIãm.h
"

11 
	$öãgî_2_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

14 if(!
•å
) {

15 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

17 
td
->
«me
, 
__FILE__
, 
__LINE__
);

24 
	}
}

31 
	$memb_öãgî_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

32 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

34 if(!
•å
) {

35 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

37 
td
->
«me
, 
__FILE__
, 
__LINE__
);

44 
	}
}

46 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_öãgî_c⁄°r_2
 
	gCC_NOTUSED
 = {

47 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

48 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

51 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_öãgî_c⁄°r_2
 
	gCC_NOTUSED
 = {

52 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

53 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

56 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítRec‹dIãm_c⁄°r_1
 
	gCC_NOTUSED
 = {

57 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 2, 2, 0, 2 } ,

58 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

61 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_öãgî_•ecs_2
 = {

66 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_öãgî_ègs_2
[] = {

67 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

68 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

71 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_öãgî_2
 = {

74 &
a¢_OP_N©iveI¡egî
,

75 
a¢_DEF_öãgî_ègs_2
,

76 (
a¢_DEF_öãgî_ègs_2
)

77 /(
a¢_DEF_öãgî_ègs_2
[0]) - 1,

78 
a¢_DEF_öãgî_ègs_2
,

79 (
a¢_DEF_öãgî_ègs_2
)

80 /(
a¢_DEF_öãgî_ègs_2
[0]),

81 { 0, &
a¢_PER_ty≥_öãgî_c⁄°r_2
, 
öãgî_2_c⁄°øöt
 },

83 &
a¢_SPC_öãgî_•ecs_2


86 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítRec‹dIãm_1
[] = {

87 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítRec‹dIãm
, 
choi˚
.
öãgî
),

88 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

90 &
a¢_DEF_öãgî_2
,

92 { 0, &
a¢_PER_memb_öãgî_c⁄°r_2
, 
memb_öãgî_c⁄°øöt_1
 },

96 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítRec‹dIãm
, 
choi˚
.
ªÆ
),

97 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

99 &
a¢_DEF_N©iveRól
,

105 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítRec‹dIãm
, 
choi˚
.
noVÆue
),

106 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

108 &
a¢_DEF_NULL
,

115 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítRec‹dIãm_èg2ñ_1
[] = {

116 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

117 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

118 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

120 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_MósuªmítRec‹dIãm_•ecs_1
 = {

121 (
MósuªmítRec‹dIãm
),

122 
off£tof
(
MósuªmítRec‹dIãm
, 
_a¢_˘x
),

123 
off£tof
(
MósuªmítRec‹dIãm
, 
¥e£¡
),

124 (((
MósuªmítRec‹dIãm
 *)0)->
¥e£¡
),

125 
a¢_MAP_MósuªmítRec‹dIãm_èg2ñ_1
,

130 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítRec‹dIãm
 = {

133 &
a¢_OP_CHOICE
,

138 { 0, &
a¢_PER_ty≥_MósuªmítRec‹dIãm_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

139 
a¢_MBR_MósuªmítRec‹dIãm_1
,

141 &
a¢_SPC_MósuªmítRec‹dIãm_•ecs_1


	@MeasurementType.c

8 
	~"MósuªmítTy≥.h
"

10 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítTy≥_c⁄°r_1
 
	gCC_NOTUSED
 = {

11 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

15 
a¢_TYPE_membî_t
 
	ga¢_MBR_MósuªmítTy≥_1
[] = {

16 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítTy≥
, 
choi˚
.
mósName
),

17 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

19 &
a¢_DEF_MósuªmítTy≥Name
,

25 { 
ATF_NOFLAGS
, 0, 
off£tof
(
MósuªmítTy≥
, 
choi˚
.
mósID
),

26 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

28 &
a¢_DEF_MósuªmítTy≥ID
,

35 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_MósuªmítTy≥_èg2ñ_1
[] = {

36 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

37 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

39 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_MósuªmítTy≥_•ecs_1
 = {

40 (
MósuªmítTy≥
),

41 
off£tof
(
MósuªmítTy≥
, 
_a¢_˘x
),

42 
off£tof
(
MósuªmítTy≥
, 
¥e£¡
),

43 (((
MósuªmítTy≥
 *)0)->
¥e£¡
),

44 
a¢_MAP_MósuªmítTy≥_èg2ñ_1
,

49 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítTy≥
 = {

52 &
a¢_OP_CHOICE
,

57 { 0, &
a¢_PER_ty≥_MósuªmítTy≥_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

58 
a¢_MBR_MósuªmítTy≥_1
,

60 &
a¢_SPC_MósuªmítTy≥_•ecs_1


	@MeasurementTypeID.c

8 
	~"MósuªmítTy≥ID.h
"

11 
	$MósuªmítTy≥ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 65536)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítTy≥ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 16, -1, 1, 65536 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítTy≥ID_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítTy≥ID
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_MósuªmítTy≥ID_ègs_1
,

52 (
a¢_DEF_MósuªmítTy≥ID_ègs_1
)

53 /(
a¢_DEF_MósuªmítTy≥ID_ègs_1
[0]),

54 
a¢_DEF_MósuªmítTy≥ID_ègs_1
,

55 (
a¢_DEF_MósuªmítTy≥ID_ègs_1
)

56 /(
a¢_DEF_MósuªmítTy≥ID_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_MósuªmítTy≥ID_c⁄°r_1
, 
MósuªmítTy≥ID_c⁄°øöt
 },

	@MeasurementTypeName.c

8 
	~"MósuªmítTy≥Name.h
"

10 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_1
[256] = {

20 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_1
[74] = {

28 
	$check_≥rmôãd_Æphabë_1
(c⁄° *
•å
) {

29 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_1
;

31 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

32 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

33 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

35 ; 
ch
 < 
íd
; ch++) {

36 
uöt8_t
 
cv
 = *
ch
;

37 if(!
èbÀ
[
cv
])  -1;

40 
	}
}

43 
	$MósuªmítTy≥Name_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

44 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

45 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

46 
size_t
 
size
;

48 if(!
•å
) {

49 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

51 
td
->
«me
, 
__FILE__
, 
__LINE__
);

55 
size
 = 
°
->size;

57 if((
size
 >= 1 && size <= 150)

58 && !
	`check_≥rmôãd_Æphabë_1
(
°
)) {

62 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

64 
td
->
«me
, 
__FILE__
, 
__LINE__
);

67 
	}
}

69 
	$a¢_PER_MAP_MósuªmítTy≥Name_1_v2c
(
vÆue
) {

70 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_1
)/(permitted_alphabet_table_1[0]))

72  
≥rmôãd_Æphabë_èbÀ_1
[
vÆue
] - 1;

73 
	}
}

74 
	$a¢_PER_MAP_MósuªmítTy≥Name_1_c2v
(
code
) {

75 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_1
)/(permitted_alphabet_code2value_1[0]))

77  
≥rmôãd_Æphabë_code2vÆue_1
[
code
];

78 
	}
}

83 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_MósuªmítTy≥Name_c⁄°r_1
 
	gCC_NOTUSED
 = {

84 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

85 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 8, 8, 1, 150 } ,

86 
a¢_PER_MAP_MósuªmítTy≥Name_1_v2c
,

87 
a¢_PER_MAP_MósuªmítTy≥Name_1_c2v


89 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_MósuªmítTy≥Name_ègs_1
[] = {

90 (
ASN_TAG_CLASS_UNIVERSAL
 | (19 << 2))

92 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_MósuªmítTy≥Name
 = {

95 &
a¢_OP_PröèbÀSåög
,

96 
a¢_DEF_MósuªmítTy≥Name_ègs_1
,

97 (
a¢_DEF_MósuªmítTy≥Name_ègs_1
)

98 /(
a¢_DEF_MósuªmítTy≥Name_ègs_1
[0]),

99 
a¢_DEF_MósuªmítTy≥Name_ègs_1
,

100 (
a¢_DEF_MósuªmítTy≥Name_ègs_1
)

101 /(
a¢_DEF_MósuªmítTy≥Name_ègs_1
[0]),

102 { 0, &
a¢_PER_ty≥_MósuªmítTy≥Name_c⁄°r_1
, 
MósuªmítTy≥Name_c⁄°øöt
 },

	@NG-RANnodeUEXnAPID.c

8 
	~"NG-RANnodeUEXnAPID.h
"

11 
	$NG_RANnodeUEXnAPID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

14 if(!
•å
) {

15 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

17 
td
->
«me
, 
__FILE__
, 
__LINE__
);

24 
	}
}

30 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NG_RANnodeUEXnAPID_c⁄°r_1
 
	gCC_NOTUSED
 = {

31 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

32 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

35 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_NG_RANnodeUEXnAPID_•ecs_1
 = {

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NG_RANnodeUEXnAPID_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

43 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NG_RANnodeUEXnAPID
 = {

46 &
a¢_OP_N©iveI¡egî
,

47 
a¢_DEF_NG_RANnodeUEXnAPID_ègs_1
,

48 (
a¢_DEF_NG_RANnodeUEXnAPID_ègs_1
)

49 /(
a¢_DEF_NG_RANnodeUEXnAPID_ègs_1
[0]),

50 
a¢_DEF_NG_RANnodeUEXnAPID_ègs_1
,

51 (
a¢_DEF_NG_RANnodeUEXnAPID_ègs_1
)

52 /(
a¢_DEF_NG_RANnodeUEXnAPID_ègs_1
[0]),

53 { 0, &
a¢_PER_ty≥_NG_RANnodeUEXnAPID_c⁄°r_1
, 
NG_RANnodeUEXnAPID_c⁄°øöt
 },

55 &
a¢_SPC_NG_RANnodeUEXnAPID_•ecs_1


	@NGENB-CU-UE-W1AP-ID.c

8 
	~"NGENB-CU-UE-W1AP-ID.h
"

11 
	$NGENB_CU_UE_W1AP_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

14 if(!
•å
) {

15 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

17 
td
->
«me
, 
__FILE__
, 
__LINE__
);

24 
	}
}

30 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NGENB_CU_UE_W1AP_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

31 { 
APC_CONSTRAINED
, 32, -1, 0, 4294967295 } ,

32 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

35 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_NGENB_CU_UE_W1AP_ID_•ecs_1
 = {

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

43 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NGENB_CU_UE_W1AP_ID
 = {

46 &
a¢_OP_N©iveI¡egî
,

47 
a¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
,

48 (
a¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
)

49 /(
a¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
[0]),

50 
a¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
,

51 (
a¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
)

52 /(
a¢_DEF_NGENB_CU_UE_W1AP_ID_ègs_1
[0]),

53 { 0, &
a¢_PER_ty≥_NGENB_CU_UE_W1AP_ID_c⁄°r_1
, 
NGENB_CU_UE_W1AP_ID_c⁄°øöt
 },

55 &
a¢_SPC_NGENB_CU_UE_W1AP_ID_•ecs_1


	@NGENB-DU-ID.c

8 
	~"NGENB-DU-ID.h
"

11 
	$NGENB_DU_ID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
INTEGER_t
 *
°
 = (c⁄° INTEGER_à*)
•å
;

14 
vÆue
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
	`a¢_INTEGER2l⁄g
(
°
, &
vÆue
)) {

24 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

26 
td
->
«me
, 
__FILE__
, 
__LINE__
);

30 if((
vÆue
 >= 0 && value <= 68719476735)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NGENB_DU_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_CONSTRAINED
, 36, -1, 0, 68719476735 } ,

47 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NGENB_DU_ID_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NGENB_DU_ID
 = {

56 &
a¢_OP_INTEGER
,

57 
a¢_DEF_NGENB_DU_ID_ègs_1
,

58 (
a¢_DEF_NGENB_DU_ID_ègs_1
)

59 /(
a¢_DEF_NGENB_DU_ID_ègs_1
[0]),

60 
a¢_DEF_NGENB_DU_ID_ègs_1
,

61 (
a¢_DEF_NGENB_DU_ID_ègs_1
)

62 /(
a¢_DEF_NGENB_DU_ID_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_NGENB_DU_ID_c⁄°r_1
, 
NGENB_DU_ID_c⁄°øöt
 },

	@NR-ARFCN.c

8 
	~"NR-ARFCN.h
"

11 
	$memb_nRARFCN_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 3279165)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

35 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_nRARFCN_c⁄°r_2
 
	gCC_NOTUSED
 = {

36 { 
APC_CONSTRAINED
, 22, -1, 0, 3279165 } ,

37 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

40 
a¢_TYPE_membî_t
 
	ga¢_MBR_NR_ARFCN_1
[] = {

41 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NR_ARFCN
, 
nRARFCN
),

42 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

44 &
a¢_DEF_N©iveI¡egî
,

46 { 0, &
a¢_PER_memb_nRARFCN_c⁄°r_2
, 
memb_nRARFCN_c⁄°øöt_1
 },

51 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NR_ARFCN_ègs_1
[] = {

52 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

54 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_NR_ARFCN_èg2ñ_1
[] = {

55 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

57 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_NR_ARFCN_•ecs_1
 = {

58 (
NR_ARFCN
),

59 
off£tof
(
NR_ARFCN
, 
_a¢_˘x
),

60 
a¢_MAP_NR_ARFCN_èg2ñ_1
,

65 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NR_ARFCN
 = {

68 &
a¢_OP_SEQUENCE
,

69 
a¢_DEF_NR_ARFCN_ègs_1
,

70 (
a¢_DEF_NR_ARFCN_ègs_1
)

71 /(
a¢_DEF_NR_ARFCN_ègs_1
[0]),

72 
a¢_DEF_NR_ARFCN_ègs_1
,

73 (
a¢_DEF_NR_ARFCN_ègs_1
)

74 /(
a¢_DEF_NR_ARFCN_ègs_1
[0]),

75 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

76 
a¢_MBR_NR_ARFCN_1
,

78 &
a¢_SPC_NR_ARFCN_•ecs_1


	@NR-CGI.c

8 
	~"NR-CGI.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_NR_CGI_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NR_CGI
, 
pLMNIdítôy
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_PLMNIdítôy
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NR_CGI
, 
nRCñlIdítôy
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_NRCñlIdítôy
,

30 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NR_CGI_ègs_1
[] = {

31 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

33 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_NR_CGI_èg2ñ_1
[] = {

34 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

35 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

37 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_NR_CGI_•ecs_1
 = {

38 (
NR_CGI
),

39 
off£tof
(
NR_CGI
, 
_a¢_˘x
),

40 
a¢_MAP_NR_CGI_èg2ñ_1
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NR_CGI
 = {

48 &
a¢_OP_SEQUENCE
,

49 
a¢_DEF_NR_CGI_ègs_1
,

50 (
a¢_DEF_NR_CGI_ègs_1
)

51 /(
a¢_DEF_NR_CGI_ègs_1
[0]),

52 
a¢_DEF_NR_CGI_ègs_1
,

53 (
a¢_DEF_NR_CGI_ègs_1
)

54 /(
a¢_DEF_NR_CGI_ègs_1
[0]),

55 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

56 
a¢_MBR_NR_CGI_1
,

58 &
a¢_SPC_NR_CGI_•ecs_1


	@NR-PCI.c

8 
	~"NR-PCI.h
"

11 
	$NR_PCI_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 1007)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NR_PCI_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
, 10, 10, 0, 1007 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NR_PCI_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NR_PCI
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_NR_PCI_ègs_1
,

52 (
a¢_DEF_NR_PCI_ègs_1
)

53 /(
a¢_DEF_NR_PCI_ègs_1
[0]),

54 
a¢_DEF_NR_PCI_ègs_1
,

55 (
a¢_DEF_NR_PCI_ègs_1
)

56 /(
a¢_DEF_NR_PCI_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_NR_PCI_c⁄°r_1
, 
NR_PCI_c⁄°øöt
 },

	@NRCellIdentity.c

8 
	~"NRCñlIdítôy.h
"

11 
	$NRCñlIdítôy_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 36)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

45 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NRCñlIdítôy_c⁄°r_1
 
	gCC_NOTUSED
 = {

46 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

47 { 
APC_CONSTRAINED
, 0, 0, 36, 36 } ,

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NRCñlIdítôy_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (3 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NRCñlIdítôy
 = {

56 &
a¢_OP_BIT_STRING
,

57 
a¢_DEF_NRCñlIdítôy_ègs_1
,

58 (
a¢_DEF_NRCñlIdítôy_ègs_1
)

59 /(
a¢_DEF_NRCñlIdítôy_ègs_1
[0]),

60 
a¢_DEF_NRCñlIdítôy_ègs_1
,

61 (
a¢_DEF_NRCñlIdítôy_ègs_1
)

62 /(
a¢_DEF_NRCñlIdítôy_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_NRCñlIdítôy_c⁄°r_1
, 
NRCñlIdítôy_c⁄°øöt
 },

65 &
a¢_SPC_BIT_STRING_•ecs


	@NRFrequencyBand-List.c

8 
	~"NRFªquícyB™d-Li°.h
"

10 
	~"NRFªquícyB™dIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NRFªquícyB™d_Li°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 5, 5, 1, 32 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_NRFªquícyB™d_Li°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_NRFªquícyB™dIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NRFªquícyB™d_Li°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_NRFªquícyB™d_Li°_•ecs_1
 = {

31 (
NRFªquícyB™d_Li°
),

32 
off£tof
(
NRFªquícyB™d_Li°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NRFªquícyB™d_Li°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_NRFªquícyB™d_Li°_ègs_1
,

40 (
a¢_DEF_NRFªquícyB™d_Li°_ègs_1
)

41 /(
a¢_DEF_NRFªquícyB™d_Li°_ègs_1
[0]),

42 
a¢_DEF_NRFªquícyB™d_Li°_ègs_1
,

43 (
a¢_DEF_NRFªquícyB™d_Li°_ègs_1
)

44 /(
a¢_DEF_NRFªquícyB™d_Li°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_NRFªquícyB™d_Li°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_NRFªquícyB™d_Li°_1
,

48 &
a¢_SPC_NRFªquícyB™d_Li°_•ecs_1


	@NRFrequencyBandItem.c

8 
	~"NRFªquícyB™dIãm.h
"

11 
	$memb_‰eqB™dIndiˇt‹Nr_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 1024)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

35 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_‰eqB™dIndiˇt‹Nr_c⁄°r_2
 
	gCC_NOTUSED
 = {

36 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 10, 10, 1, 1024 } ,

37 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

40 
a¢_TYPE_membî_t
 
	ga¢_MBR_NRFªquícyB™dIãm_1
[] = {

41 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NRFªquícyB™dIãm
, 
‰eqB™dIndiˇt‹Nr
),

42 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

44 &
a¢_DEF_N©iveI¡egî
,

46 { 0, &
a¢_PER_memb_‰eqB™dIndiˇt‹Nr_c⁄°r_2
, 
memb_‰eqB™dIndiˇt‹Nr_c⁄°øöt_1
 },

50 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NRFªquícyB™dIãm
, 
suµ‹ãdSULB™dLi°
),

51 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

53 &
a¢_DEF_Suµ‹ãdSULB™dLi°
,

60 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NRFªquícyB™dIãm_ègs_1
[] = {

61 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

63 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_NRFªquícyB™dIãm_èg2ñ_1
[] = {

64 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

65 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

67 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_NRFªquícyB™dIãm_•ecs_1
 = {

68 (
NRFªquícyB™dIãm
),

69 
off£tof
(
NRFªquícyB™dIãm
, 
_a¢_˘x
),

70 
a¢_MAP_NRFªquícyB™dIãm_èg2ñ_1
,

75 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NRFªquícyB™dIãm
 = {

78 &
a¢_OP_SEQUENCE
,

79 
a¢_DEF_NRFªquícyB™dIãm_ègs_1
,

80 (
a¢_DEF_NRFªquícyB™dIãm_ègs_1
)

81 /(
a¢_DEF_NRFªquícyB™dIãm_ègs_1
[0]),

82 
a¢_DEF_NRFªquícyB™dIãm_ègs_1
,

83 (
a¢_DEF_NRFªquícyB™dIãm_ègs_1
)

84 /(
a¢_DEF_NRFªquícyB™dIãm_ègs_1
[0]),

85 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

86 
a¢_MBR_NRFªquícyB™dIãm_1
,

88 &
a¢_SPC_NRFªquícyB™dIãm_•ecs_1


	@NRFrequencyInfo.c

8 
	~"NRFªquícyInfo.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_NRFªquícyInfo_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NRFªquícyInfo
, 
ƒARFCN
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_NR_ARFCN
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NRFªquícyInfo
, 
‰equícyB™d_Li°
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_NRFªquícyB™d_Li°
,

29 { 
ATF_POINTER
, 1, 
off£tof
(
NRFªquícyInfo
, 
‰equícyShi·7p5khz
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_NRFªquícyShi·7p5khz
,

39 c⁄° 
	ga¢_MAP_NRFªquícyInfo_oms_1
[] = { 2 };

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NRFªquícyInfo_ègs_1
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

43 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_NRFªquícyInfo_èg2ñ_1
[] = {

44 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

45 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

46 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

48 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_NRFªquícyInfo_•ecs_1
 = {

49 (
NRFªquícyInfo
),

50 
off£tof
(
NRFªquícyInfo
, 
_a¢_˘x
),

51 
a¢_MAP_NRFªquícyInfo_èg2ñ_1
,

53 
a¢_MAP_NRFªquícyInfo_oms_1
,

57 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NRFªquícyInfo
 = {

60 &
a¢_OP_SEQUENCE
,

61 
a¢_DEF_NRFªquícyInfo_ègs_1
,

62 (
a¢_DEF_NRFªquícyInfo_ègs_1
)

63 /(
a¢_DEF_NRFªquícyInfo_ègs_1
[0]),

64 
a¢_DEF_NRFªquícyInfo_ègs_1
,

65 (
a¢_DEF_NRFªquícyInfo_ègs_1
)

66 /(
a¢_DEF_NRFªquícyInfo_ègs_1
[0]),

67 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

68 
a¢_MBR_NRFªquícyInfo_1
,

70 &
a¢_SPC_NRFªquícyInfo_•ecs_1


	@NRFrequencyShift7p5khz.c

8 
	~"NRFªquícyShi·7p5khz.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NRFªquícyShi·7p5khz_c⁄°r_1
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_NRFªquícyShi·7p5khz_vÆue2íum_1
[] = {

24 c⁄° 
	ga¢_MAP_NRFªquícyShi·7p5khz_íum2vÆue_1
[] = {

29 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_NRFªquícyShi·7p5khz_•ecs_1
 = {

30 
a¢_MAP_NRFªquícyShi·7p5khz_vÆue2íum_1
,

31 
a¢_MAP_NRFªquícyShi·7p5khz_íum2vÆue_1
,

38 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NRFªquícyShi·7p5khz_ègs_1
[] = {

39 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

41 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NRFªquícyShi·7p5khz
 = {

44 &
a¢_OP_N©iveEnumî©ed
,

45 
a¢_DEF_NRFªquícyShi·7p5khz_ègs_1
,

46 (
a¢_DEF_NRFªquícyShi·7p5khz_ègs_1
)

47 /(
a¢_DEF_NRFªquícyShi·7p5khz_ègs_1
[0]),

48 
a¢_DEF_NRFªquícyShi·7p5khz_ègs_1
,

49 (
a¢_DEF_NRFªquícyShi·7p5khz_ègs_1
)

50 /(
a¢_DEF_NRFªquícyShi·7p5khz_ègs_1
[0]),

51 { 0, &
a¢_PER_ty≥_NRFªquícyShi·7p5khz_c⁄°r_1
, 
N©iveEnumî©ed_c⁄°øöt
 },

53 &
a¢_SPC_NRFªquícyShi·7p5khz_•ecs_1


	@NULL.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_codecs_¥im.h
>

7 
	~<NULL.h
>

8 
	~<BOOLEAN.h
>

13 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_NULL_ègs
[] = {

14 (
ASN_TAG_CLASS_UNIVERSAL
 | (5 << 2))

16 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_NULL
 = {

17 
BOOLEAN_‰ì
,

18 
NULL_¥öt
,

19 
NULL_com∑ª
,

20 
BOOLEAN_decode_bî
,

21 
NULL_ícode_dî
,

22 
NULL_decode_xî
,

23 
NULL_ícode_xî
,

24 #ifdef 
ASN_DISABLE_OER_SUPPORT


28 
NULL_decode_€r
,

29 
NULL_ícode_€r
,

31 #ifdef 
ASN_DISABLE_PER_SUPPORT


37 
NULL_decode_u≥r
,

38 
NULL_ícode_u≥r
,

39 
NULL_decode_≠î
,

40 
NULL_ícode_≠î
,

42 
NULL_øndom_fûl
,

45 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NULL
 = {

48 &
a¢_OP_NULL
,

49 
a¢_DEF_NULL_ègs
,

50 (
a¢_DEF_NULL_ègs
) / (asn_DEF_NULL_tags[0]),

51 
a¢_DEF_NULL_ègs
,

52 (
a¢_DEF_NULL_ègs
) / (asn_DEF_NULL_tags[0]),

53 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

58 
a¢_íc_rvÆ_t


59 
	$NULL_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
±r
, 
èg_mode
,

60 
bî_év_èg_t
 
èg
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

61 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

63 
îvÆ
.
ícoded
 = 
	`dî_wrôe_ègs
(
td
, 0, 
èg_mode
, 0, 
èg
, 
cb
, 
≠p_key
);

64 if(
îvÆ
.
ícoded
 == -1) {

65 
îvÆ
.
Áûed_ty≥
 = 
td
;

66 
îvÆ
.
°ru˘uª_±r
 = 
±r
;

69 
	`ASN__ENCODED_OK
(
îvÆ
);

70 
	}
}

72 
a¢_íc_rvÆ_t


73 
	$NULL_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

74 
xî_ícodî_Êags_e
 
Êags
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

75 *
≠p_key
) {

76 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

78 ()
td
;

79 ()
•å
;

80 ()
ûevñ
;

81 ()
Êags
;

82 ()
cb
;

83 ()
≠p_key
;

86 
î
.
ícoded
 = 0;

87 
	`ASN__ENCODED_OK
(
î
);

88 
	}
}

91 
xî_pbd_rvÆ


92 
	$NULL__xî_body_decode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

93 c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

94 ()
td
;

95 ()
•å
;

96 ()
chunk_buf
;

101 if(
chunk_size
)

102  
XPBD_BROKEN_ENCODING
;

104  
XPBD_BODY_CONSUMED
;

105 
	}
}

107 
a¢_dec_rvÆ_t


108 
	$NULL_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

109 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

110 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

111  
	`xî_decode_¥imôive
(
›t_codec_˘x
, 
td
,

112 
•å
, (
NULL_t
), 
›t_m«me
, 
buf_±r
, 
size
,

113 
NULL__xî_body_decode
);

114 
	}
}

117 
	$NULL_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
a
, c⁄° *
b
) {

118 ()
td
;

119 ()
a
;

120 ()
b
;

122 
	}
}

125 
	$NULL_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

126 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

127 ()
td
;

128 ()
ûevñ
;

130 if(
•å
) {

131  (
	`cb
("<¥e£¡>", 9, 
≠p_key
) < 0) ? -1 : 0;

133  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

135 
	}
}

137 #i‚de‡
ASN_DISABLE_OER_SUPPORT


139 
a¢_dec_rvÆ_t


140 
	$NULL_decode_€r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

141 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

142 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

143 c⁄° *
±r
, 
size_t
 
size
) {

144 
a¢_dec_rvÆ_t
 
rv
 = {
RC_OK
, 0};

145 ()
›t_codec_˘x
;

146 ()
td
;

147 ()
c⁄°øöts
;

148 ()
±r
;

149 ()
size
;

151 if(!*
•å
) {

152 *
•å
 = 
	`MALLOC
((
NULL_t
));

153 if(*
•å
) {

154 *(
NULL_t
 *)*
•å
 = 0;

156 
ASN__DECODE_FAILED
;

160  
rv
;

161 
	}
}

163 
a¢_íc_rvÆ_t


164 
	$NULL_ícode_€r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

165 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

166 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

167 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

169 ()
td
;

170 ()
•å
;

171 ()
c⁄°øöts
;

172 ()
cb
;

173 ()
≠p_key
;

175 
î
.
ícoded
 = 0;

177 
	`ASN__ENCODED_OK
(
î
);

178 
	}
}

182 #i‚de‡
ASN_DISABLE_PER_SUPPORT


184 
a¢_dec_rvÆ_t


185 
	$NULL_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

186 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

187 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

188 
a¢_≥r_d©a_t
 *
pd
) {

189 
a¢_dec_rvÆ_t
 
rv
;

191 ()
›t_codec_˘x
;

192 ()
td
;

193 ()
c⁄°øöts
;

194 ()
pd
;

196 if(!*
•å
) {

197 *
•å
 = 
	`MALLOC
((
NULL_t
));

198 if(*
•å
) {

199 *(
NULL_t
 *)*
•å
 = 0;

201 
ASN__DECODE_FAILED
;

209 
rv
.
code
 = 
RC_OK
;

210 
rv
.
c⁄sumed
 = 0;

211  
rv
;

212 
	}
}

214 
a¢_íc_rvÆ_t


215 
	$NULL_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

216 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

217 
a¢_≥r_ouç_t
 *
po
) {

218 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

220 ()
td
;

221 ()
c⁄°øöts
;

222 ()
•å
;

223 ()
po
;

225 
î
.
ícoded
 = 0;

226 
	`ASN__ENCODED_OK
(
î
);

227 
	}
}

229 
a¢_dec_rvÆ_t


230 
	$NULL_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

231 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

232 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

233 
a¢_dec_rvÆ_t
 
rv
 = {
RC_OK
, 0};

235 ()
›t_codec_˘x
;

236 ()
td
;

237 ()
c⁄°øöts
;

238 ()
pd
;

240 if(!*
•å
) {

241 *
•å
 = 
	`MALLOC
((
NULL_t
));

242 if(*
•å
) {

243 *(
NULL_t
 *)*
•å
 = 0;

245 
ASN__DECODE_FAILED
;

253 
rv
.
code
 = 
RC_OK
;

254 
rv
.
c⁄sumed
 = 0;

255  
rv
;

256 
	}
}

259 
a¢_íc_rvÆ_t


260 
	$NULL_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

261 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

262 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

263 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

265 ()
td
;

266 ()
c⁄°øöts
;

267 ()
•å
;

268 ()
po
;

270 
î
.
ícoded
 = 0;

271 
	`ASN__ENCODED_OK
(
î
);

272 
	}
}

276 
a¢_øndom_fûl_ªsu…_t


277 
	$NULL_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

278 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°r
,

279 
size_t
 
max_Àngth
) {

280 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

281 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

282 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

283 
NULL_t
 *
°
 = *
•å
;

285 ()
td
;

286 ()
c⁄°r
;

288 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

290 if(
°
 =
NULL
) {

291 
°
 = (
NULL_t
 *)(*
•å
 = 
	`CALLOC
(1, (*st)));

292 if(
°
 =
NULL
) {

293  
ªsu…_Áûed
;

297  
ªsu…_ok
;

298 
	}
}

	@NativeEnumerated.c

12 
	~<a¢_öã∫Æ.h
>

13 
	~<N©iveEnumî©ed.h
>

18 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_N©iveEnumî©ed_ègs
[] = {

19 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

21 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_N©iveEnumî©ed
 = {

22 
N©iveI¡egî_‰ì
,

23 
N©iveI¡egî_¥öt
,

24 
N©iveI¡egî_com∑ª
,

25 
N©iveI¡egî_decode_bî
,

26 
N©iveI¡egî_ícode_dî
,

27 
N©iveI¡egî_decode_xî
,

28 
N©iveEnumî©ed_ícode_xî
,

29 #ifdef 
ASN_DISABLE_OER_SUPPORT


33 
N©iveEnumî©ed_decode_€r
,

34 
N©iveEnumî©ed_ícode_€r
,

36 #ifdef 
ASN_DISABLE_PER_SUPPORT


42 
N©iveEnumî©ed_decode_u≥r
,

43 
N©iveEnumî©ed_ícode_u≥r
,

44 
N©iveEnumî©ed_decode_≠î
,

45 
N©iveEnumî©ed_ícode_≠î
,

47 
N©iveEnumî©ed_øndom_fûl
,

50 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_N©iveEnumî©ed
 = {

53 &
a¢_OP_N©iveEnumî©ed
,

54 
a¢_DEF_N©iveEnumî©ed_ègs
,

55 (
a¢_DEF_N©iveEnumî©ed_ègs
) / (asn_DEF_NativeEnumerated_tags[0]),

56 
a¢_DEF_N©iveEnumî©ed_ègs
,

57 (
a¢_DEF_N©iveEnumî©ed_ègs
) / (asn_DEF_NativeEnumerated_tags[0]),

58 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

63 
a¢_íc_rvÆ_t


64 
	$N©iveEnumî©ed_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

65 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

66 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

67 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

68 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

69 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

70 c⁄° *
«tive
 = (c⁄° *)
•å
;

71 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ
;

73 ()
ûevñ
;

74 ()
Êags
;

76 if(!
«tive
Ë
ASN__ENCODE_FAILED
;

78 
ñ
 = 
	`INTEGER_m≠_vÆue2íum
(
•ecs
, *
«tive
);

79 if(
ñ
) {

80 
î
.
ícoded
 =

81 
	`a¢__f‹m©_to_ˇŒback
(
cb
, 
≠p_key
, "<%s/>", 
ñ
->
íum_«me
);

82 if(
î
.
ícoded
 < 0Ë
ASN__ENCODE_FAILED
;

83 
	`ASN__ENCODED_OK
(
î
);

85 
	`ASN_DEBUG
(

88 
ASN__ENCODE_FAILED
;

90 
	}
}

92 
a¢_dec_rvÆ_t


93 
	$N©iveEnumî©ed_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

94 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

95 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

96 **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

97 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics
;

98 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

99 *
«tive
 = (*)*
•å
;

100 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
 = 
NULL
;

101 
vÆue
;

103 ()
›t_codec_˘x
;

105 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

106 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

107 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

108 
ASN__DECODE_FAILED
;

109 if(!
•ecs
Ë
ASN__DECODE_FAILED
;

111 if(!
«tive
) {

112 
«tive
 = (*)(*
•å
 = 
	`CALLOC
(1, (*native)));

113 if(!
«tive
Ë
ASN__DECODE_FAILED
;

116 
	`ASN_DEBUG
("Decodög %†a†N©iveEnumî©ed", 
td
->
«me
);

118 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

119 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

120 if(
öext
 < 0Ë
ASN__DECODE_STARVED
;

121 if(
öext
Ë
˘
 = 0;

124 if(
˘
 && ct->
ønge_bôs
 >= 0) {

125 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ønge_bôs
);

126 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

127 if(
vÆue
 >(
•ecs
->
exãnsi⁄


128 ? 
•ecs
->
exãnsi⁄
 - 1 : s≥cs->
m≠_cou¡
))

129 
ASN__DECODE_FAILED
;

131 if(!
•ecs
->
exãnsi⁄
)

132 
ASN__DECODE_FAILED
;

136 
vÆue
 = 
	`u≥r_gë_n¢nwn
(
pd
);

137 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

138 
vÆue
 +
•ecs
->
exãnsi⁄
 - 1;

139 if(
vÆue
 >
•ecs
->
m≠_cou¡
)

140 
ASN__DECODE_FAILED
;

143 *
«tive
 = 
•ecs
->
vÆue2íum
[
vÆue
].
«t_vÆue
;

144 
	`ASN_DEBUG
("Decoded %†%ld", 
td
->
«me
, *
«tive
);

146  
rvÆ
;

147 
	}
}

150 
	$N©iveEnumî©ed__com∑r_vÆue2íum
(c⁄° *
≠
, c⁄° *
bp
) {

151 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
a
 = 
≠
;

152 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
b
 = 
bp
;

153 if(
a
->
«t_vÆue
 =
b
->nat_value)

155 if(
a
->
«t_vÆue
 < 
b
->nat_value)

158 
	}
}

160 
a¢_íc_rvÆ_t


161 
	$N©iveEnumî©ed_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

162 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

163 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

164 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

165 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

166 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

167 
«tive
, 
vÆue
;

168 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
 = 
NULL
;

169 
öext
 = 0;

170 
a¢_INTEGER_íum_m≠_t
 
key
;

171 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
kf
;

173 if(!
•å
Ë
ASN__ENCODE_FAILED
;

174 if(!
•ecs
Ë
ASN__ENCODE_FAILED
;

176 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

177 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

178 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

179 
ASN__ENCODE_FAILED
;

181 
	`ASN_DEBUG
("Encodög %†a†N©iveEnumî©ed", 
td
->
«me
);

183 
î
.
ícoded
 = 0;

185 
«tive
 = *(c⁄° *)
•å
;

187 
key
.
«t_vÆue
 = 
«tive
;

188 
kf
 = 
	`b£¨ch
(&
key
, 
•ecs
->
vÆue2íum
, s≥cs->
m≠_cou¡
,

189 (
key
), 
N©iveEnumî©ed__com∑r_vÆue2íum
);

190 if(!
kf
) {

191 
	`ASN_DEBUG
("Nÿñemíàc‹ª•⁄d†tÿ%ld", 
«tive
);

192 
ASN__ENCODE_FAILED
;

194 
vÆue
 = 
kf
 - 
•ecs
->
vÆue2íum
;

196 if(
˘
 && ct->
ønge_bôs
 >= 0) {

197 
cmpWôh
 = 
•ecs
->
exãnsi⁄


198 ? 
•ecs
->
exãnsi⁄
 - 1 : s≥cs->
m≠_cou¡
;

199 if(
vÆue
 >
cmpWôh
)

200 
öext
 = 1;

202 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

203 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

204 
ASN__ENCODE_FAILED
;

205 if(
öext
Ë
˘
 = 0;

206 } if(
öext
) {

207 
ASN__ENCODE_FAILED
;

210 if(
˘
 && ct->
ønge_bôs
 >= 0) {

211 if(
	`≥r_put_„w_bôs
(
po
, 
vÆue
, 
˘
->
ønge_bôs
))

212 
ASN__ENCODE_FAILED
;

213 
	`ASN__ENCODED_OK
(
î
);

216 if(!
•ecs
->
exãnsi⁄
)

217 
ASN__ENCODE_FAILED
;

222 
	`ASN_DEBUG
("value = %ld,Éxt = %d, inext = %d,Ñes = %ld",

223 
vÆue
, 
•ecs
->
exãnsi⁄
, 
öext
,

224 
vÆue
 - (
öext
 ? (
•ecs
->
exãnsi⁄
 - 1) : 0));

225 if(
	`u≥r_put_n¢nwn
(
po
, 
vÆue
 - (
öext
 ? (
•ecs
->
exãnsi⁄
 - 1) : 0)))

226 
ASN__ENCODE_FAILED
;

228 
	`ASN__ENCODED_OK
(
î
);

229 
	}
}

231 
a¢_dec_rvÆ_t


232 
	$N©iveEnumî©ed_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

233 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

234 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

235 **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

236 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = (c⁄°á¢_INTEGER_•ecifics_à*)
td
->
•ecifics
;

237 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

238 *
«tive
 = (*)*
•å
;

239 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
 = 
NULL
;

240 
vÆue
;

242 ()
›t_codec_˘x
;

244 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

245 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

246 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

247 
ASN__DECODE_FAILED
;

248 if(!
•ecs
Ë
ASN__DECODE_FAILED
;

250 if(!
«tive
) {

251 
«tive
 = (*)(*
•å
 = 
	`CALLOC
(1, (*native)));

252 if(!
«tive
Ë
ASN__DECODE_FAILED
;

255 
	`ASN_DEBUG
("Decodög %†a†N©iveEnumî©ed", 
td
->
«me
);

257 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

258 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

259 if(
öext
 < 0Ë
ASN__DECODE_STARVED
;

260 if(
öext
Ë
˘
 = 0;

264 if(
˘
 && ct->
uµî_bound
 >= 255) {

265 
∑ddög
 = 0;

266 
∑ddög
 = (8 - (
pd
->
moved
 % 8)) % 8;

267 
	`ASN_DEBUG
("F‹ N©iveEnumî©ed %s,off£t%lu Paddög bô†%d", 
td
->
«me
, 
pd
->
moved
, 
∑ddög
);

268 
	`ASN_DEBUG
("F‹ N©iveEnumî©ed %s, uµî bound = %lu", 
td
->
«me
, 
˘
->
uµî_bound
);

269 if(
∑ddög
 > 0)

270 
	`≥r_gë_„w_bôs
(
pd
, 
∑ddög
);

273 if(
˘
 && ct->
ønge_bôs
 >= 0) {

274 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ønge_bôs
);

275 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

276 if(
vÆue
 >(
•ecs
->
exãnsi⁄


277 ? 
•ecs
->
exãnsi⁄
 - 1 : s≥cs->
m≠_cou¡
))

278 
ASN__DECODE_FAILED
;

280 if(!
•ecs
->
exãnsi⁄
)

281 
ASN__DECODE_FAILED
;

285 
vÆue
 = 
	`u≥r_gë_n¢nwn
(
pd
);

286 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

287 
vÆue
 +
•ecs
->
exãnsi⁄
 - 1;

288 if(
vÆue
 >
•ecs
->
m≠_cou¡
)

289 
ASN__DECODE_FAILED
;

292 *
«tive
 = 
•ecs
->
vÆue2íum
[
vÆue
].
«t_vÆue
;

293 
	`ASN_DEBUG
("Decoded %†%ld", 
td
->
«me
, *
«tive
);

295  
rvÆ
;

296 
	}
}

298 
a¢_íc_rvÆ_t


299 
	$N©iveEnumî©ed_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

300 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

301 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

302 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = (c⁄°á¢_INTEGER_•ecifics_à*)
td
->
•ecifics
;

303 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

304 
«tive
, 
vÆue
;

305 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
 = 
NULL
;

306 
öext
 = 0;

307 
a¢_INTEGER_íum_m≠_t
 
key
;

308 
a¢_INTEGER_íum_m≠_t
 *
kf
;

310 if(!
•å
Ë
ASN__ENCODE_FAILED
;

311 if(!
•ecs
Ë
ASN__ENCODE_FAILED
;

313 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

314 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

315 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

316 
ASN__ENCODE_FAILED
;

318 
	`ASN_DEBUG
("Encodög %†a†N©iveEnumî©ed", 
td
->
«me
);

320 
î
.
ícoded
 = 0;

322 
«tive
 = *(c⁄° *)
•å
;

323 if(
«tive
 < 0Ë
ASN__ENCODE_FAILED
;

325 
key
.
«t_vÆue
 = 
«tive
;

326 
kf
 = 
	`b£¨ch
(&
key
, 
•ecs
->
vÆue2íum
, s≥cs->
m≠_cou¡
,

327 (
key
), 
N©iveEnumî©ed__com∑r_vÆue2íum
);

328 if(!
kf
) {

329 
	`ASN_DEBUG
("Nÿñemíàc‹ª•⁄d†tÿ%ld", 
«tive
);

330 
ASN__ENCODE_FAILED
;

332 
vÆue
 = 
kf
 - 
•ecs
->
vÆue2íum
;

334 if(
˘
 && ct->
ønge_bôs
 >= 0) {

335 
cmpWôh
 = 
•ecs
->
exãnsi⁄


336 ? 
•ecs
->
exãnsi⁄
 - 1 : s≥cs->
m≠_cou¡
;

337 if(
vÆue
 >
cmpWôh
)

338 
öext
 = 1;

340 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

341 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

342 
ASN__ENCODE_FAILED
;

343 if(
öext
Ë
˘
 = 0;

344 } if(
öext
) {

345 
ASN__ENCODE_FAILED
;

348 if(
˘
 && ct->
ønge_bôs
 >= 0) {

349 if(
	`≥r_put_„w_bôs
(
po
, 
vÆue
, 
˘
->
ønge_bôs
))

350 
ASN__ENCODE_FAILED
;

351 
	`ASN__ENCODED_OK
(
î
);

354 if(!
•ecs
->
exãnsi⁄
)

355 
ASN__ENCODE_FAILED
;

360 
	`ASN_DEBUG
("value = %ld,Éxt = %d, inext = %d,Ñes = %ld",

361 
vÆue
, 
•ecs
->
exãnsi⁄
, 
öext
,

362 
vÆue
 - (
öext
 ? (
•ecs
->
exãnsi⁄
 - 1) : 0));

363 if(
	`u≥r_put_n¢nwn
(
po
, 
vÆue
 - (
öext
 ? (
•ecs
->
exãnsi⁄
 - 1) : 0)))

364 
ASN__ENCODE_FAILED
;

366 
	`ASN__ENCODED_OK
(
î
);

367 
	}
}

	@NativeInteger.c

13 
	~<a¢_öã∫Æ.h
>

14 
	~<N©iveI¡egî.h
>

19 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_N©iveI¡egî_ègs
[] = {

20 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

22 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_N©iveI¡egî
 = {

23 
N©iveI¡egî_‰ì
,

24 
N©iveI¡egî_¥öt
,

25 
N©iveI¡egî_com∑ª
,

26 
N©iveI¡egî_decode_bî
,

27 
N©iveI¡egî_ícode_dî
,

28 
N©iveI¡egî_decode_xî
,

29 
N©iveI¡egî_ícode_xî
,

30 #ifdef 
ASN_DISABLE_OER_SUPPORT


34 
N©iveI¡egî_decode_€r
,

35 
N©iveI¡egî_ícode_€r
,

37 #ifdef 
ASN_DISABLE_PER_SUPPORT


43 
N©iveI¡egî_decode_u≥r
,

44 
N©iveI¡egî_ícode_u≥r
,

45 
N©iveI¡egî_decode_≠î
,

46 
N©iveI¡egî_ícode_≠î
,

48 
N©iveI¡egî_øndom_fûl
,

51 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_N©iveI¡egî
 = {

54 &
a¢_OP_N©iveI¡egî
,

55 
a¢_DEF_N©iveI¡egî_ègs
,

56 (
a¢_DEF_N©iveI¡egî_ègs
) / (asn_DEF_NativeInteger_tags[0]),

57 
a¢_DEF_N©iveI¡egî_ègs
,

58 (
a¢_DEF_N©iveI¡egî_ègs
) / (asn_DEF_NativeInteger_tags[0]),

59 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

67 
a¢_dec_rvÆ_t


68 
	$N©iveI¡egî_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

69 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
nöt_±r
,

70 c⁄° *
buf_±r
, 
size_t
 
size
, 
èg_mode
) {

71 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

72 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

73 *
«tive
 = (*)*
nöt_±r
;

74 
a¢_dec_rvÆ_t
 
rvÆ
;

75 
bî_év_Àn_t
 
Àngth
;

80 if(
«tive
 =
NULL
) {

81 
«tive
 = (*)(*
nöt_±r
 = 
	`CALLOC
(1, (*native)));

82 if(
«tive
 =
NULL
) {

83 
rvÆ
.
code
 = 
RC_FAIL
;

84 
rvÆ
.
c⁄sumed
 = 0;

85  
rvÆ
;

89 
	`ASN_DEBUG
("Decoding %sás INTEGER (tm=%d)",

90 
td
->
«me
, 
èg_mode
);

95 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 0, 
buf_±r
, 
size
,

96 
èg_mode
, 0, &
Àngth
, 0);

97 if(
rvÆ
.
code
 !
RC_OK
)

98  
rvÆ
;

100 
	`ASN_DEBUG
("%†Àngth i†%d byãs", 
td
->
«me
, ()
Àngth
);

105 
buf_±r
 = ((c⁄° *)buf_±rË+ 
rvÆ
.
c⁄sumed
;

106 
size
 -
rvÆ
.
c⁄sumed
;

107 if(
Àngth
 > (
bî_év_Àn_t
)
size
) {

108 
rvÆ
.
code
 = 
RC_WMORE
;

109 
rvÆ
.
c⁄sumed
 = 0;

110  
rvÆ
;

119 
INTEGER_t
 
tmp
;

121 c⁄° *
c⁄°buf
;

122 *
n⁄c⁄°buf
;

123 } 
unc⁄°_buf
;

124 
l
;

126 
unc⁄°_buf
.
c⁄°buf
 = 
buf_±r
;

127 
tmp
.
buf
 = (
uöt8_t
 *)
unc⁄°_buf
.
n⁄c⁄°buf
;

128 
tmp
.
size
 = 
Àngth
;

130 if((
•ecs
&&•ecs->
fõld_unsig√d
)

131 ? 
	`a¢_INTEGER2ul⁄g
(&
tmp
, (*)&
l
)

132 : 
	`a¢_INTEGER2l⁄g
(&
tmp
, &
l
)) {

133 
rvÆ
.
code
 = 
RC_FAIL
;

134 
rvÆ
.
c⁄sumed
 = 0;

135  
rvÆ
;

138 *
«tive
 = 
l
;

141 
rvÆ
.
code
 = 
RC_OK
;

142 
rvÆ
.
c⁄sumed
 +
Àngth
;

144 
	`ASN_DEBUG
("Took %ld/%ld bytesÅoÉncode %s (%ld)",

145 ()
rvÆ
.
c⁄sumed
, ()
Àngth
, 
td
->
«me
, ()*
«tive
);

147  
rvÆ
;

148 
	}
}

153 
a¢_íc_rvÆ_t


154 
	$N©iveI¡egî_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
sd
, c⁄° *
±r
,

155 
èg_mode
, 
bî_év_èg_t
 
èg
,

156 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

157 
«tive
 = *(c⁄° *)
±r
;

158 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

159 
INTEGER_t
 
tmp
;

161 #ifdef 
WORDS_BIGENDIAN


163 
tmp
.
buf
 = (
uöt8_t
 *)&
«tive
;

164 
tmp
.
size
 = (
«tive
);

167 
uöt8_t
 
buf
[(
«tive
)];

168 
uöt8_t
 *
p
;

171 
p
 = 
buf
 + (bufË- 1;Ö >buf;Ö--, 
«tive
 >>= 8)

172 *
p
 = (
uöt8_t
)
«tive
;

174 
tmp
.
buf
 = buf;

175 
tmp
.
size
 = (
buf
);

179 
îvÆ
 = 
	`INTEGER_ícode_dî
(
sd
, &
tmp
, 
èg_mode
, 
èg
, 
cb
, 
≠p_key
);

180 if(
îvÆ
.
°ru˘uª_±r
 =&
tmp
) {

181 
îvÆ
.
°ru˘uª_±r
 = 
±r
;

183  
îvÆ
;

184 
	}
}

189 
a¢_dec_rvÆ_t


190 
	$N©iveI¡egî_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

191 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

192 c⁄° *
›t_m«me
, c⁄° *
buf_±r
,

193 
size_t
 
size
) {

194 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

195 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

196 
a¢_dec_rvÆ_t
 
rvÆ
;

197 
INTEGER_t
 
°
;

198 *
°_±r
 = (*)&
°
;

199 *
«tive
 = (*)*
•å
;

201 if(!
«tive
) {

202 
«tive
 = (*)(*
•å
 = 
	`CALLOC
(1, (*native)));

203 if(!
«tive
Ë
ASN__DECODE_FAILED
;

206 
	`mem£t
(&
°
, 0, (st));

207 
rvÆ
 = 
	`INTEGER_decode_xî
(
›t_codec_˘x
, 
td
, &
°_±r
,

208 
›t_m«me
, 
buf_±r
, 
size
);

209 if(
rvÆ
.
code
 =
RC_OK
) {

210 
l
;

211 if((
•ecs
&&•ecs->
fõld_unsig√d
)

212 ? 
	`a¢_INTEGER2ul⁄g
(&
°
, (*)&
l
)

213 : 
	`a¢_INTEGER2l⁄g
(&
°
, &
l
)) {

214 
rvÆ
.
code
 = 
RC_FAIL
;

215 
rvÆ
.
c⁄sumed
 = 0;

217 *
«tive
 = 
l
;

225 
rvÆ
.
c⁄sumed
 = 0;

227 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_INTEGER
, &
°
);

228  
rvÆ
;

229 
	}
}

232 
a¢_íc_rvÆ_t


233 
	$N©iveI¡egî_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

234 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

235 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

236 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

237 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

238 
s¸©ch
[32];

239 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

240 c⁄° *
«tive
 = (c⁄° *)
•å
;

242 ()
ûevñ
;

243 ()
Êags
;

245 if(!
«tive
Ë
ASN__ENCODE_FAILED
;

247 
î
.
ícoded
 = 
	`¢¥ötf
(
s¸©ch
, (scratch),

248 (
•ecs
 && s≥cs->
fõld_unsig√d
)

249 ? "%lu" : "%ld", *
«tive
);

250 if(
î
.
ícoded
 <0 || (
size_t
Îr.ícoded >(
s¸©ch
)

251 || 
	`cb
(
s¸©ch
, 
î
.
ícoded
, 
≠p_key
) < 0)

252 
ASN__ENCODE_FAILED
;

254 
	`ASN__ENCODED_OK
(
î
);

255 
	}
}

257 #i‚de‡ 
ASN_DISABLE_PER_SUPPORT


259 
a¢_dec_rvÆ_t


260 
	$N©iveI¡egî_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

261 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

262 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

263 
a¢_≥r_d©a_t
 *
pd
) {

264 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

265 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

266 
a¢_dec_rvÆ_t
 
rvÆ
;

267 *
«tive
 = (*)*
•å
;

268 
INTEGER_t
 
tmpöt
;

269 *
tmpöçå
 = &
tmpöt
;

271 ()
›t_codec_˘x
;

272 
	`ASN_DEBUG
("Decodög N©iveI¡egî %†(UPER)", 
td
->
«me
);

274 if(!
«tive
) {

275 
«tive
 = (*)(*
•å
 = 
	`CALLOC
(1, (*native)));

276 if(!
«tive
Ë
ASN__DECODE_FAILED
;

279 
	`mem£t
(&
tmpöt
, 0, Åmpint);

280 
rvÆ
 = 
	`INTEGER_decode_u≥r
(
›t_codec_˘x
, 
td
, 
c⁄°øöts
,

281 &
tmpöçå
, 
pd
);

282 if(
rvÆ
.
code
 =
RC_OK
) {

283 if((
•ecs
&&•ecs->
fõld_unsig√d
)

284 ? 
	`a¢_INTEGER2ul⁄g
(&
tmpöt
, (*)
«tive
)

285 : 
	`a¢_INTEGER2l⁄g
(&
tmpöt
, 
«tive
))

286 
rvÆ
.
code
 = 
RC_FAIL
;

288 
	`ASN_DEBUG
("NativeInteger %s got value %ld",

289 
td
->
«me
, *
«tive
);

291 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_INTEGER
, &
tmpöt
);

293  
rvÆ
;

294 
	}
}

296 
a¢_íc_rvÆ_t


297 
	$N©iveI¡egî_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

298 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

299 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

300 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

301 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

302 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

303 
«tive
;

304 
INTEGER_t
 
tmpöt
;

306 if(!
•å
Ë
ASN__ENCODE_FAILED
;

308 
«tive
 = *(c⁄° *)
•å
;

310 
	`ASN_DEBUG
("Encodög N©iveI¡egî %†%ld (UPER)", 
td
->
«me
, 
«tive
);

312 
	`mem£t
(&
tmpöt
, 0, (tmpint));

313 if((
•ecs
&&•ecs->
fõld_unsig√d
)

314 ? 
	`a¢_ul⁄g2INTEGER
(&
tmpöt
, 
«tive
)

315 : 
	`a¢_l⁄g2INTEGER
(&
tmpöt
, 
«tive
))

316 
ASN__ENCODE_FAILED
;

317 
î
 = 
	`INTEGER_ícode_u≥r
(
td
, 
c⁄°øöts
, &
tmpöt
, 
po
);

318 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_INTEGER
, &
tmpöt
);

319  
î
;

320 
	}
}

322 
a¢_dec_rvÆ_t


323 
	$N©iveI¡egî_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

324 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

325 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

327 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = (c⁄°á¢_INTEGER_•ecifics_à*)
td
->
•ecifics
;

328 
a¢_dec_rvÆ_t
 
rvÆ
;

329 *
«tive
 = (*)*
•å
;

330 
INTEGER_t
 
tmpöt
;

331 *
tmpöçå
 = &
tmpöt
;

333 ()
›t_codec_˘x
;

334 
	`ASN_DEBUG
("Decodög N©iveI¡egî %†(APER)", 
td
->
«me
);

336 if(!
«tive
) {

337 
«tive
 = (*)(*
•å
 = 
	`CALLOC
(1, (*native)));

338 if(!
«tive
Ë
ASN__DECODE_FAILED
;

341 
	`mem£t
(&
tmpöt
, 0, Åmpint);

342 
rvÆ
 = 
	`INTEGER_decode_≠î
(
›t_codec_˘x
, 
td
, 
c⁄°øöts
,

343 &
tmpöçå
, 
pd
);

344 if(
rvÆ
.
code
 =
RC_OK
) {

345 if((
•ecs
&&•ecs->
fõld_unsig√d
)

346 ? 
	`a¢_INTEGER2ul⁄g
(&
tmpöt
, (*)
«tive
)

347 : 
	`a¢_INTEGER2l⁄g
(&
tmpöt
, 
«tive
))

348 
rvÆ
.
code
 = 
RC_FAIL
;

350 
	`ASN_DEBUG
("NativeInteger %s got value %ld",

351 
td
->
«me
, *
«tive
);

353 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_INTEGER
, &
tmpöt
);

355  
rvÆ
;

356 
	}
}

358 
a¢_íc_rvÆ_t


359 
	$N©iveI¡egî_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

360 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

361 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

363 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 = (c⁄°á¢_INTEGER_•ecifics_à*)
td
->
•ecifics
;

364 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

365 
«tive
;

366 
INTEGER_t
 
tmpöt
;

368 if(!
•å
Ë
ASN__ENCODE_FAILED
;

370 
«tive
 = *(c⁄° *)
•å
;

372 
	`ASN_DEBUG
("Encodög N©iveI¡egî %†%ld (APER)", 
td
->
«me
, 
«tive
);

374 
	`mem£t
(&
tmpöt
, 0, (tmpint));

375 if((
•ecs
&&•ecs->
fõld_unsig√d
)

376 ? 
	`a¢_ul⁄g2INTEGER
(&
tmpöt
, ()
«tive
)

377 : 
	`a¢_l⁄g2INTEGER
(&
tmpöt
, 
«tive
))

378 
ASN__ENCODE_FAILED
;

379 
î
 = 
	`INTEGER_ícode_≠î
(
td
, 
c⁄°øöts
, &
tmpöt
, 
po
);

380 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_INTEGER
, &
tmpöt
);

381  
î
;

382 
	}
}

390 
	$N©iveI¡egî_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

391 
ûevñ
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

392 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

393 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

394 c⁄° *
«tive
 = (c⁄° *)
•å
;

395 
s¸©ch
[32];

396 
ªt
;

398 ()
td
;

399 ()
ûevñ
;

401 if(
«tive
) {

402 
vÆue
 = *
«tive
;

403 
ªt
 = 
	`¢¥ötf
(
s¸©ch
, (scratch),

404 (
•ecs
 && s≥cs->
fõld_unsig√d
Ë? "%lu" : "%ld", 
vÆue
);

405 
	`as£π
(
ªt
 > 0 && (
size_t
Ïë < (
s¸©ch
));

406 if(
	`cb
(
s¸©ch
, 
ªt
, 
≠p_key
) < 0)  -1;

407 if(
•ecs
 && (
vÆue
 >0 || !•ecs->
fõld_unsig√d
)) {

408 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
ñ
 =

409 
	`INTEGER_m≠_vÆue2íum
(
•ecs
, 
vÆue
);

410 if(
ñ
) {

411 if(
	`cb
(" (", 2, 
≠p_key
) < 0)  -1;

412 if(
	`cb
(
ñ
->
íum_«me
,Él->
íum_Àn
, 
≠p_key
) < 0)  -1;

413 if(
	`cb
(")", 1, 
≠p_key
) < 0)  -1;

418  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

420 
	}
}

423 
	$N©iveI¡egî_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
±r
,

424 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

425 if(!
td
 || !
±r
)

428 
	`ASN_DEBUG
("Freeing %sás INTEGER (%d, %p, Native)",

429 
td
->
«me
, 
mëhod
, 
±r
);

431 
mëhod
) {

432 
ASFM_FREE_EVERYTHING
:

433 
	`FREEMEM
(
±r
);

435 
ASFM_FREE_UNDERLYING
:

437 
ASFM_FREE_UNDERLYING_AND_RESET
:

438 
	`mem£t
(
±r
, 0, ());

441 
	}
}

444 
	$N©iveI¡egî_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
, c⁄° *
b±r
) {

445 ()
td
;

447 if(
≠å
 && 
b±r
) {

448 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

449 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

450 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

451 c⁄° *
a
 = 
≠å
;

452 c⁄° *
b
 = 
b±r
;

453 if(*
a
 < *
b
) {

455 } if(*
a
 > *
b
) {

461 c⁄° *
a
 = 
≠å
;

462 c⁄° *
b
 = 
b±r
;

463 if(*
a
 < *
b
) {

465 } if(*
a
 > *
b
) {

471 } if(!
≠å
) {

476 
	}
}

478 
a¢_øndom_fûl_ªsu…_t


479 
	$N©iveI¡egî_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

480 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

481 
size_t
 
max_Àngth
) {

482 c⁄° 
a¢_INTEGER_•ecifics_t
 *
•ecs
 =

483 (c⁄° 
a¢_INTEGER_•ecifics_t
 *)
td
->
•ecifics
;

484 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

485 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

486 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

487 *
°
 = *
•å
;

488 c⁄° 
a¢_INTEGER_íum_m≠_t
 *
em≠
;

489 
size_t
 
em≠_Àn
;

490 
ötmax_t
 
vÆue
;

491 
föd_öside_m≠
;

493 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

495 if(
°
 =
NULL
) {

496 
°
 = (*)
	`CALLOC
(1, (*st));

497 if(
°
 =
NULL
) {

498  
ªsu…_Áûed
;

502 if(
•ecs
) {

503 
em≠
 = 
•ecs
->
vÆue2íum
;

504 
em≠_Àn
 = 
•ecs
->
m≠_cou¡
;

505 if(
•ecs
->
°ri˘_íumî©i⁄
) {

506 
föd_öside_m≠
 = 
em≠_Àn
 > 0;

508 
föd_öside_m≠
 = 
em≠_Àn
 ? 
	`a¢_øndom_bëwìn
(0, 1) : 0;

511 
em≠
 = 0;

512 
em≠_Àn
 = 0;

513 
föd_öside_m≠
 = 0;

516 if(
föd_öside_m≠
) {

517 
	`as£π
(
em≠_Àn
 > 0);

518 
vÆue
 = 
em≠
[
	`a¢_øndom_bëwìn
(0, 
em≠_Àn
 - 1)].
«t_vÆue
;

520 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
˘
;

522 c⁄° 
v¨ü¡s
[] = {

528 if(
•ecs
 && s≥cs->
fõld_unsig√d
) {

529 
	`as£π
(
v¨ü¡s
[18] == 0);

530 
vÆue
 = 
v¨ü¡s
[
	`a¢_øndom_bëwìn
(

531 18, (
v¨ü¡s
) / (variants[0]) - 1)];

533 
vÆue
 = 
v¨ü¡s
[
	`a¢_øndom_bëwìn
(

534 0, (
v¨ü¡s
) / (variants[0]) - 1)];

537 if(!
c⁄°øöts
Ëc⁄°øöt†&
td
->
ícodög_c⁄°øöts
;

538 
˘
 = 
c⁄°øöts
 ? c⁄°øöts->
≥r_c⁄°øöts
 : 0;

539 if(
˘
 && (˘->
vÆue
.
Êags
 & 
APC_CONSTRAINED
)) {

540 if(
vÆue
 < 
˘
->vÆue.
lowî_bound
 || vÆuê> ct->vÆue.
uµî_bound
) {

541 
vÆue
 = 
	`a¢_øndom_bëwìn
(
˘
->vÆue.
lowî_bound
,

542 
˘
->
vÆue
.
uµî_bound
);

547 *
•å
 = 
°
;

548 *
°
 = 
vÆue
;

549  
ªsu…_ok
;

550 
	}
}

	@NativeReal.c

12 
	~<a¢_öã∫Æ.h
>

13 
	~<N©iveRól.h
>

14 
	~<REAL.h
>

15 
	~<OCTET_STRING.h
>

16 
	~<m©h.h
>

17 
	~<Êﬂt.h
>

19 #i‡
deföed
(
__˛™g__
)

27 #¥agm®
˛™g
 
dügno°ic
 
push


28 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wc11-extensions"

29 
	$a¢_i¢™
(
d
) {

30  
	`i¢™
(
d
);

31 
	}
}

32 #¥agm®
˛™g
 
dügno°ic
 
p›


34 
	#a¢_i¢™
(
v
Ë
	`i¢™
(v)

	)

40 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_N©iveRól_ègs
[] = {

41 (
ASN_TAG_CLASS_UNIVERSAL
 | (9 << 2))

43 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_N©iveRól
 = {

44 
N©iveRól_‰ì
,

45 
N©iveRól_¥öt
,

46 
N©iveRól_com∑ª
,

47 
N©iveRól_decode_bî
,

48 
N©iveRól_ícode_dî
,

49 
N©iveRól_decode_xî
,

50 
N©iveRól_ícode_xî
,

51 #ifdef 
ASN_DISABLE_OER_SUPPORT


55 
N©iveRól_decode_€r
,

56 
N©iveRól_ícode_€r
,

58 #ifdef 
ASN_DISABLE_PER_SUPPORT


64 
N©iveRól_decode_u≥r
,

65 
N©iveRól_ícode_u≥r
,

66 
N©iveRól_decode_≠î
,

67 
N©iveRól_ícode_≠î
,

69 
N©iveRól_øndom_fûl
,

72 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_N©iveRól
 = {

75 &
a¢_OP_N©iveRól
,

76 
a¢_DEF_N©iveRól_ègs
,

77 (
a¢_DEF_N©iveRól_ègs
) / (asn_DEF_NativeReal_tags[0]),

78 
a¢_DEF_N©iveRól_ègs
,

79 (
a¢_DEF_N©iveRól_ègs
) / (asn_DEF_NativeReal_tags[0]),

80 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

85 
size_t
 
N©iveRól__Êﬂt_size
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
);

86 
N©iveRól__gë_doubÀ
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

87 c⁄° *
±r
);

88 
ssize_t
 
N©iveRól__£t
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

89 
d
);

94 
a¢_dec_rvÆ_t


95 
	$N©iveRól_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

96 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

97 c⁄° *
buf_±r
, 
size_t
 
size
, 
èg_mode
) {

98 
a¢_dec_rvÆ_t
 
rvÆ
;

99 
bî_év_Àn_t
 
Àngth
;

101 
	`ASN_DEBUG
("Decodög %†a†REAL (tm=%d)", 
td
->
«me
, 
èg_mode
);

106 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 0, 
buf_±r
, 
size
, 
èg_mode
, 0,

107 &
Àngth
, 0);

108 if(
rvÆ
.
code
 !
RC_OK
) Ñval;

109 
	`as£π
(
Àngth
 >= 0);

111 
	`ASN_DEBUG
("%†Àngth i†%d byãs", 
td
->
«me
, ()
Àngth
);

116 
buf_±r
 = ((c⁄° *)buf_±rË+ 
rvÆ
.
c⁄sumed
;

117 
size
 -
rvÆ
.
c⁄sumed
;

118 if(
Àngth
 > (
bî_év_Àn_t
)
size
) {

119 
rvÆ
.
code
 = 
RC_WMORE
;

120 
rvÆ
.
c⁄sumed
 = 0;

121  
rvÆ
;

130 
uöt8_t
 
s¸©ch
[24];

131 
REAL_t
 
tmp
;

132 
d
;

133 
ªt
;

135 if((
size_t
)
Àngth
 < (
s¸©ch
)) {

136 
tmp
.
buf
 = 
s¸©ch
;

137 
tmp
.
size
 = 
Àngth
;

140 
tmp
.
buf
 = 
	`CALLOC
(1, 
Àngth
 + 1);

141 
tmp
.
size
 = 
Àngth
;

142 if(!
tmp
.
buf
) {

143 
rvÆ
.
code
 = 
RC_FAIL
;

144 
rvÆ
.
c⁄sumed
 = 0;

145  
rvÆ
;

149 
	`mem˝y
(
tmp
.
buf
, 
buf_±r
, 
Àngth
);

150 
tmp
.
buf
[
Àngth
] = '\0';

152 
ªt
 = 
	`a¢_REAL2doubÀ
(&
tmp
, &
d
);

153 if(
tmp
.
buf
 !
s¸©ch
Ë
	`FREEMEM
(tmp.buf);

154 if(
ªt
) {

155 
rvÆ
.
code
 = 
RC_FAIL
;

156 
rvÆ
.
c⁄sumed
 = 0;

157  
rvÆ
;

160 if(
	`N©iveRól__£t
(
td
, 
•å
, 
d
) < 0)

161 
ASN__DECODE_FAILED
;

164 
rvÆ
.
code
 = 
RC_OK
;

165 
rvÆ
.
c⁄sumed
 +
Àngth
;

167 
	`ASN_DEBUG
("Took %ld/%ld byã†tÿícodê%s", ()
rvÆ
.
c⁄sumed
,

168 ()
Àngth
, 
td
->
«me
);

170  
rvÆ
;

171 
	}
}

176 
a¢_íc_rvÆ_t


177 
	$N©iveRól_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

178 
èg_mode
, 
bî_év_èg_t
 
èg
,

179 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

180 
d
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
•å
);

181 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

182 
REAL_t
 
tmp
;

185 
	`mem£t
(&
tmp
, 0, (tmp));

187 if(
	`a¢_doubÀ2REAL
(&
tmp
, 
d
))

188 
ASN__ENCODE_FAILED
;

191 
îvÆ
 = 
	`dî_ícode_¥imôive
(
td
, &
tmp
, 
èg_mode
, 
èg
, 
cb
, 
≠p_key
);

192 if(
îvÆ
.
ícoded
 == -1) {

193 
	`as£π
(
îvÆ
.
°ru˘uª_±r
 =&
tmp
);

194 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

198 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

200  
îvÆ
;

201 
	}
}

203 #i‚de‡
ASN_DISABLE_PER_SUPPORT


208 
a¢_dec_rvÆ_t


209 
	$N©iveRól_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

210 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

211 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

212 
a¢_≥r_d©a_t
 *
pd
) {

213 
a¢_dec_rvÆ_t
 
rvÆ
;

214 
d
;

215 
REAL_t
 
tmp
;

216 *
±mp
 = &
tmp
;

217 
ªt
;

219 ()
c⁄°øöts
;

221 
	`mem£t
(&
tmp
, 0, (tmp));

222 
rvÆ
 = 
	`OCTET_STRING_decode_u≥r
(
›t_codec_˘x
, &
a¢_DEF_REAL
,

223 
NULL
, &
±mp
, 
pd
);

224 if(
rvÆ
.
code
 !
RC_OK
) {

225 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

226  
rvÆ
;

229 
ªt
 = 
	`a¢_REAL2doubÀ
(&
tmp
, &
d
);

230 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

231 if(
ªt
Ë
ASN__DECODE_FAILED
;

233 if(
	`N©iveRól__£t
(
td
, 
•å
, 
d
) < 0 )

234 
ASN__DECODE_FAILED
;

236  
rvÆ
;

237 
	}
}

242 
a¢_íc_rvÆ_t


243 
	$N©iveRól_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

244 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

245 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

246 
d
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
•å
);

247 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

248 
REAL_t
 
tmp
;

250 ()
c⁄°øöts
;

253 
	`mem£t
(&
tmp
, 0, (tmp));

255 if(
	`a¢_doubÀ2REAL
(&
tmp
, 
d
))

256 
ASN__ENCODE_FAILED
;

259 
îvÆ
 = 
	`OCTET_STRING_ícode_u≥r
(&
a¢_DEF_REAL
, 
NULL
, &
tmp
, 
po
);

260 if(
îvÆ
.
ícoded
 == -1)

261 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

264 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

266  
îvÆ
;

267 
	}
}

270 
a¢_dec_rvÆ_t


271 
	$N©iveRól_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

272 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

273 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

274 **
dbl_±r
, 
a¢_≥r_d©a_t
 *
pd
) {

275 *
Dbl
 = (*)*
dbl_±r
;

276 
a¢_dec_rvÆ_t
 
rvÆ
;

277 
REAL_t
 
tmp
;

278 *
±mp
 = &
tmp
;

279 
ªt
;

281 ()
c⁄°øöts
;

286 if(
Dbl
 =
NULL
) {

287 *
dbl_±r
 = 
	`CALLOC
(1, (*
Dbl
));

288 
Dbl
 = (*)*
dbl_±r
;

289 if(
Dbl
 =
NULL
)

290 
ASN__DECODE_FAILED
;

293 
	`mem£t
(&
tmp
, 0, (tmp));

294 
rvÆ
 = 
	`OCTET_STRING_decode_≠î
(
›t_codec_˘x
, 
td
, 
NULL
,

295 &
±mp
, 
pd
);

296 if(
rvÆ
.
code
 !
RC_OK
) {

297 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

298  
rvÆ
;

301 
ªt
 = 
	`a¢_REAL2doubÀ
(&
tmp
, 
Dbl
);

302 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

303 if(
ªt
Ë
ASN__DECODE_FAILED
;

305  
rvÆ
;

306 
	}
}

308 
a¢_íc_rvÆ_t


309 
	$N©iveRól_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

310 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

311 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

312 
Dbl
 = *(c⁄° *)
•å
;

313 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

314 
REAL_t
 
tmp
;

316 ()
c⁄°øöts
;

319 
	`mem£t
(&
tmp
, 0, (tmp));

321 if(
	`a¢_doubÀ2REAL
(&
tmp
, 
Dbl
))

322 
ASN__ENCODE_FAILED
;

325 
îvÆ
 = 
	`OCTET_STRING_ícode_≠î
(
td
, 
NULL
, &
tmp
, 
po
);

326 if(
îvÆ
.
ícoded
 == -1)

327 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

330 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

332  
îvÆ
;

333 
	}
}

337 #i‚de‡
ASN_DISABLE_OER_SUPPORT


344 
	$N©iveRól__√tw‹k_sw≠
(
size_t
 
Êﬂt_size
, c⁄° *
§˝
, 
uöt8_t
 *
d°
) {

345 c⁄° 
uöt8_t
 *
§c
 = 
§˝
;

346 
ã°
 = -0.0;

347 
Êﬂt_big_ídün
 = *(c⁄° *)&
ã°
 != 0;

349 c⁄° 
sizeof_doubÀ_is_8_a
[()-7] 
CC_NOTUSED
;

350 c⁄° 
sizeof_doubÀ_is_8_b
[9-()] 
CC_NOTUSED
;

352 c⁄° 
sizeof_Êﬂt_is_4_a
[()-3] 
CC_NOTUSED
;

353 c⁄° 
sizeof_Êﬂt_is_4_b
[5-()] 
CC_NOTUSED
;

355 
Êﬂt_size
) {

357 
	`as£π
(() == 8);

358 if(
Êﬂt_big_ídün
) {

359 
d°
[0] = 
§c
[0];

360 
d°
[1] = 
§c
[1];

361 
d°
[2] = 
§c
[2];

362 
d°
[3] = 
§c
[3];

363 
d°
[4] = 
§c
[4];

364 
d°
[5] = 
§c
[5];

365 
d°
[6] = 
§c
[6];

366 
d°
[7] = 
§c
[7];

368 
d°
[0] = 
§c
[7];

369 
d°
[1] = 
§c
[6];

370 
d°
[2] = 
§c
[5];

371 
d°
[3] = 
§c
[4];

372 
d°
[4] = 
§c
[3];

373 
d°
[5] = 
§c
[2];

374 
d°
[6] = 
§c
[1];

375 
d°
[7] = 
§c
[0];

379 
	`as£π
(() == 4);

380 if(
Êﬂt_big_ídün
) {

381 
d°
[0] = 
§c
[0];

382 
d°
[1] = 
§c
[1];

383 
d°
[2] = 
§c
[2];

384 
d°
[3] = 
§c
[3];

386 
d°
[0] = 
§c
[3];

387 
d°
[1] = 
§c
[2];

388 
d°
[2] = 
§c
[1];

389 
d°
[3] = 
§c
[0];

393 
	}
}

398 
a¢_íc_rvÆ_t


399 
	$N©iveRól_ícode_€r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

400 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
,

401 c⁄° *
•å
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

402 *
≠p_key
) {

403 
a¢_íc_rvÆ_t
 
î
 = {0, 0, 0};

405 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
€r_c⁄°øöts
;

406 if(
c⁄°øöts
 && c⁄°øöts->
vÆue
.
width
 != 0) {

408 
uöt8_t
 
s¸©ch
[()];

409 c⁄° 
a¢_N©iveRól_•ecifics_t
 *
•ecs
 =

410 (c⁄° 
a¢_N©iveRól_•ecifics_t
 *)
td
->
•ecifics
;

411 
size_t
 
wúe_size
 = 
c⁄°øöts
->
vÆue
.
width
;

413 if(
•ecs
 ? (
wúe_size
 =•ecs->
Êﬂt_size
)

414 : (
wúe_size
 == ())) {

420 
	`as£π
((
wúe_size
 == ())

421 || (
•ecs
 && s≥cs->
Êﬂt_size
 =
wúe_size
));

422 
ASN__ENCODE_FAILED
;

429 
	`N©iveRól__√tw‹k_sw≠
(
wúe_size
, 
•å
, 
s¸©ch
);

430 if(
	`cb
(
s¸©ch
, 
wúe_size
, 
≠p_key
) < 0) {

431 
ASN__ENCODE_FAILED
;

433 
î
.
ícoded
 = 
wúe_size
;

434 
	`ASN__ENCODED_OK
(
î
);

437 
d
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
•å
);

438 
ssize_t
 
Àn_Àn
;

439 
REAL_t
 
tmp
;

442 
	`mem£t
(&
tmp
, 0, (tmp));

444 if(
	`a¢_doubÀ2REAL
(&
tmp
, 
d
)) {

445 
ASN__ENCODE_FAILED
;

449 
Àn_Àn
 = 
	`€r_£rülize_Àngth
(
tmp
.
size
, 
cb
, 
≠p_key
);

450 if(
Àn_Àn
 < 0 || 
	`cb
(
tmp
.
buf
,Åmp.
size
, 
≠p_key
) < 0) {

451 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

452 
ASN__ENCODE_FAILED
;

454 
î
.
ícoded
 = 
Àn_Àn
 + 
tmp
.
size
;

455 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
tmp
);

456 
	`ASN__ENCODED_OK
(
î
);

459 
	}
}

461 
a¢_dec_rvÆ_t


462 
	$N©iveRól_decode_€r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

463 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

464 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

465 c⁄° *
±r
, 
size_t
 
size
) {

466 
a¢_dec_rvÆ_t
 
ok
 = {
RC_OK
, 0};

467 
d
;

468 
ssize_t
 
Àn_Àn
;

469 
size_t
 
ªÆ_body_Àn
;

471 ()
›t_codec_˘x
;

473 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
€r_c⁄°øöts
;

474 if(
c⁄°øöts
 && c⁄°øöts->
vÆue
.
width
 != 0) {

476 
uöt8_t
 
s¸©ch
[()];

477 
size_t
 
wúe_size
 = 
c⁄°øöts
->
vÆue
.
width
;

479 if(
size
 < 
wúe_size
)

480 
ASN__DECODE_STARVED
;

486 
	`N©iveRól__√tw‹k_sw≠
(
wúe_size
, 
±r
, 
s¸©ch
);

489 
wúe_size
) {

492 
tmp
;

493 
	`mem˝y
(&
tmp
, 
s¸©ch
, ());

494 if(
	`N©iveRól__£t
(
td
, 
•å
, 
tmp
) < 0)

495 
ASN__DECODE_FAILED
;

500 
tmp
;

501 
	`mem˝y
(&
tmp
, 
s¸©ch
, ());

502 if(
	`N©iveRól__£t
(
td
, 
•å
, 
tmp
) < 0)

503 
ASN__DECODE_FAILED
;

507 
ASN__DECODE_FAILED
;

510 
ok
.
c⁄sumed
 = 
wúe_size
;

511  
ok
;

514 
Àn_Àn
 = 
	`€r_„tch_Àngth
(
±r
, 
size
, &
ªÆ_body_Àn
);

515 if(
Àn_Àn
 < 0Ë
ASN__DECODE_FAILED
;

516 if(
Àn_Àn
 =0Ë
ASN__DECODE_STARVED
;

518 
±r
 = (c⁄° *Ìå + 
Àn_Àn
;

519 
size
 -
Àn_Àn
;

521 if(
ªÆ_body_Àn
 > 
size
Ë
ASN__DECODE_STARVED
;

524 
uöt8_t
 
s¸©ch
[24];

525 
REAL_t
 
tmp
;

526 
ªt
;

528 if(
ªÆ_body_Àn
 < (
s¸©ch
)) {

529 
tmp
.
buf
 = 
s¸©ch
;

530 
tmp
.
size
 = 
ªÆ_body_Àn
;

533 
tmp
.
buf
 = 
	`CALLOC
(1, 
ªÆ_body_Àn
 + 1);

534 
tmp
.
size
 = 
ªÆ_body_Àn
;

535 if(!
tmp
.
buf
) {

536 
ASN__DECODE_FAILED
;

540 
	`mem˝y
(
tmp
.
buf
, 
±r
, 
ªÆ_body_Àn
);

541 
tmp
.
buf
[
ªÆ_body_Àn
] = '\0';

543 
ªt
 = 
	`a¢_REAL2doubÀ
(&
tmp
, &
d
);

544 if(
tmp
.
buf
 !
s¸©ch
Ë
	`FREEMEM
(tmp.buf);

545 if(
ªt
) {

546 
	`ASN_DEBUG
("REAL decoded i¿%" 
ASN_PRI_SIZE
 " bytes, but can't convertÅ double",

547 
ªÆ_body_Àn
);

548 
ASN__DECODE_FAILED
;

552 if(
	`N©iveRól__£t
(
td
, 
•å
, 
d
) < 0)

553 
ASN__DECODE_FAILED
;

555 
ok
.
c⁄sumed
 = 
Àn_Àn
 + 
ªÆ_body_Àn
;

556  
ok
;

557 
	}
}

564 
a¢_dec_rvÆ_t


565 
	$N©iveRól_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

566 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

567 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

568 
a¢_dec_rvÆ_t
 
rvÆ
;

569 
REAL_t
 
°
 = { 0, 0 };

570 
REAL_t
 *
°p
 = &
°
;

572 
rvÆ
 = 
	`REAL_decode_xî
(
›t_codec_˘x
, 
td
, (**)&
°p
, 
›t_m«me
,

573 
buf_±r
, 
size
);

574 if(
rvÆ
.
code
 =
RC_OK
) {

575 
d
;

576 if(
	`a¢_REAL2doubÀ
(&
°
, &
d
Ë|| 
	`N©iveRól__£t
(
td
, 
•å
, d) < 0) {

577 
rvÆ
.
code
 = 
RC_FAIL
;

578 
rvÆ
.
c⁄sumed
 = 0;

582 
rvÆ
.
c⁄sumed
 = 0;

584 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(
a¢_DEF_REAL
, &
°
);

585  
rvÆ
;

586 
	}
}

588 
a¢_íc_rvÆ_t


589 
	$N©iveRól_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

590 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

591 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

592 
d
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
•å
);

593 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

595 ()
ûevñ
;

597 
î
.
ícoded
 = 
	`REAL__dump
(
d
, 
Êags
 & 
XER_F_CANONICAL
, 
cb
, 
≠p_key
);

598 if(
î
.
ícoded
 < 0Ë
ASN__ENCODE_FAILED
;

600 
	`ASN__ENCODED_OK
(
î
);

601 
	}
}

607 
	$N©iveRól_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

608 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

609 ()
ûevñ
;

611 if(
•å
) {

612 
d
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
•å
);

613  (
	`REAL__dump
(
d
, 0, 
cb
, 
≠p_key
) < 0) ? -1 : 0;

615  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

617 
	}
}

620 
	$N©iveRól_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

621 c⁄° *
b±r
) {

623 if(
≠å
 && 
b±r
) {

624 
a
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
≠å
);

625 
b
 = 
	`N©iveRól__gë_doubÀ
(
td
, 
b±r
);

628 if(
	`a¢_i¢™
(
a
)) {

629 if(
	`a¢_i¢™
(
b
)) {

634 } if(
	`a¢_i¢™
(
b
)) {

638 if(
a
 < 
b
) {

640 } if(
a
 > 
b
) {

645 } if(!
≠å
) {

650 
	}
}

653 
	$N©iveRól_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
±r
,

654 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

655 if(!
td
 || !
±r
)

658 
	`ASN_DEBUG
("Freeing %sás REAL (%d, %p, Native)",

659 
td
->
«me
, 
mëhod
, 
±r
);

661 
mëhod
) {

662 
ASFM_FREE_EVERYTHING
:

663 
	`FREEMEM
(
±r
);

665 
ASFM_FREE_UNDERLYING
:

667 
ASFM_FREE_UNDERLYING_AND_RESET
: {

668 c⁄° 
a¢_N©iveRól_•ecifics_t
 *
•ecs
;

669 
size_t
 
Êﬂt_size
;

670 
•ecs
 = (c⁄° 
a¢_N©iveRól_•ecifics_t
 *)
td
->
•ecifics
;

671 
Êﬂt_size
 = 
•ecs
 ? specs->float_size : ();

672 
	`mem£t
(
±r
, 0, 
Êﬂt_size
);

675 
	}
}

677 
a¢_øndom_fûl_ªsu…_t


678 
	$N©iveRól_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

679 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

680 
size_t
 
max_Àngth
) {

681 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 0};

682 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

683 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

684 #i‚de‡
INFINITY


685 
	#INFINITY
 (1.0/0.0)

	)

687 #i‚de‡
NAN


688 
	#NAN
 (0.0/0.0)

	)

690 c⁄° 
doubÀ_vÆues
[] = {

691 -
M_E
, M_E, -
M_PI
, M_PI,

699 -
DBL_MIN
, DBL_MIN,

700 -
DBL_MAX
, DBL_MAX,

701 #ifde‡ 
DBL_TRUE_MIN


702 -
DBL_TRUE_MIN
, DBL_TRUE_MIN

705 c⁄° 
Êﬂt_vÆues
[] = {

706 0, -0.0, -1, 1, -
M_E
, M_E, -3.14, 3.14, -
M_PI
, M_PI, -255, 255,

707 -
FLT_MIN
, FLT_MIN,

708 -
FLT_MAX
, FLT_MAX,

709 #ifde‡ 
FLT_TRUE_MIN


710 -
FLT_TRUE_MIN
, FLT_TRUE_MIN,

712 
INFINITY
, -INFINITY, 
NAN


714 
ssize_t
 
Êﬂt_£t_size
 = 
	`N©iveRól__Êﬂt_size
(
td
);

715 c⁄° 
size_t
 
n_doubÀs
 = (
doubÀ_vÆues
) / (double_values[0]);

716 c⁄° 
size_t
 
n_Êﬂts
 = (
Êﬂt_vÆues
) / (float_values[0]);

717 
d
;

719 ()
c⁄°øöts
;

721 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

723 if(
Êﬂt_£t_size
 =(Ë&& 
	`a¢_øndom_bëwìn
(0, 1) == 0) {

724 
d
 = 
doubÀ_vÆues
[
	`a¢_øndom_bëwìn
(0, 
n_doubÀs
 - 1)];

726 
d
 = 
Êﬂt_vÆues
[
	`a¢_øndom_bëwìn
(0, 
n_Êﬂts
 - 1)];

729 if(
	`N©iveRól__£t
(
td
, 
•å
, 
d
) < 0) {

730  
ªsu…_Áûed
;

733 
ªsu…_ok
.
Àngth
 = 
Êﬂt_£t_size
;

734  
ªsu…_ok
;

735 
	}
}

742 
size_t


743 
	$N©iveRól__Êﬂt_size
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
) {

744 c⁄° 
a¢_N©iveRól_•ecifics_t
 *
•ecs
 =

745 (c⁄° 
a¢_N©iveRól_•ecifics_t
 *)
td
->
•ecifics
;

746  
•ecs
 ? s≥cs->
Êﬂt_size
 : ();

747 
	}
}

750 
	$N©iveRól__gë_doubÀ
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
±r
) {

751 
size_t
 
Êﬂt_size
 = 
	`N©iveRól__Êﬂt_size
(
td
);

752 if(
Êﬂt_size
 == ()) {

753  *(c⁄° *)
±r
;

755  *(c⁄° *)
±r
;

757 
	}
}

759 
ssize_t


760 
	$N©iveRól__£t
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
, 
d
) {

761 
size_t
 
Êﬂt_size
 = 
	`N©iveRól__Êﬂt_size
(
td
);

762 *
«tive
;

764 if(!(
«tive
 = *
•å
)) {

765 
«tive
 = (*
•å
 = 
	`CALLOC
(1, 
Êﬂt_size
));

766 if(!
«tive
) {

771 if(
Êﬂt_size
 == ()) {

772 if(
	`a¢_doubÀ2Êﬂt
(
d
, (*)
«tive
)) {

776 *(*)
«tive
 = 
d
;

779  
Êﬂt_size
;

780 
	}
}

	@NgENB-ID.c

8 
	~"NgENB-ID.h
"

11 
	$memb_ma¸oNgENB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 if(
°
->
size
 > 0) {

25 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

27 
size
 = 0;

30 if((
size
 == 20)) {

34 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

36 
td
->
«me
, 
__FILE__
, 
__LINE__
);

39 
	}
}

42 
	$memb_sh‹tMa¸oNgENB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

43 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

44 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

45 
size_t
 
size
;

47 if(!
•å
) {

48 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

50 
td
->
«me
, 
__FILE__
, 
__LINE__
);

54 if(
°
->
size
 > 0) {

56 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

58 
size
 = 0;

61 if((
size
 == 18)) {

65 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

67 
td
->
«me
, 
__FILE__
, 
__LINE__
);

70 
	}
}

73 
	$memb_l⁄gMa¸oNgENB_ID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

74 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

75 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

76 
size_t
 
size
;

78 if(!
•å
) {

79 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

81 
td
->
«me
, 
__FILE__
, 
__LINE__
);

85 if(
°
->
size
 > 0) {

87 
size
 = 8 * 
°
->sizê- (°->
bôs_unu£d
 & 0x07);

89 
size
 = 0;

92 if((
size
 == 21)) {

96 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

98 
td
->
«me
, 
__FILE__
, 
__LINE__
);

101 
	}
}

103 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ma¸oNgENB_ID_c⁄°r_2
 
	gCC_NOTUSED
 = {

104 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

105 { 
APC_CONSTRAINED
, 0, 0, 20, 20 } ,

108 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_sh‹tMa¸oNgENB_ID_c⁄°r_3
 
	gCC_NOTUSED
 = {

109 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

110 { 
APC_CONSTRAINED
, 0, 0, 18, 18 } ,

113 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_l⁄gMa¸oNgENB_ID_c⁄°r_4
 
	gCC_NOTUSED
 = {

114 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

115 { 
APC_CONSTRAINED
, 0, 0, 21, 21 } ,

118 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_NgENB_ID_c⁄°r_1
 
	gCC_NOTUSED
 = {

119 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 2, 2, 0, 2 } ,

120 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

123 
a¢_TYPE_membî_t
 
	ga¢_MBR_NgENB_ID_1
[] = {

124 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NgENB_ID
, 
choi˚
.
ma¸oNgENB_ID
),

125 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

127 &
a¢_DEF_BIT_STRING
,

129 { 0, &
a¢_PER_memb_ma¸oNgENB_ID_c⁄°r_2
, 
memb_ma¸oNgENB_ID_c⁄°øöt_1
 },

133 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NgENB_ID
, 
choi˚
.
sh‹tMa¸oNgENB_ID
),

134 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

136 &
a¢_DEF_BIT_STRING
,

138 { 0, &
a¢_PER_memb_sh‹tMa¸oNgENB_ID_c⁄°r_3
, 
memb_sh‹tMa¸oNgENB_ID_c⁄°øöt_1
 },

142 { 
ATF_NOFLAGS
, 0, 
off£tof
(
NgENB_ID
, 
choi˚
.
l⁄gMa¸oNgENB_ID
),

143 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

145 &
a¢_DEF_BIT_STRING
,

147 { 0, &
a¢_PER_memb_l⁄gMa¸oNgENB_ID_c⁄°r_4
, 
memb_l⁄gMa¸oNgENB_ID_c⁄°øöt_1
 },

152 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_NgENB_ID_èg2ñ_1
[] = {

153 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

154 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

155 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

157 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_NgENB_ID_•ecs_1
 = {

158 (
NgENB_ID
),

159 
off£tof
(
NgENB_ID
, 
_a¢_˘x
),

160 
off£tof
(
NgENB_ID
, 
¥e£¡
),

161 (((
NgENB_ID
 *)0)->
¥e£¡
),

162 
a¢_MAP_NgENB_ID_èg2ñ_1
,

167 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_NgENB_ID
 = {

170 &
a¢_OP_CHOICE
,

175 { 0, &
a¢_PER_ty≥_NgENB_ID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

176 
a¢_MBR_NgENB_ID_1
,

178 &
a¢_SPC_NgENB_ID_•ecs_1


	@OCTET_STRING.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<OCTET_STRING.h
>

8 
	~<BIT_STRING.h
>

9 
	~<î∫o.h
>

14 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_OCTET_STRING_ègs
[] = {

15 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

17 
a¢_OCTET_STRING_•ecifics_t
 
	ga¢_SPC_OCTET_STRING_•ecs
 = {

18 (
OCTET_STRING_t
),

19 
off£tof
(
OCTET_STRING_t
, 
_a¢_˘x
),

20 
ASN_OSUBV_STR


23 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_OCTET_STRING
 = {

24 
OCTET_STRING_‰ì
,

25 
OCTET_STRING_¥öt
,

26 
OCTET_STRING_com∑ª
,

27 
OCTET_STRING_decode_bî
,

28 
OCTET_STRING_ícode_dî
,

29 
OCTET_STRING_decode_xî_hex
,

30 
OCTET_STRING_ícode_xî
,

31 #ifdef 
ASN_DISABLE_OER_SUPPORT


35 
OCTET_STRING_decode_€r
,

36 
OCTET_STRING_ícode_€r
,

38 #ifdef 
ASN_DISABLE_PER_SUPPORT


44 
OCTET_STRING_decode_u≥r
,

45 
OCTET_STRING_ícode_u≥r
,

46 
OCTET_STRING_decode_≠î
,

47 
OCTET_STRING_ícode_≠î
,

49 
OCTET_STRING_øndom_fûl
,

52 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_OCTET_STRING
 = {

55 &
a¢_OP_OCTET_STRING
,

56 
a¢_DEF_OCTET_STRING_ègs
,

57 (
a¢_DEF_OCTET_STRING_ègs
)

58 / (
a¢_DEF_OCTET_STRING_ègs
[0]),

59 
a¢_DEF_OCTET_STRING_ègs
,

60 (
a¢_DEF_OCTET_STRING_ègs
)

61 / (
a¢_DEF_OCTET_STRING_ègs
[0]),

62 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

64 &
a¢_SPC_OCTET_STRING_•ecs


67 #unde‡
_CH_PHASE


68 #unde‡
NEXT_PHASE


69 #unde‡
PREV_PHASE


70 
	#_CH_PHASE
(
˘x
, 
öc
) do { \

71 if(
˘x
->
pha£
 == 0) \

72 
˘x
->
c⁄ãxt
 = 0; \

73 
˘x
->
pha£
 +
öc
; \

74 } 0)

	)

75 
	#NEXT_PHASE
(
˘x
Ë
	`_CH_PHASE
(˘x, +1)

	)

76 
	#PREV_PHASE
(
˘x
Ë
	`_CH_PHASE
(˘x, -1)

	)

78 #unde‡
ADVANCE


79 
	#ADVANCE
(
num_byãs
) do { \

80 
size_t
 
num
 = (
num_byãs
); \

81 
buf_±r
 = ((c⁄° *)buf_±rË+ 
num
; \

82 
size
 -
num
; \

83 
c⁄sumed_my£lf
 +
num
; \

84 } 0)

	)

86 #unde‡
RETURN


87 
	#RETURN
(
_code
) do { \

88 
a¢_dec_rvÆ_t
 
tm¥vÆ
; \

89 
tm¥vÆ
.
code
 = 
_code
; \

90 
tm¥vÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
; \

91  
tm¥vÆ
; \

92 } 0)

	)

94 #unde‡
APPEND


95 
	#APPEND
(
buÂå
, 
bufsize
) do { \

96 
size_t
 
_bs
 = (
bufsize
); \

97 
size_t
 
_ns
 = 
˘x
->
c⁄ãxt
; \

98 
size_t
 
_es
 = 
°
->
size
 + 
_bs
; \

100 if(()
_es
 < 0Ë
	`RETURN
(
RC_FAIL
); \

101 if(
_ns
 <
_es
) { \

102 *
±r
; \

104 dÿ{ 
_ns
 = _ns ? _ns << 1 : 16; } \

105 
_ns
 <
_es
); \

107 if(()
_ns
 < 0Ë
	`RETURN
(
RC_FAIL
); \

108 
±r
 = 
	`REALLOC
(
°
->
buf
, 
_ns
); \

109 if(
±r
) { \

110 
°
->
buf
 = (
uöt8_t
 *)
±r
; \

111 
˘x
->
c⁄ãxt
 = 
_ns
; \

113 
	`RETURN
(
RC_FAIL
); \

115 
	`ASN_DEBUG
("RóŒoˇtög i¡ÿ%ld", ()
_ns
); \

117 
	`mem˝y
(
°
->
buf
 + st->
size
, 
buÂå
, 
_bs
); \

119 
°
->
buf
[
_es
] = '\0'; \

120 
°
->
size
 = 
_es
; \

121 } 0)

	)

129 
	s_°ack_ñ
 {

130 
bî_év_Àn_t
 
	mÀ·
;

131 
bî_év_Àn_t
 
	mgŸ
;

132 
	mc⁄t_Àvñ
;

133 
	mw™t_nuŒs
;

134 
	mbôs_ch›≥d
;

135 
bî_év_èg_t
 
	mèg
;

136 
_°ack_ñ
 *
	m¥ev
;

137 
_°ack_ñ
 *
	m√xt
;

139 
	s_°ack
 {

140 
_°ack_ñ
 *
	mèû
;

141 
_°ack_ñ
 *
	mcur_±r
;

144 
_°ack_ñ
 *

145 
	$OS__add_°ack_ñ
(
_°ack
 *
°
) {

146 
_°ack_ñ
 *
√l
;

151 if(
°
->
cur_±r
 && st->cur_±r->
√xt
) {

152 
√l
 = 
°
->
cur_±r
->
√xt
;

153 
√l
->
bôs_ch›≥d
 = 0;

154 
√l
->
gŸ
 = 0;

157 
√l
 = (
_°ack_ñ
 *)
	`CALLOC
(1, (_stack_el));

158 if(
√l
 =
NULL
)

159  
NULL
;

161 if(
°
->
èû
) {

163 
√l
->
c⁄t_Àvñ
 = 
°
->
èû
->cont_level + 1;

164 
°
->
èû
->
√xt
 = 
√l
;

166 
√l
->
¥ev
 = 
°
->
èû
;

167 
°
->
èû
 = 
√l
;

170 
°
->
cur_±r
 = 
√l
;

172  
√l
;

173 
	}
}

175 
_°ack
 *

176 
	$_√w_°ack
() {

177  (
_°ack
 *)
	`CALLOC
(1, (_stack));

178 
	}
}

183 
a¢_dec_rvÆ_t


184 
	$OCTET_STRING_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

185 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

186 c⁄° *
buf_±r
, 
size_t
 
size
, 
èg_mode
) {

187 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


188 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


189 : &
a¢_SPC_OCTET_STRING_•ecs
;

190 
BIT_STRING_t
 *
°
 = (BIT_STRING_à*)*
•å
;

191 
a¢_dec_rvÆ_t
 
rvÆ
;

192 
a¢_°ru˘_˘x_t
 *
˘x
;

193 
ssize_t
 
c⁄sumed_my£lf
 = 0;

194 
_°ack
 *
°ck
;

195 
_°ack_ñ
 *
£l
 = 0;

196 
év_c⁄°r
;

197 
a¢_OS_Subv¨ü¡
 
ty≥_v¨ü¡
 = 
•ecs
->
subv¨ü¡
;

199 
	`ASN_DEBUG
("Decoding %sás %s (frame %ld)",

200 
td
->
«me
,

201 (
ty≥_v¨ü¡
 =
ASN_OSUBV_STR
) ?

203 ()
size
);

208 if(
°
 =
NULL
) {

209 
°
 = (
BIT_STRING_t
 *)(*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

210 if(
°
 =
NULL
Ë
	`RETURN
(
RC_FAIL
);

214 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

216 
˘x
->
pha£
) {

221 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 
˘x
,

222 
buf_±r
, 
size
, 
èg_mode
, -1,

223 &
˘x
->
À·
, &
év_c⁄°r
);

224 if(
rvÆ
.
code
 !
RC_OK
)

225  
rvÆ
;

227 if(
év_c⁄°r
) {

231 
˘x
->
±r
 = 
	`_√w_°ack
();

232 if(!
˘x
->
±r
) {

233 
	`RETURN
(
RC_FAIL
);

239 
	`_CH_PHASE
(
˘x
, 3);

240 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_ANY
 && 
èg_mode
 != 1)

241 
	`APPEND
(
buf_±r
, 
rvÆ
.
c⁄sumed
);

242 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

243 
pha£3
;

246 
	`NEXT_PHASE
(
˘x
);

249 
pha£1
:

253 
°ck
 = (
_°ack
 *)
˘x
->
±r
;

254 
£l
 = 
°ck
->
cur_±r
;

256 
bî_év_èg_t
 
év_èg
;

257 
bî_év_Àn_t
 
év_Àn
;

258 
bî_év_èg_t
 
ex≥˘ed_èg
;

259 
ssize_t
 
é
, 
Œ
, 
évl
;

261 
size_t
 
Le·
 = ((!
£l
||(size_t)£l->
À·
 >
size
)

262 ?
size
:(
size_t
)
£l
->
À·
);

265 
	`ASN_DEBUG
("%p, s->l=%ld, s->wn=%ld, s->g=%ld\n", (*)
£l
,

266 ()(
£l
?£l->
À·
:0),

267 ()(
£l
?£l->
w™t_nuŒs
:0),

268 ()(
£l
?£l->
gŸ
:0)

270 if(
£l
 && sñ->
À·
 <0 && sñ->
w™t_nuŒs
 == 0) {

271 if(
£l
->
¥ev
) {

272 
_°ack_ñ
 *
¥ev
 = 
£l
->prev;

273 if(
¥ev
->
À·
 != -1) {

274 if(
¥ev
->
À·
 < 
£l
->
gŸ
)

275 
	`RETURN
(
RC_FAIL
);

276 
¥ev
->
À·
 -
£l
->
gŸ
;

278 
¥ev
->
gŸ
 +
£l
->got;

279 
£l
 = 
°ck
->
cur_±r
 = 
¥ev
;

280 if(!
£l
) ;

281 
év_c⁄°r
 = 1;

284 
£l
 = 
°ck
->
cur_±r
 = 0;

289 
é
 = 
	`bî_„tch_èg
(
buf_±r
, 
Le·
, &
év_èg
);

290 
	`ASN_DEBUG
("fetchÅag(size=%ld,L=%ld), %sstack,Üeft=%ld, wn=%ld,Ål=%ld",

291 ()
size
, ()
Le·
, 
£l
?"":"!",

292 ()(
£l
?£l->
À·
:0),

293 ()(
£l
?£l->
w™t_nuŒs
:0),

294 ()
é
);

295 
é
) {

296 -1: 
	`RETURN
(
RC_FAIL
);

297 0: 
	`RETURN
(
RC_WMORE
);

300 
év_c⁄°r
 = 
	`BER_TLV_CONSTRUCTED
(
buf_±r
);

302 
Œ
 = 
	`bî_„tch_Àngth
(
év_c⁄°r
,

303 (c⁄° *)
buf_±r
 + 
é
,
Le·
 -Ål,&
év_Àn
);

304 
	`ASN_DEBUG
("GotÅag=%s,Åc=%d,Üeft=%ld,Ål=%ld,Üen=%ld,Ül=%ld",

305 
	`bî_év_èg_°rög
(
év_èg
), 
év_c⁄°r
,

306 ()
Le·
, ()
é
, ()
év_Àn
, ()
Œ
);

307 
Œ
) {

308 -1: 
	`RETURN
(
RC_FAIL
);

309 0: 
	`RETURN
(
RC_WMORE
);

312 if(
£l
 && sñ->
w™t_nuŒs


313 && ((c⁄° 
uöt8_t
 *)
buf_±r
)[0] == 0

314 && ((c⁄° 
uöt8_t
 *)
buf_±r
)[1] == 0)

317 
	`ASN_DEBUG
("E© EOC; wn=%d--", 
£l
->
w™t_nuŒs
);

319 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_ANY


320 && (
èg_mode
 !1 || 
£l
->
c⁄t_Àvñ
))

321 
	`APPEND
("\0\0", 2);

323 
	`ADVANCE
(2);

324 
£l
->
gŸ
 += 2;

325 if(
£l
->
À·
 != -1) {

326 
£l
->
À·
 -= 2;

329 
£l
->
w™t_nuŒs
--;

330 if(
£l
->
w™t_nuŒs
 == 0) {

332 
£l
->
À·
 = 0;

333 
év_c⁄°r
 = 1;

343 
ty≥_v¨ü¡
) {

344 
ASN_OSUBV_BIT
:

347 
ASN_OSUBV_STR
:

349 if(
£l
) {

350 
Àvñ
 = 
£l
->
c⁄t_Àvñ
;

351 if(
Àvñ
 < 
td
->
Æl_ègs_cou¡
) {

352 
ex≥˘ed_èg
 = 
td
->
Æl_ègs
[
Àvñ
];

354 } if(
td
->
Æl_ègs_cou¡
) {

355 
ex≥˘ed_èg
 = 
td
->
Æl_ègs


356 [
td
->
Æl_ègs_cou¡
 - 1];

362 
ASN_OSUBV_ANY
:

363 
ex≥˘ed_èg
 = 
év_èg
;

368 if(
év_èg
 !
ex≥˘ed_èg
) {

369 
buf
[2][32];

370 
	`bî_év_èg_¢¥öt
(
év_èg
,

371 
buf
[0], (buf[0]));

372 
	`bî_év_èg_¢¥öt
(
td
->
ègs
[td->
ègs_cou¡
-1],

373 
buf
[1], (buf[1]));

374 
	`ASN_DEBUG
("Tag doesÇot matchÉxpectation: %s != %s",

375 
buf
[0], buf[1]);

376 
	`RETURN
(
RC_FAIL
);

379 
évl
 = 
é
 + 
Œ
;

380 if((
év_Àn
 + 
évl
) < 0) {

382 
	`ASN_DEBUG
("TLVÉncoding +Üength (%ld) isÅoo big",

383 ()
év_Àn
);

384 
	`RETURN
(
RC_FAIL
);

390 
£l
 = 
	`OS__add_°ack_ñ
(
°ck
);

391 if(!
£l
Ë
	`RETURN
(
RC_FAIL
);

393 
£l
->
èg
 = 
év_èg
;

395 
£l
->
w™t_nuŒs
 = (
év_Àn
==-1);

396 if(
£l
->
¥ev
 && sñ->¥ev->
À·
 != -1) {

398 if(
£l
->
¥ev
->
À·
 < 
évl
 + (
év_Àn
==-1?0:tlv_len))

399 
	`RETURN
(
RC_FAIL
);

400 if(
év_Àn
 == -1)

401 
£l
->
À·
 = sñ->
¥ev
->À· - 
évl
;

403 
£l
->
À·
 = 
év_Àn
;

405 
£l
->
À·
 = 
év_Àn
;

407 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_ANY


408 && (
èg_mode
 !1 || 
£l
->
c⁄t_Àvñ
))

409 
	`APPEND
(
buf_±r
, 
évl
);

410 
£l
->
gŸ
 +
évl
;

411 
	`ADVANCE
(
évl
);

413 
	`ASN_DEBUG
("+EXPECT2 got=%ldÜeft=%ld, wn=%d, clvl=%u",

414 ()
£l
->
gŸ
, ()£l->
À·
,

415 
£l
->
w™t_nuŒs
, sñ->
c⁄t_Àvñ
);

417 } 
év_c⁄°r
);

418 if(
£l
 =
NULL
) {

420 
	`ASN_DEBUG
("Phase out");

421 
	`_CH_PHASE
(
˘x
, +3);

425 
	`NEXT_PHASE
(
˘x
);

428 
°ck
 = (
_°ack
 *)
˘x
->
±r
;

429 
£l
 = 
°ck
->
cur_±r
;

430 
	`ASN_DEBUG
("Phase 2: Need %ld bytes, size=%ld,álrg=%ld, wn=%d",

431 ()
£l
->
À·
, ()
size
, ()£l->
gŸ
,

432 
£l
->
w™t_nuŒs
);

434 
bî_év_Àn_t
 
Àn
;

436 
	`as£π
(
£l
->
À·
 >= 0);

438 
Àn
 = ((
bî_év_Àn_t
)
size
 < 
£l
->
À·
)

439 ? (
bî_év_Àn_t
)
size
 : 
£l
->
À·
;

440 if(
Àn
 > 0) {

441 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT


442 && 
£l
->
bôs_ch›≥d
 == 0) {

444 
°
->
bôs_unu£d
 = *(c⁄° 
uöt8_t
 *)
buf_±r
;

445 
	`APPEND
(((c⁄° *)
buf_±r
+1), (
Àn
 - 1));

446 
£l
->
bôs_ch›≥d
 = 1;

448 
	`APPEND
(
buf_±r
, 
Àn
);

450 
	`ADVANCE
(
Àn
);

451 
£l
->
À·
 -
Àn
;

452 
£l
->
gŸ
 +
Àn
;

455 if(
£l
->
À·
) {

456 
	`ASN_DEBUG
("OSÜeft %ld, size = %ld, wn=%d\n",

457 ()
£l
->
À·
, ()
size
, sñ->
w™t_nuŒs
);

458 
	`RETURN
(
RC_WMORE
);

461 
	`PREV_PHASE
(
˘x
);

462 
pha£1
;

466 
pha£3
:

470 
	`as£π
(
˘x
->
À·
 >= 0);

472 if(
size
 < (
size_t
)
˘x
->
À·
) {

473 if(!
size
Ë
	`RETURN
(
RC_WMORE
);

474 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT
 && !
˘x
->
c⁄ãxt
) {

475 
°
->
bôs_unu£d
 = *(c⁄° 
uöt8_t
 *)
buf_±r
;

476 
˘x
->
À·
--;

477 
	`ADVANCE
(1);

479 
	`APPEND
(
buf_±r
, 
size
);

480 
	`as£π
(
˘x
->
c⁄ãxt
 > 0);

481 
˘x
->
À·
 -
size
;

482 
	`ADVANCE
(
size
);

483 
	`RETURN
(
RC_WMORE
);

485 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT


486 && !
˘x
->
c⁄ãxt
 && ctx->
À·
) {

487 
°
->
bôs_unu£d
 = *(c⁄° 
uöt8_t
 *)
buf_±r
;

488 
˘x
->
À·
--;

489 
	`ADVANCE
(1);

491 
	`APPEND
(
buf_±r
, 
˘x
->
À·
);

492 
	`ADVANCE
(
˘x
->
À·
);

493 
˘x
->
À·
 = 0;

495 
	`NEXT_PHASE
(
˘x
);

500 if(
£l
) {

501 
	`ASN_DEBUG
("3selÖ=%p, wn=%d,Ü=%ld, g=%ld, size=%ld",

502 (*)
£l
->
¥ev
, sñ->
w™t_nuŒs
,

503 ()
£l
->
À·
, ()£l->
gŸ
, ()
size
);

504 if(
£l
->
¥ev
 || sñ->
w™t_nuŒs
 > 1 || sñ->
À·
 > 0) {

505 
	`RETURN
(
RC_WMORE
);

512 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT
) {

513 if(
°
->
size
) {

514 if(
°
->
bôs_unu£d
 < 0 || st->bits_unused > 7) {

515 
	`RETURN
(
RC_FAIL
);

518 
°
->
buf
[°->
size
-1] &0xf‡<< st->
bôs_unu£d
;

520 if(
°
->
bôs_unu£d
) {

521 
	`RETURN
(
RC_FAIL
);

526 
	`ASN_DEBUG
("Took %ld bytesÅoÉncode %s: [%s]:%ld",

527 ()
c⁄sumed_my£lf
, 
td
->
«me
,

528 (
ty≥_v¨ü¡
 =
ASN_OSUBV_STR
Ë? (*)
°
->
buf
 : "<data>",

529 ()
°
->
size
);

532 
	`RETURN
(
RC_OK
);

533 
	}
}

538 
a¢_íc_rvÆ_t


539 
	$OCTET_STRING_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

540 
èg_mode
, 
bî_év_èg_t
 
èg
,

541 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

542 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

543 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


544 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


545 : &
a¢_SPC_OCTET_STRING_•ecs
;

546 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

547 
a¢_OS_Subv¨ü¡
 
ty≥_v¨ü¡
 = 
•ecs
->
subv¨ü¡
;

548 
fix_œ°_byã
 = 0;

550 
	`ASN_DEBUG
("%s %sás OCTET STRING",

551 
cb
?"E°im©ög":"Encodög", 
td
->
«me
);

556 if(
ty≥_v¨ü¡
 !
ASN_OSUBV_ANY
 || 
èg_mode
 == 1) {

557 
î
.
ícoded
 = 
	`dî_wrôe_ègs
(
td
,

558 (
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT
Ë+ 
°
->
size
,

559 
èg_mode
, 
ty≥_v¨ü¡
 =
ASN_OSUBV_ANY
, 
èg
,

560 
cb
, 
≠p_key
);

561 if(
î
.
ícoded
 == -1) {

562 
î
.
Áûed_ty≥
 = 
td
;

563 
î
.
°ru˘uª_±r
 = 
•å
;

564  
î
;

568 
	`as£π
(
ty≥_v¨ü¡
 !
ASN_OSUBV_ANY
 || 
èg_mode
 != -1);

569 
î
.
ícoded
 = 0;

572 if(!
cb
) {

573 
î
.
ícoded
 +(
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT
Ë+ 
°
->
size
;

574 
	`ASN__ENCODED_OK
(
î
);

580 if(
ty≥_v¨ü¡
 =
ASN_OSUBV_BIT
) {

581 
uöt8_t
 
b
 = 
°
->
bôs_unu£d
 & 0x07;

582 if(
b
 && 
°
->
size
Ë
fix_œ°_byã
 = 1;

583 
	`ASN__CALLBACK
(&
b
, 1);

587 
	`ASN__CALLBACK
(
°
->
buf
, st->
size
 - 
fix_œ°_byã
);

590 if(
fix_œ°_byã
) {

591 
uöt8_t
 
b
 = 
°
->
buf
[°->
size
-1] & (0xf‡<< st->
bôs_unu£d
);

592 
	`ASN__CALLBACK
(&
b
, 1);

595 
	`ASN__ENCODED_OK
(
î
);

596 
cb_Áûed
:

597 
ASN__ENCODE_FAILED
;

598 
	}
}

600 
a¢_íc_rvÆ_t


601 
	$OCTET_STRING_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

602 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

603 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

604 c⁄° * c⁄° 
h2c
 = "0123456789ABCDEF";

605 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

606 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

607 
s¸©ch
[16 * 3 + 4];

608 *
p
 = 
s¸©ch
;

609 
uöt8_t
 *
buf
;

610 
uöt8_t
 *
íd
;

611 
size_t
 
i
;

613 if(!
°
 || (!°->
buf
 && st->
size
))

614 
ASN__ENCODE_FAILED
;

616 
î
.
ícoded
 = 0;

621 
buf
 = 
°
->buf;

622 
íd
 = 
buf
 + 
°
->
size
;

623 if(
Êags
 & 
XER_F_CANONICAL
) {

624 *
s˚nd
 = 
s¸©ch
 + ((scratch) - 2);

625 ; 
buf
 < 
íd
; buf++) {

626 if(
p
 >
s˚nd
) {

627 
	`ASN__CALLBACK
(
s¸©ch
, 
p
 - scratch);

628 
p
 = 
s¸©ch
;

630 *
p
++ = 
h2c
[(*
buf
 >> 4) & 0x0F];

631 *
p
++ = 
h2c
[*
buf
 & 0x0F];

634 
	`ASN__CALLBACK
(
s¸©ch
, 
p
-scratch);

636 
i
 = 0; 
buf
 < 
íd
; buf++, i++) {

637 if(!(
i
 % 16Ë&& (ò|| 
°
->
size
 > 16)) {

638 
	`ASN__CALLBACK
(
s¸©ch
, 
p
-scratch);

639 
p
 = 
s¸©ch
;

640 
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

642 *
p
++ = 
h2c
[(*
buf
 >> 4) & 0x0F];

643 *
p
++ = 
h2c
[*
buf
 & 0x0F];

644 *
p
++ = 0x20;

646 if(
p
 - 
s¸©ch
) {

647 
p
--;

648 
	`ASN__CALLBACK
(
s¸©ch
, 
p
-scratch);

649 if(
°
->
size
 > 16)

650 
	`ASN__TEXT_INDENT
(1, 
ûevñ
-1);

654 
	`ASN__ENCODED_OK
(
î
);

655 
cb_Áûed
:

656 
ASN__ENCODE_FAILED
;

657 
	}
}

659 c⁄° 
	sOCTET_STRING__xî_esˇ≥_èbÀ_s
 {

660 c⁄° *
	m°rög
;

661 
	msize
;

662 } 
	gOCTET_STRING__xî_esˇ≥_èbÀ
[] = {

663 
	#OSXET
(
s
Ë{ s, (sË- 1 }

	)

664 
OSXET
("\074\156\165\154\057\076"),

665 
OSXET
("\074\163\157\150\057\076"),

666 
OSXET
("\074\163\164\170\057\076"),

667 
OSXET
("\074\145\164\170\057\076"),

668 
OSXET
("\074\145\157\164\057\076"),

669 
OSXET
("\074\145\156\161\057\076"),

670 
OSXET
("\074\141\143\153\057\076"),

671 
OSXET
("\074\142\145\154\057\076"),

672 
OSXET
("\074\142\163\057\076"),

673 
OSXET
("\011"),

674 
OSXET
("\012"),

675 
OSXET
("\074\166\164\057\076"),

676 
OSXET
("\074\146\146\057\076"),

677 
OSXET
("\015"),

678 
OSXET
("\074\163\157\057\076"),

679 
OSXET
("\074\163\151\057\076"),

680 
OSXET
("\074\144\154\145\057\076"),

681 
OSXET
("\074\144\143\061\057\076"),

682 
OSXET
("\074\144\143\062\057\076"),

683 
OSXET
("\074\144\143\063\057\076"),

684 
OSXET
("\074\144\143\064\057\076"),

685 
OSXET
("\074\156\141\153\057\076"),

686 
OSXET
("\074\163\171\156\057\076"),

687 
OSXET
("\074\145\164\142\057\076"),

688 
OSXET
("\074\143\141\156\057\076"),

689 
OSXET
("\074\145\155\057\076"),

690 
OSXET
("\074\163\165\142\057\076"),

691 
OSXET
("\074\145\163\143\057\076"),

692 
OSXET
("\074\151\163\064\057\076"),

693 
OSXET
("\074\151\163\063\057\076"),

694 
OSXET
("\074\151\163\062\057\076"),

695 
OSXET
("\074\151\163\061\057\076"),

702 
OSXET
("\046\141\155\160\073"),

707 
OSXET
("\046\154\164\073"),

709 
OSXET
("\046\147\164\073"),

713 
	$OS__check_esˇ≥d_c⁄åﬁ_ch¨
(c⁄° *
buf
, 
size
) {

714 
size_t
 
i
;

721 
i
 = 0; i < 32 ; i++) {

722 c⁄° 
OCTET_STRING__xî_esˇ≥_èbÀ_s
 *
ñ
;

723 
ñ
 = &
OCTET_STRING__xî_esˇ≥_èbÀ
[
i
];

724 if(
ñ
->
size
 =sizê&& 
	`memcmp
(
buf
,Él->
°rög
, size) == 0)

725  
i
;

728 
	}
}

731 
	$OCTET_STRING__h™dÀ_c⁄åﬁ_ch¨s
(*
°ru˘_±r
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

737 
c⁄åﬁ_ch¨
 = 
	`OS__check_esˇ≥d_c⁄åﬁ_ch¨
(
chunk_buf
,
chunk_size
);

738 if(
c⁄åﬁ_ch¨
 >= 0) {

739 
OCTET_STRING_t
 *
°
 = (OCTET_STRING_à*)
°ru˘_±r
;

740 *
p
 = 
	`REALLOC
(
°
->
buf
, st->
size
 + 2);

741 if(
p
) {

742 
°
->
buf
 = (
uöt8_t
 *)
p
;

743 
°
->
buf
[°->
size
++] = 
c⁄åﬁ_ch¨
;

744 
°
->
buf
[°->
size
] = '\0';

750 
	}
}

752 
a¢_íc_rvÆ_t


753 
	$OCTET_STRING_ícode_xî_utf8
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

754 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

755 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

756 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

757 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

758 
uöt8_t
 *
buf
, *
íd
;

759 
uöt8_t
 *
ss
;

760 
ssize_t
 
ícoded_Àn
 = 0;

762 ()
ûevñ
;

763 ()
Êags
;

765 if(!
°
 || (!°->
buf
 && st->
size
))

766 
ASN__ENCODE_FAILED
;

768 
buf
 = 
°
->buf;

769 
íd
 = 
buf
 + 
°
->
size
;

770 
ss
 = 
buf
; bu‡< 
íd
; buf++) {

771 
ch
 = *
buf
;

772 
s_Àn
;

777 if(
ch
 < (
OCTET_STRING__xî_esˇ≥_èbÀ
)

778 /(
OCTET_STRING__xî_esˇ≥_èbÀ
[0])

779 && (
s_Àn
 = 
OCTET_STRING__xî_esˇ≥_èbÀ
[
ch
].
size
)) {

780 if(((
buf
 - 
ss
Ë&& 
	`cb
(ss, bu‡- ss, 
≠p_key
) < 0)

781 || 
	`cb
(
OCTET_STRING__xî_esˇ≥_èbÀ
[
ch
].
°rög
, 
s_Àn
,

782 
≠p_key
) < 0)

783 
ASN__ENCODE_FAILED
;

784 
ícoded_Àn
 +(
buf
 - 
ss
Ë+ 
s_Àn
;

785 
ss
 = 
buf
 + 1;

789 
ícoded_Àn
 +(
buf
 - 
ss
);

790 if((
buf
 - 
ss
Ë&& 
	`cb
(ss, bu‡- ss, 
≠p_key
) < 0)

791 
ASN__ENCODE_FAILED
;

793 
î
.
ícoded
 = 
ícoded_Àn
;

794 
	`ASN__ENCODED_OK
(
î
);

795 
	}
}

800 
ssize_t
 
	$OCTET_STRING__c⁄vît_hexadecimÆ
(*
•å
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
, 
have_m‹e
) {

801 
OCTET_STRING_t
 *
°
 = (OCTET_STRING_à*)
•å
;

802 c⁄° *
chunk_°›
 = (c⁄° *)
chunk_buf
;

803 c⁄° *
p
 = 
chunk_°›
;

804 c⁄° *
≥nd
 = 
p
 + 
chunk_size
;

805 
˛v
 = 0;

806 
hÆf
 = 0;

807 
uöt8_t
 *
buf
;

810 
size_t
 
√w_size
 = 
°
->
size
 + (
chunk_size
 + 1) / 2;

811 *
≈å
 = 
	`REALLOC
(
°
->
buf
, 
√w_size
 + 1);

812 if(!
≈å
)  -1;

813 
°
->
buf
 = (
uöt8_t
 *)
≈å
;

814 
buf
 = 
°
->bu‡+ st->
size
;

821 ; 
p
 < 
≥nd
;Ö++) {

822 
ch
 = *(c⁄° *)
p
;

823 
ch
) {

830 
˛v
 = (˛v << 4Ë+ (
ch
 - 0x30);

834 
˛v
 = (˛v << 4Ë+ (
ch
 - 0x41 + 10);

838 
˛v
 = (˛v << 4Ë+ (
ch
 - 0x61 + 10);

841 *
buf
 = 0;

844 if(
hÆf
++) {

845 
hÆf
 = 0;

846 *
buf
++ = 
˛v
;

847 
chunk_°›
 = 
p
 + 1;

854 if(
hÆf
) {

855 if(
have_m‹e
) {

860 *
buf
++ = 
˛v
 << 4;

861 
chunk_°›
 = 
p
;

864 
chunk_°›
 = 
p
;

867 
°
->
size
 = 
buf
 - st->buf;

868 
	`as£π
(
°
->
size
 <
√w_size
);

869 
°
->
buf
[°->
size
] = 0;

871  (
chunk_°›
 - (c⁄° *)
chunk_buf
);

872 
	}
}

877 
ssize_t
 
	$OCTET_STRING__c⁄vît_bö¨y
(*
•å
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
, 
have_m‹e
) {

878 
BIT_STRING_t
 *
°
 = (BIT_STRING_à*)
•å
;

879 c⁄° *
p
 = (c⁄° *)
chunk_buf
;

880 c⁄° *
≥nd
 = 
p
 + 
chunk_size
;

881 
bôs_unu£d
 = 
°
->bits_unused & 0x7;

882 
uöt8_t
 *
buf
;

885 
size_t
 
√w_size
 = 
°
->
size
 + (
chunk_size
 + 7) / 8;

886 *
≈å
 = 
	`REALLOC
(
°
->
buf
, 
√w_size
 + 1);

887 if(!
≈å
)  -1;

888 
°
->
buf
 = (
uöt8_t
 *)
≈å
;

889 
buf
 = 
°
->bu‡+ st->
size
;

891 ()
have_m‹e
;

893 if(
bôs_unu£d
 == 0)

894 
bôs_unu£d
 = 8;

895 if(
°
->
size
)

896 
buf
--;

901 ; 
p
 < 
≥nd
;Ö++) {

902 
ch
 = *(c⁄° *)
p
;

903 
ch
) {

910 if(
bôs_unu£d
-- <= 0) {

911 *++
buf
 = 0;

912 
bôs_unu£d
 = 7;

914 *
buf
 |(
ch
&1Ë<< 
bôs_unu£d
;

917 
°
->
bôs_unu£d
 = bits_unused;

922 if(
bôs_unu£d
 == 8) {

923 
°
->
size
 = 
buf
 - st->buf;

924 
°
->
bôs_unu£d
 = 0;

926 
°
->
size
 = 
buf
 - st->buf + 1;

927 
°
->
bôs_unu£d
 = bits_unused;

930 
	`as£π
(
°
->
size
 <
√w_size
);

931 
°
->
buf
[°->
size
] = 0;

933  
chunk_size
;

934 
	}
}

940 
	$OS__°π€¡
(
ba£
, c⁄° *
buf
, c⁄° *
íd
, 
öt32_t
 *
ªt_vÆue
) {

941 c⁄° 
öt32_t
 
œ°_unicode_codïoöt
 = 0x10ffff;

942 
öt32_t
 
vÆ
 = 0;

943 c⁄° *
p
;

945 
p
 = 
buf
;Ö < 
íd
;Ö++) {

946 
ch
 = *
p
;

948 
ch
) {

951 
vÆ
 = vÆ * 
ba£
 + (
ch
 - 0x30);

955 
vÆ
 = vÆ * 
ba£
 + (
ch
 - 0x41 + 10);

959 
vÆ
 = vÆ * 
ba£
 + (
ch
 - 0x61 + 10);

962 *
ªt_vÆue
 = 
vÆ
;

963  (
p
 - 
buf
) + 1;

969 if(
vÆ
 > 
œ°_unicode_codïoöt
) {

974 *
ªt_vÆue
 = -1;

975  (
p
 - 
buf
);

976 
	}
}

981 
ssize_t


982 
	$OCTET_STRING__c⁄vît_íåefs
(*
•å
, c⁄° *
chunk_buf
,

983 
size_t
 
chunk_size
, 
have_m‹e
) {

984 
OCTET_STRING_t
 *
°
 = (OCTET_STRING_à*)
•å
;

985 c⁄° *
p
 = (c⁄° *)
chunk_buf
;

986 c⁄° *
≥nd
 = 
p
 + 
chunk_size
;

987 
uöt8_t
 *
buf
;

990 
size_t
 
√w_size
 = 
°
->
size
 + 
chunk_size
;

991 *
≈å
 = 
	`REALLOC
(
°
->
buf
, 
√w_size
 + 1);

992 if(!
≈å
)  -1;

993 
°
->
buf
 = (
uöt8_t
 *)
≈å
;

994 
buf
 = 
°
->bu‡+ st->
size
;

999 ; 
p
 < 
≥nd
;Ö++) {

1000 
ch
 = *(c⁄° *)
p
;

1001 
Àn
;

1003 if(
ch
 != 0x26 ) {

1004 *
buf
++ = 
ch
;

1011 
Àn
 = 
chunk_size
 - (
p
 - (c⁄° *)
chunk_buf
);

1012 if(
Àn
 =1 ) 
w™t_m‹e
;

1013 if(
p
[1] == 0x23 ) {

1014 c⁄° *
pvÆ
;

1015 
öt32_t
 
vÆ
 = 0;

1016 
ba£
;

1018 if(
Àn
 =2 ) 
w™t_m‹e
;

1019 if(
p
[2] == 0x78 )

1020 
pvÆ
 = 
p
 + 3, 
ba£
 = 16;

1022 
pvÆ
 = 
p
 + 2, 
ba£
 = 10;

1023 
Àn
 = 
	`OS__°π€¡
(
ba£
, 
pvÆ
, 
p
 +Üí, &
vÆ
);

1024 if(
Àn
 == -1) {

1026 *
buf
++ = 
ch
;

1029 if(!
Àn
 || 
pvÆ
[Àn-1] !0x3bË
w™t_m‹e
;

1030 
	`as£π
(
vÆ
 > 0);

1031 
p
 +(
pvÆ
 -ÖË+ 
Àn
 - 1;

1033 if(
vÆ
 < 0x80) {

1034 *
buf
++ = ()
vÆ
;

1035 } if(
vÆ
 < 0x800) {

1036 *
buf
++ = 0xc0 | ((
vÆ
 >> 6));

1037 *
buf
++ = 0x80 | ((
vÆ
 & 0x3f));

1038 } if(
vÆ
 < 0x10000) {

1039 *
buf
++ = 0xe0 | ((
vÆ
 >> 12));

1040 *
buf
++ = 0x80 | ((
vÆ
 >> 6) & 0x3f);

1041 *
buf
++ = 0x80 | ((
vÆ
 & 0x3f));

1042 } if(
vÆ
 < 0x200000) {

1043 *
buf
++ = 0xf0 | ((
vÆ
 >> 18));

1044 *
buf
++ = 0x80 | ((
vÆ
 >> 12) & 0x3f);

1045 *
buf
++ = 0x80 | ((
vÆ
 >> 6) & 0x3f);

1046 *
buf
++ = 0x80 | ((
vÆ
 & 0x3f));

1047 } if(
vÆ
 < 0x4000000) {

1048 *
buf
++ = 0xf8 | ((
vÆ
 >> 24));

1049 *
buf
++ = 0x80 | ((
vÆ
 >> 18) & 0x3f);

1050 *
buf
++ = 0x80 | ((
vÆ
 >> 12) & 0x3f);

1051 *
buf
++ = 0x80 | ((
vÆ
 >> 6) & 0x3f);

1052 *
buf
++ = 0x80 | ((
vÆ
 & 0x3f));

1054 *
buf
++ = 0xf¯| ((
vÆ
 >> 30) & 0x1);

1055 *
buf
++ = 0x80 | ((
vÆ
 >> 24) & 0x3f);

1056 *
buf
++ = 0x80 | ((
vÆ
 >> 18) & 0x3f);

1057 *
buf
++ = 0x80 | ((
vÆ
 >> 12) & 0x3f);

1058 *
buf
++ = 0x80 | ((
vÆ
 >> 6) & 0x3f);

1059 *
buf
++ = 0x80 | ((
vÆ
 & 0x3f));

1065 *
sc
 = (*)
	`memchr
(
p
, 0x3b, 
Àn
 > 5 ? 5 :Üen);

1066 if(!
sc
Ë
w™t_m‹e
;

1067 if((
sc
 - 
p
) == 4

1068 && 
p
[1] == 0x61

1069 && 
p
[2] == 0x6d

1070 && 
p
[3] == 0x70 ) {

1071 *
buf
++ = 0x26;

1072 
p
 = 
sc
;

1075 if((
sc
 - 
p
) == 3) {

1076 if(
p
[1] == 0x6c) {

1077 *
buf
 = 0x3c;

1078 } if(
p
[1] == 0x67) {

1079 *
buf
 = 0x3e;

1082 *
buf
++ = 
ch
;

1085 if(
p
[2] != 0x74) {

1087 *
buf
++ = 
ch
;

1090 
buf
++;

1091 
p
 = 
sc
;

1095 *
buf
++ = 
ch
;

1099 
w™t_m‹e
:

1100 if(
have_m‹e
) {

1105 *
buf
++ = 
ch
;

1108 
chunk_size
 = (
p
 - (c⁄° *)
chunk_buf
);

1113 
°
->
size
 = 
buf
 - st->buf;

1114 
	`as£π
(
°
->
size
 <
√w_size
);

1115 
°
->
buf
[°->
size
] = 0;

1117  
chunk_size
;

1118 
	}
}

1123 
a¢_dec_rvÆ_t


1124 
	$OCTET_STRING__decode_xî
(

1125 c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1126 **
•å
, c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
,

1127 (*
›t_u√x≥˘ed_èg_decodî
)(*
°ru˘_±r
, c⁄° *
chunk_buf
,

1128 
size_t
 
chunk_size
),

1129 
	$ssize_t
 (*
body_ª˚ivî
)(*
°ru˘_±r
, c⁄° *
chunk_buf
,

1130 
size_t
 
chunk_size
, 
have_m‹e
)) {

1131 
OCTET_STRING_t
 *
°
 = (OCTET_STRING_à*)*
•å
;

1132 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


1133 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


1134 : &
a¢_SPC_OCTET_STRING_•ecs
;

1135 c⁄° *
xml_èg
 = 
›t_m«me
 ? o±_m«mê: 
td
->xml_tag;

1136 
a¢_°ru˘_˘x_t
 *
˘x
;

1137 
a¢_dec_rvÆ_t
 
rvÆ
;

1138 
°_Æloˇãd
;

1143 if(!
°
) {

1144 
°
 = (
OCTET_STRING_t
 *)
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

1145 *
•å
 = (*)
°
;

1146 if(!
°
Ë
°a_Áûed
;

1147 
°_Æloˇãd
 = 1;

1149 
°_Æloˇãd
 = 0;

1151 if(!
°
->
buf
) {

1153 
°
->
buf
 = (
uöt8_t
 *)
	`CALLOC
(1, 1);

1154 if(!
°
->
buf
) {

1155 if(
°_Æloˇãd
) {

1156 *
•å
 = 0;

1157 
°b_Áûed
;

1159 
°a_Áûed
;

1165 
˘x
 = (
a¢_°ru˘_˘x_t
 *)(((*)*
•å
Ë+ 
•ecs
->
˘x_off£t
);

1167  
	`xî_decode_gíîÆ
(
›t_codec_˘x
, 
˘x
, *
•å
, 
xml_èg
,

1168 
buf_±r
, 
size
, 
›t_u√x≥˘ed_èg_decodî
, 
body_ª˚ivî
);

1170 
°b_Áûed
:

1171 
	`FREEMEM
(
°
);

1172 
°a_Áûed
:

1173 
rvÆ
.
code
 = 
RC_FAIL
;

1174 
rvÆ
.
c⁄sumed
 = 0;

1175  
rvÆ
;

1176 
	}
}

1181 
a¢_dec_rvÆ_t


1182 
	$OCTET_STRING_decode_xî_hex
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1183 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1184 c⁄° *
›t_m«me
, c⁄° *
buf_±r
,

1185 
size_t
 
size
) {

1186  
	`OCTET_STRING__decode_xî
(
›t_codec_˘x
, 
td
, 
•å
, 
›t_m«me
,

1187 
buf_±r
, 
size
, 0, 
OCTET_STRING__c⁄vît_hexadecimÆ
);

1188 
	}
}

1193 
a¢_dec_rvÆ_t


1194 
	$OCTET_STRING_decode_xî_bö¨y
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1195 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1196 c⁄° *
›t_m«me
, c⁄° *
buf_±r
,

1197 
size_t
 
size
) {

1198  
	`OCTET_STRING__decode_xî
(
›t_codec_˘x
, 
td
, 
•å
, 
›t_m«me
,

1199 
buf_±r
, 
size
, 0, 
OCTET_STRING__c⁄vît_bö¨y
);

1200 
	}
}

1205 
a¢_dec_rvÆ_t


1206 
	$OCTET_STRING_decode_xî_utf8
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1207 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1208 c⁄° *
›t_m«me
, c⁄° *
buf_±r
,

1209 
size_t
 
size
) {

1210  
	`OCTET_STRING__decode_xî
(
›t_codec_˘x
, 
td
, 
•å
, 
›t_m«me
,

1211 
buf_±r
, 
size
,

1212 
OCTET_STRING__h™dÀ_c⁄åﬁ_ch¨s
,

1213 
OCTET_STRING__c⁄vît_íåefs
);

1214 
	}
}

1216 #i‚de‡ 
ASN_DISABLE_PER_SUPPORT


1219 
	$OCTET_STRING_≥r_gë_ch¨a˘îs
(
a¢_≥r_d©a_t
 *
po
, 
uöt8_t
 *
buf
,

1220 
size_t
 
unôs
, 
bpc
, 
unô_bôs
,

1221 
lb
, 
ub
, c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
) {

1222 
uöt8_t
 *
íd
 = 
buf
 + 
unôs
 * 
bpc
;

1224 
	`ASN_DEBUG
("Expanding %d characters into (%ld..%ld):%d",

1225 ()
unôs
, 
lb
, 
ub
, 
unô_bôs
);

1228 if(()
ub
 <(()2 << (
unô_bôs
 - 1))) {

1230 
lb
 = 0;

1231 } if(
pc
 &&Öc->
code2vÆue
) {

1232 if(
unô_bôs
 > 16)

1236 ; 
buf
 < 
íd
; bu‡+
bpc
) {

1237 
vÆue
;

1238 
code
 = 
	`≥r_gë_„w_bôs
(
po
, 
unô_bôs
);

1239 if(
code
 < 0)  -1;

1240 
vÆue
 = 
pc
->
	`code2vÆue
(
code
);

1241 if(
vÆue
 < 0) {

1242 
	`ASN_DEBUG
("Code %d (0x%02x) is"

1244 
code
, code, 
lb
, 
ub
);

1247 
bpc
) {

1248 1: *
buf
 = 
vÆue
; ;

1249 2: 
buf
[0] = 
vÆue
 >> 8; buf[1] = value; ;

1250 4: 
buf
[0] = 
vÆue
 >> 24; buf[1] = value >> 16;

1251 
buf
[2] = 
vÆue
 >> 8; buf[3] = value; ;

1258 if(
lb
 =0 && (
unô_bôs
 =8 * 
bpc
)) {

1259  
	`≥r_gë_m™y_bôs
(
po
, 
buf
, 0, 
unô_bôs
 * 
unôs
);

1262 ; 
buf
 < 
íd
; bu‡+
bpc
) {

1263 
öt32_t
 
code
 = 
	`≥r_gë_„w_bôs
(
po
, 
unô_bôs
);

1264 
öt32_t
 
ch
 = 
code
 + 
lb
;

1265 if(
code
 < 0)  -1;

1266 if(
ch
 > 
ub
) {

1267 
	`ASN_DEBUG
("Code %d is out ofÑange (%ld..%ld)",

1268 
ch
, 
lb
, 
ub
);

1271 
bpc
) {

1272 1: *
buf
 = 
ch
; ;

1273 2: 
buf
[0] = 
ch
 >> 8; buf[1] = ch; ;

1274 4: 
buf
[0] = 
ch
 >> 24; buf[1] = ch >> 16;

1275 
buf
[2] = 
ch
 >> 8; buf[3] = ch; ;

1280 
	}
}

1283 
	$OCTET_STRING_≥r_put_ch¨a˘îs
(
a¢_≥r_ouç_t
 *
po
, c⁄° 
uöt8_t
 *
buf
,

1284 
size_t
 
unôs
, 
bpc
, 
unô_bôs
,

1285 
lb
, 
ub
, c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
) {

1286 c⁄° 
uöt8_t
 *
íd
 = 
buf
 + 
unôs
 * 
bpc
;

1288 
	`ASN_DEBUG
("Squeezing %d characters into (%ld..%ld):%d (%d bpc)",

1289 ()
unôs
, 
lb
, 
ub
, 
unô_bôs
, 
bpc
);

1292 if(()
ub
 <(()2 << (
unô_bôs
 - 1))) {

1294 
lb
 = 0;

1295 } if(
pc
 &&Öc->
vÆue2code
) {

1296 ; 
buf
 < 
íd
; bu‡+
bpc
) {

1297 
code
;

1298 
uöt32_t
 
vÆue
;

1299 
bpc
) {

1300 1: 
vÆue
 = *(c⁄° 
uöt8_t
 *)
buf
; ;

1301 2: 
vÆue
 = (
buf
[0] << 8) | buf[1]; ;

1302 4: 
vÆue
 = (
buf
[0] << 24) | (buf[1] << 16)

1303 | (
buf
[2] << 8) | buf[3]; ;

1306 
code
 = 
pc
->
	`vÆue2code
(
vÆue
);

1307 if(
code
 < 0) {

1308 
	`ASN_DEBUG
("Character %d (0x%02x) is"

1310 *
buf
, *buf, 
lb
, 
ub
);

1313 if(
	`≥r_put_„w_bôs
(
po
, 
code
, 
unô_bôs
))

1319 if(
lb
 =0 && (
unô_bôs
 =8 * 
bpc
)) {

1320  
	`≥r_put_m™y_bôs
(
po
, 
buf
, 
unô_bôs
 * 
unôs
);

1323 
ub
 -
lb
; 
buf
 < 
íd
; bu‡+
bpc
) {

1324 
ch
;

1325 
uöt32_t
 
vÆue
;

1326 
bpc
) {

1328 
vÆue
 = *(c⁄° 
uöt8_t
 *)
buf
;

1331 
vÆue
 = (
buf
[0] << 8) | buf[1];

1334 
vÆue
 = (
buf
[0] << 24) | (buf[1] << 16) | (buf[2] << 8) | buf[3];

1339 
ch
 = 
vÆue
 - 
lb
;

1340 if(
ch
 < 0 || ch > 
ub
) {

1341 
	`ASN_DEBUG
("Ch¨a˘î %d (0x%02xËi†ouào‡øngê(%ld..%ld)", *
buf
,

1342 
vÆue
, 
lb
, 
ub
 +Üb);

1345 if(
	`≥r_put_„w_bôs
(
po
, 
ch
, 
unô_bôs
))  -1;

1349 
	}
}

1351 
a¢_≥r_c⁄°øöts_t
 
	ga¢_DEF_OCTET_STRING_c⁄°øöts
 = {

1352 { 
APC_CONSTRAINED
, 8, 8, 0, 255 },

1353 { 
APC_SEMI_CONSTRAINED
, -1, -1, 0, 0 },

1357 
a¢_dec_rvÆ_t


1358 
	$OCTET_STRING_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1359 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1360 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

1361 
a¢_≥r_d©a_t
 *
pd
) {

1362 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


1363 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


1364 : &
a¢_SPC_OCTET_STRING_•ecs
;

1365 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
 =

1366 
c⁄°øöts
 ? c⁄°øöt†: 
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

1367 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
cvÆ
;

1368 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
csiz
;

1369 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

1370 
OCTET_STRING_t
 *
°
 = (OCTET_STRING_à*)*
•å
;

1371 
ssize_t
 
c⁄sumed_my£lf
 = 0;

1372 
ª≥©
;

1374 
OS__BPC_CHAR
 = 1,

1375 
OS__BPC_U16
 = 2,

1376 
OS__BPC_U32
 = 4

1377 } 
bpc
;

1378 
unô_bôs
;

1379 
ˇn⁄iˇl_unô_bôs
;

1381 ()
›t_codec_˘x
;

1383 if(
pc
) {

1384 
cvÆ
 = &
pc
->
vÆue
;

1385 
csiz
 = &
pc
->
size
;

1387 
cvÆ
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
vÆue
;

1388 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1391 
•ecs
->
subv¨ü¡
) {

1393 
ASN_OSUBV_ANY
:

1394 
ASN_OSUBV_BIT
:

1395 
	`ASN_DEBUG
("Uƒecognized subv¨ü¡ %d", 
•ecs
->
subv¨ü¡
);

1396 
	`RETURN
(
RC_FAIL
);

1398 
ASN_OSUBV_STR
:

1399 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 8;

1400 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1401 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1402 
bpc
 = 
OS__BPC_CHAR
;

1404 
ASN_OSUBV_U16
:

1405 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 16;

1406 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1407 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1408 
bpc
 = 
OS__BPC_U16
;

1410 
ASN_OSUBV_U32
:

1411 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 32;

1412 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1413 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1414 
bpc
 = 
OS__BPC_U32
;

1421 if(!
°
) {

1422 
°
 = (
OCTET_STRING_t
 *)(*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

1423 if(!
°
Ë
	`RETURN
(
RC_FAIL
);

1426 
	`ASN_DEBUG
("PER Decoding %s size %ld .. %ld bits %d",

1427 
csiz
->
Êags
 & 
APC_EXTENSIBLE
 ? "extensible" : "non-extensible",

1428 
csiz
->
lowî_bound
, csiz->
uµî_bound
, csiz->
ef„˘ive_bôs
);

1430 if(
csiz
->
Êags
 & 
APC_EXTENSIBLE
) {

1431 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

1432 if(
öext
 < 0Ë
	`RETURN
(
RC_WMORE
);

1433 if(
öext
) {

1434 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1435 
unô_bôs
 = 
ˇn⁄iˇl_unô_bôs
;

1439 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

1440 
	`FREEMEM
(
°
->
buf
);

1441 if(
bpc
) {

1442 
°
->
size
 = 
csiz
->
uµî_bound
 * 
bpc
;

1444 
°
->
size
 = (
csiz
->
uµî_bound
 + 7) >> 3;

1446 
°
->
buf
 = (
uöt8_t
 *)
	`MALLOC
(°->
size
 + 1);

1447 if(!
°
->
buf
Ë{ st->
size
 = 0; 
	`RETURN
(
RC_FAIL
); }

1453 if(
csiz
->
ef„˘ive_bôs
 == 0) {

1454 
ªt
;

1455 if(
bpc
) {

1456 
	`ASN_DEBUG
("Encoding OCTET STRING size %ld",

1457 
csiz
->
uµî_bound
);

1458 
ªt
 = 
	`OCTET_STRING_≥r_gë_ch¨a˘îs
(
pd
, 
°
->
buf
,

1459 
csiz
->
uµî_bound
, 
bpc
, 
unô_bôs
,

1460 
cvÆ
->
lowî_bound
, cvÆ->
uµî_bound
, 
pc
);

1461 if(
ªt
 > 0Ë
	`RETURN
(
RC_FAIL
);

1463 
	`ASN_DEBUG
("Encoding BIT STRING size %ld",

1464 
csiz
->
uµî_bound
);

1465 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, 
°
->
buf
, 0,

1466 
unô_bôs
 * 
csiz
->
uµî_bound
);

1468 if(
ªt
 < 0Ë
	`RETURN
(
RC_WMORE
);

1469 
c⁄sumed_my£lf
 +
unô_bôs
 * 
csiz
->
uµî_bound
;

1470 
°
->
buf
[°->
size
] = 0;

1471 
	`RETURN
(
RC_OK
);

1474 
°
->
size
 = 0;

1476 
ssize_t
 
øw_Àn
;

1477 
ssize_t
 
Àn_byãs
;

1478 *
p
;

1479 
ªt
;

1482 
øw_Àn
 = 
	`u≥r_gë_Àngth
(
pd
, 
csiz
->
ef„˘ive_bôs
, csiz->
lowî_bound
,

1483 &
ª≥©
);

1484 if(
øw_Àn
 < 0Ë
	`RETURN
(
RC_WMORE
);

1485 if(
øw_Àn
 =0 && 
°
->
buf
) ;

1487 
	`ASN_DEBUG
("Got PERÜengthÉb %ld,Üen %ld, %s (%s)",

1488 ()
csiz
->
ef„˘ive_bôs
, ()
øw_Àn
,

1489 
ª≥©
 ? "ª≥©" : "⁄˚", 
td
->
«me
);

1490 
Àn_byãs
 = 
øw_Àn
 * 
bpc
;

1491 
p
 = 
	`REALLOC
(
°
->
buf
, st->
size
 + 
Àn_byãs
 + 1);

1492 if(!
p
Ë
	`RETURN
(
RC_FAIL
);

1493 
°
->
buf
 = (
uöt8_t
 *)
p
;

1495 
ªt
 = 
	`OCTET_STRING_≥r_gë_ch¨a˘îs
(
pd
, &
°
->
buf
[°->
size
], 
øw_Àn
,

1496 
bpc
, 
unô_bôs
, 
cvÆ
->
lowî_bound
,

1497 
cvÆ
->
uµî_bound
, 
pc
);

1498 if(
ªt
 > 0Ë
	`RETURN
(
RC_FAIL
);

1499 if(
ªt
 < 0Ë
	`RETURN
(
RC_WMORE
);

1500 
°
->
size
 +
Àn_byãs
;

1501 } 
ª≥©
);

1502 
°
->
buf
[°->
size
] = 0;

1504  
rvÆ
;

1505 
	}
}

1507 
a¢_íc_rvÆ_t


1508 
	$OCTET_STRING_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1509 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

1510 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

1511 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


1512 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


1513 : &
a¢_SPC_OCTET_STRING_•ecs
;

1514 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
 = 
c⁄°øöts
 ? constraints

1515 : 
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

1516 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
cvÆ
;

1517 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
csiz
;

1518 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

1519 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

1520 
öext
 = 0;

1521 
unô_bôs
;

1522 
ˇn⁄iˇl_unô_bôs
;

1523 
size_t
 
size_ö_unôs
;

1524 c⁄° 
uöt8_t
 *
buf
;

1525 
ªt
;

1527 
OS__BPC_CHAR
 = 1,

1528 
OS__BPC_U16
 = 2,

1529 
OS__BPC_U32
 = 4

1530 } 
bpc
;

1531 
˘_exãnsibÀ
;

1533 if(!
°
 || (!°->
buf
 && st->
size
))

1534 
ASN__ENCODE_FAILED
;

1536 if(
pc
) {

1537 
cvÆ
 = &
pc
->
vÆue
;

1538 
csiz
 = &
pc
->
size
;

1540 
cvÆ
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
vÆue
;

1541 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1543 
˘_exãnsibÀ
 = 
csiz
->
Êags
 & 
APC_EXTENSIBLE
;

1545 
•ecs
->
subv¨ü¡
) {

1547 
ASN_OSUBV_ANY
:

1548 
ASN_OSUBV_BIT
:

1549 
ASN__ENCODE_FAILED
;

1550 
ASN_OSUBV_STR
:

1551 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 8;

1552 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1553 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1554 
bpc
 = 
OS__BPC_CHAR
;

1555 
size_ö_unôs
 = 
°
->
size
;

1557 
ASN_OSUBV_U16
:

1558 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 16;

1559 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1560 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1561 
bpc
 = 
OS__BPC_U16
;

1562 
size_ö_unôs
 = 
°
->
size
 >> 1;

1563 if(
°
->
size
 & 1) {

1564 
	`ASN_DEBUG
("%†°rög sizêi†nŸ modulÿ2", 
td
->
«me
);

1565 
ASN__ENCODE_FAILED
;

1568 
ASN_OSUBV_U32
:

1569 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 32;

1570 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1571 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1572 
bpc
 = 
OS__BPC_U32
;

1573 
size_ö_unôs
 = 
°
->
size
 >> 2;

1574 if(
°
->
size
 & 3) {

1575 
	`ASN_DEBUG
("%†°rög sizêi†nŸ modulÿ4", 
td
->
«me
);

1576 
ASN__ENCODE_FAILED
;

1581 
	`ASN_DEBUG
("Encodög %†ötÿ%" 
ASN_PRI_SIZE
 " units of %d bits"

1583 
td
->
«me
, 
size_ö_unôs
, 
unô_bôs
,

1584 
csiz
->
lowî_bound
, csiz->
uµî_bound
,

1585 
csiz
->
ef„˘ive_bôs
, 
˘_exãnsibÀ
 ? " EXT" : "");

1589 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

1590 if((
ssize_t
)
size_ö_unôs
 < 
csiz
->
lowî_bound


1591 || (
ssize_t
)
size_ö_unôs
 > 
csiz
->
uµî_bound
) {

1592 if(
˘_exãnsibÀ
) {

1593 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1594 
unô_bôs
 = 
ˇn⁄iˇl_unô_bôs
;

1595 
öext
 = 1;

1597 
ASN__ENCODE_FAILED
;

1601 
öext
 = 0;

1604 if(
˘_exãnsibÀ
) {

1606 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

1607 
ASN__ENCODE_FAILED
;

1610 if(
csiz
->
ef„˘ive_bôs
 >0 && !
öext
) {

1611 
	`ASN_DEBUG
("Encodög %" 
ASN_PRI_SIZE
 " byã†(%ld),Üígth i¿%d bôs", 
°
->
size
,

1612 
size_ö_unôs
 - 
csiz
->
lowî_bound
, csiz->
ef„˘ive_bôs
);

1613 
ªt
 = 
	`≥r_put_„w_bôs
(
po
, 
size_ö_unôs
 - 
csiz
->
lowî_bound
,

1614 
csiz
->
ef„˘ive_bôs
);

1615 if(
ªt
Ë
ASN__ENCODE_FAILED
;

1616 
ªt
 = 
	`OCTET_STRING_≥r_put_ch¨a˘îs
(
po
, 
°
->
buf
, 
size_ö_unôs
, 
bpc
,

1617 
unô_bôs
, 
cvÆ
->
lowî_bound
,

1618 
cvÆ
->
uµî_bound
, 
pc
);

1619 if(
ªt
Ë
ASN__ENCODE_FAILED
;

1620 
	`ASN__ENCODED_OK
(
î
);

1623 
	`ASN_DEBUG
("Encodög %" 
ASN_PRI_SIZE
 " byãs", 
°
->
size
);

1625 
buf
 = 
°
->buf;

1626 
	`ASN_DEBUG
("Encodög %" 
ASN_PRI_SIZE
 " i¿unôs", 
size_ö_unôs
);

1628 
√ed_eom
 = 0;

1629 
ssize_t
 
may_ßve
 = 
	`u≥r_put_Àngth
(
po
, 
size_ö_unôs
, &
√ed_eom
);

1630 if(
may_ßve
 < 0Ë
ASN__ENCODE_FAILED
;

1632 
	`ASN_DEBUG
("Encodög %" 
ASN_PRI_SSIZE
 " o‡%" 
ASN_PRI_SIZE
 "%s", 
may_ßve
, 
size_ö_unôs
,

1633 
√ed_eom
 ? ",+EOM" : "");

1635 
ªt
 = 
	`OCTET_STRING_≥r_put_ch¨a˘îs
(
po
, 
buf
, 
may_ßve
, 
bpc
, 
unô_bôs
,

1636 
cvÆ
->
lowî_bound
,

1637 
cvÆ
->
uµî_bound
, 
pc
);

1638 if(
ªt
Ë
ASN__ENCODE_FAILED
;

1640 
buf
 +
may_ßve
 * 
bpc
;

1641 
size_ö_unôs
 -
may_ßve
;

1642 
	`as£π
(!(
may_ßve
 & 0x07Ë|| !
size_ö_unôs
);

1643 if(
√ed_eom
 && 
	`u≥r_put_Àngth
(
po
, 0, 0))

1644 
ASN__ENCODE_FAILED
;

1645 } 
size_ö_unôs
);

1647 
	`ASN__ENCODED_OK
(
î
);

1648 
	}
}

1650 
a¢_dec_rvÆ_t


1651 
	$OCTET_STRING_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1652 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1653 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

1654 **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

1656 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


1657 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


1658 : &
a¢_SPC_OCTET_STRING_•ecs
;

1659 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
 = 
c⁄°øöts
 ? constraints

1660 : 
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

1661 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
cvÆ
;

1662 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
csiz
;

1663 
a¢_dec_rvÆ_t
 
rvÆ
 = { 
RC_OK
, 0 };

1664 
BIT_STRING_t
 *
°
 = (BIT_STRING_à*)*
•å
;

1665 
ssize_t
 
c⁄sumed_my£lf
 = 0;

1666 
ª≥©
;

1668 
OS__BPC_BIT
 = 0,

1669 
OS__BPC_CHAR
 = 1,

1670 
OS__BPC_U16
 = 2,

1671 
OS__BPC_U32
 = 4

1672 } 
bpc
;

1673 
unô_bôs
;

1674 
ˇn⁄iˇl_unô_bôs
;

1676 ()
›t_codec_˘x
;

1678 if(
pc
) {

1679 
cvÆ
 = &
pc
->
vÆue
;

1680 
csiz
 = &
pc
->
size
;

1682 
cvÆ
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
vÆue
;

1683 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1686 
•ecs
->
subv¨ü¡
) {

1692 
ASN_OSUBV_BIT
:

1693 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 1;

1694 
bpc
 = 
OS__BPC_BIT
;

1696 
ASN_OSUBV_ANY
:

1697 
ASN_OSUBV_STR
:

1698 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 8;

1702 
bpc
 = 
OS__BPC_CHAR
;

1704 
ASN_OSUBV_U16
:

1705 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 16;

1706 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1707 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1708 
bpc
 = 
OS__BPC_U16
;

1710 
ASN_OSUBV_U32
:

1711 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 32;

1712 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1713 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1714 
bpc
 = 
OS__BPC_U32
;

1721 if(!
°
) {

1722 
°
 = (
BIT_STRING_t
 *)(*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

1723 if(!
°
Ë
	`RETURN
(
RC_FAIL
);

1726 
	`ASN_DEBUG
("PER Decoding %s size %ld .. %ld bits %d",

1727 
csiz
->
Êags
 & 
APC_EXTENSIBLE
 ? "extensible" : "non-extensible",

1728 
csiz
->
lowî_bound
, csiz->
uµî_bound
, csiz->
ef„˘ive_bôs
);

1730 if(
csiz
->
Êags
 & 
APC_EXTENSIBLE
) {

1731 
öext
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

1732 if(
öext
 < 0Ë
	`RETURN
(
RC_WMORE
);

1733 if(
öext
) {

1734 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1735 
cvÆ
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
vÆue
;

1736 
unô_bôs
 = 
ˇn⁄iˇl_unô_bôs
;

1740 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

1741 
	`FREEMEM
(
°
->
buf
);

1742 if(
bpc
) {

1743 
°
->
size
 = 
csiz
->
uµî_bound
 * 
bpc
;

1745 
°
->
size
 = (
csiz
->
uµî_bound
 + 7) >> 3;

1747 
°
->
buf
 = (
uöt8_t
 *)
	`MALLOC
(°->
size
 + 1);

1748 if(!
°
->
buf
Ë{ st->
size
 = 0; 
	`RETURN
(
RC_FAIL
); }

1754 if(
csiz
->
ef„˘ive_bôs
 == 0) {

1755 
ªt
;

1756 i‡(
°
->
size
 > 2) {

1757 i‡(
	`≠î_gë_Æign
(
pd
) < 0)

1758 
	`RETURN
(
RC_FAIL
);

1760 if(
bpc
) {

1761 
	`ASN_DEBUG
("Decoding OCTET STRING size %ld",

1762 
csiz
->
uµî_bound
);

1763 
ªt
 = 
	`OCTET_STRING_≥r_gë_ch¨a˘îs
(
pd
, 
°
->
buf
,

1764 
csiz
->
uµî_bound
, 
bpc
, 
unô_bôs
,

1765 
cvÆ
->
lowî_bound
, cvÆ->
uµî_bound
, 
pc
);

1766 if(
ªt
 > 0Ë
	`RETURN
(
RC_FAIL
);

1768 
	`ASN_DEBUG
("Decoding BIT STRING size %ld",

1769 
csiz
->
uµî_bound
);

1770 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, 
°
->
buf
, 0,

1771 
unô_bôs
 * 
csiz
->
uµî_bound
);

1773 if(
ªt
 < 0Ë
	`RETURN
(
RC_WMORE
);

1774 
c⁄sumed_my£lf
 +
unô_bôs
 * 
csiz
->
uµî_bound
;

1775 
°
->
buf
[°->
size
] = 0;

1776 if(
bpc
 == 0) {

1777 
ubs
 = (
csiz
->
uµî_bound
 & 0x7);

1778 
°
->
bôs_unu£d
 = 
ubs
 ? 8 - ubs : 0;

1780 
	`RETURN
(
RC_OK
);

1783 
°
->
size
 = 0;

1785 
ssize_t
 
øw_Àn
;

1786 
ssize_t
 
Àn_byãs
;

1787 
ssize_t
 
Àn_bôs
;

1788 *
p
;

1789 
ªt
;

1792 i‡(
csiz
->
uµî_bound
 - csiz->
lowî_bound
 == 0)

1794 
øw_Àn
 = 
	`≠î_gë_Àngth
(
pd
, -1, 
csiz
->
ef„˘ive_bôs
, &
ª≥©
);

1796 
øw_Àn
 = 
	`≠î_gë_Àngth
(
pd
, 
csiz
->
uµî_bound
 - csiz->
lowî_bound
 + 1, csiz->
ef„˘ive_bôs
, &
ª≥©
);

1797 
ª≥©
 = 0;

1798 if(
øw_Àn
 < 0Ë
	`RETURN
(
RC_WMORE
);

1799 
øw_Àn
 +
csiz
->
lowî_bound
;

1801 
	`ASN_DEBUG
("Got PERÜengthÉb %ld,Üen %ld, %s (%s)",

1802 ()
csiz
->
ef„˘ive_bôs
, ()
øw_Àn
,

1803 
ª≥©
 ? "ª≥©" : "⁄˚", 
td
->
«me
);

1805 i‡(
øw_Àn
 > 2) {

1806 i‡(
	`≠î_gë_Æign
(
pd
) < 0)

1807 
	`RETURN
(
RC_FAIL
);

1810 if(
bpc
) {

1811 
Àn_byãs
 = 
øw_Àn
 * 
bpc
;

1812 
Àn_bôs
 = 
Àn_byãs
 * 
unô_bôs
;

1814 
Àn_bôs
 = 
øw_Àn
;

1815 
Àn_byãs
 = (
Àn_bôs
 + 7) >> 3;

1816 if(
Àn_bôs
 & 0x7)

1817 
°
->
bôs_unu£d
 = 8 - (
Àn_bôs
 & 0x7);

1820 
p
 = 
	`REALLOC
(
°
->
buf
, st->
size
 + 
Àn_byãs
 + 1);

1821 if(!
p
Ë
	`RETURN
(
RC_FAIL
);

1822 
°
->
buf
 = (
uöt8_t
 *)
p
;

1824 if(
bpc
) {

1825 
ªt
 = 
	`OCTET_STRING_≥r_gë_ch¨a˘îs
(
pd
,

1826 &
°
->
buf
[°->
size
], 
øw_Àn
, 
bpc
, 
unô_bôs
,

1827 
cvÆ
->
lowî_bound
, cvÆ->
uµî_bound
, 
pc
);

1828 if(
ªt
 > 0Ë
	`RETURN
(
RC_FAIL
);

1830 
ªt
 = 
	`≥r_gë_m™y_bôs
(
pd
, &
°
->
buf
[°->
size
],

1831 0, 
Àn_bôs
);

1833 if(
ªt
 < 0Ë
	`RETURN
(
RC_WMORE
);

1834 
°
->
size
 +
Àn_byãs
;

1835 } 
ª≥©
);

1836 
°
->
buf
[°->
size
] = 0;

1838  
rvÆ
;

1839 
	}
}

1841 
a¢_íc_rvÆ_t


1842 
	$OCTET_STRING_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1843 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

1844 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

1846 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


1847 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


1848 : &
a¢_SPC_OCTET_STRING_•ecs
;

1849 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
pc
 = 
c⁄°øöts
 ? constraints

1850 : 
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
;

1851 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
cvÆ
;

1852 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
csiz
;

1853 c⁄° 
BIT_STRING_t
 *
°
 = (c⁄° BIT_STRING_à*)
•å
;

1854 
a¢_íc_rvÆ_t
 
î
 = { 0, 0, 0 };

1855 
öext
 = 0;

1856 
unô_bôs
;

1857 
ˇn⁄iˇl_unô_bôs
;

1858 
sizeöunôs
;

1859 c⁄° 
uöt8_t
 *
buf
;

1860 
ªt
;

1862 
OS__BPC_BIT
 = 0,

1863 
OS__BPC_CHAR
 = 1,

1864 
OS__BPC_U16
 = 2,

1865 
OS__BPC_U32
 = 4

1866 } 
bpc
;

1867 
˘_exãnsibÀ
;

1869 if(!
°
 || (!°->
buf
 && st->
size
))

1870 
ASN__ENCODE_FAILED
;

1872 if(
pc
) {

1873 
cvÆ
 = &
pc
->
vÆue
;

1874 
csiz
 = &
pc
->
size
;

1876 
cvÆ
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
vÆue
;

1877 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1879 
˘_exãnsibÀ
 = 
csiz
->
Êags
 & 
APC_EXTENSIBLE
;

1881 
•ecs
->
subv¨ü¡
) {

1886 
ASN_OSUBV_BIT
:

1887 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 1;

1888 
bpc
 = 
OS__BPC_BIT
;

1889 
sizeöunôs
 = 
°
->
size
 * 8 - (°->
bôs_unu£d
 & 0x07);

1890 
	`ASN_DEBUG
("BIT STRING of %d bytes",

1891 
sizeöunôs
);

1893 
ASN_OSUBV_ANY
:

1894 
ASN_OSUBV_STR
:

1895 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 8;

1899 
bpc
 = 
OS__BPC_CHAR
;

1900 
sizeöunôs
 = 
°
->
size
;

1902 
ASN_OSUBV_U16
:

1903 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 16;

1904 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1905 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1906 
bpc
 = 
OS__BPC_U16
;

1907 
sizeöunôs
 = 
°
->
size
 / 2;

1909 
ASN_OSUBV_U32
:

1910 
ˇn⁄iˇl_unô_bôs
 = 
unô_bôs
 = 32;

1911 if(
cvÆ
->
Êags
 & 
APC_CONSTRAINED
)

1912 
unô_bôs
 = 
cvÆ
->
ønge_bôs
;

1913 
bpc
 = 
OS__BPC_U32
;

1914 
sizeöunôs
 = 
°
->
size
 / 4;

1918 
	`ASN_DEBUG
("Encoding %s into %d units of %d bits"

1920 
td
->
«me
, 
sizeöunôs
, 
unô_bôs
,

1921 
csiz
->
lowî_bound
, csiz->
uµî_bound
,

1922 
csiz
->
ef„˘ive_bôs
, 
˘_exãnsibÀ
 ? " EXT" : "");

1926 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

1927 if(()
sizeöunôs
 < 
csiz
->
lowî_bound


1928 || ()
sizeöunôs
 > 
csiz
->
uµî_bound
) {

1929 if(
˘_exãnsibÀ
) {

1930 
cvÆ
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
vÆue
;

1931 
csiz
 = &
a¢_DEF_OCTET_STRING_c⁄°øöts
.
size
;

1932 
unô_bôs
 = 
ˇn⁄iˇl_unô_bôs
;

1933 
öext
 = 1;

1935 
ASN__ENCODE_FAILED
;

1938 
öext
 = 0;

1942 if(
˘_exãnsibÀ
) {

1944 if(
	`≥r_put_„w_bôs
(
po
, 
öext
, 1))

1945 
ASN__ENCODE_FAILED
;

1951 if(
csiz
->
ef„˘ive_bôs
 >= 0) {

1952 
	`ASN_DEBUG
("Encoding %lu bytes (%ld),Üength in %d bits",

1953 
°
->
size
, 
sizeöunôs
 - 
csiz
->
lowî_bound
,

1954 
csiz
->
ef„˘ive_bôs
);

1955 i‡(
csiz
->
ef„˘ive_bôs
 > 0) {

1956 
ªt
 = 
	`≠î_put_Àngth
(
po
, 
csiz
->
uµî_bound
 - csiz->
lowî_bound
 + 1, 
sizeöunôs
 - csiz->lower_bound);

1957 if(
ªt
Ë
ASN__ENCODE_FAILED
;

1961 i‡((
°
->
size
 > 2Ë|| (
csiz
->
lowî_bound
 !csiz->
uµî_bound
)) {

1962 i‡(
	`≠î_put_Æign
(
po
) < 0)

1963 
ASN__ENCODE_FAILED
;

1965 if(
bpc
) {

1966 
ªt
 = 
	`OCTET_STRING_≥r_put_ch¨a˘îs
(
po
, 
°
->
buf
,

1967 
sizeöunôs
, 
bpc
, 
unô_bôs
,

1968 
cvÆ
->
lowî_bound
, cvÆ->
uµî_bound
, 
pc
);

1970 
ªt
 = 
	`≥r_put_m™y_bôs
(
po
, 
°
->
buf
,

1971 
sizeöunôs
 * 
unô_bôs
);

1973 if(
ªt
Ë
ASN__ENCODE_FAILED
;

1974 
	`ASN__ENCODED_OK
(
î
);

1977 
	`ASN_DEBUG
("Encodög %lu byãs", 
°
->
size
);

1979 if(
sizeöunôs
 == 0) {

1980 if(
	`≠î_put_Àngth
(
po
, -1, 0))

1981 
ASN__ENCODE_FAILED
;

1982 
	`ASN__ENCODED_OK
(
î
);

1985 
buf
 = 
°
->buf;

1986 
sizeöunôs
) {

1987 
ssize_t
 
maySave
 = 
	`≠î_put_Àngth
(
po
, -1, 
sizeöunôs
);

1989 if(
maySave
 < 0Ë
ASN__ENCODE_FAILED
;

1991 
	`ASN_DEBUG
("Encoding %ld of %ld",

1992 ()
maySave
, ()
sizeöunôs
);

1994 if(
bpc
) {

1995 
ªt
 = 
	`OCTET_STRING_≥r_put_ch¨a˘îs
(
po
, 
buf
,

1996 
maySave
, 
bpc
, 
unô_bôs
,

1997 
cvÆ
->
lowî_bound
, cvÆ->
uµî_bound
, 
pc
);

1999 
ªt
 = 
	`≥r_put_m™y_bôs
(
po
, 
buf
, 
maySave
 * 
unô_bôs
);

2001 if(
ªt
Ë
ASN__ENCODE_FAILED
;

2003 if(
bpc
)

2004 
buf
 +
maySave
 * 
bpc
;

2006 
buf
 +
maySave
 >> 3;

2007 
sizeöunôs
 -
maySave
;

2008 
	`as£π
(!(
maySave
 & 0x07Ë|| !
sizeöunôs
);

2011 
	`ASN__ENCODED_OK
(
î
);

2012 
	}
}

2017 
	$OCTET_STRING_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

2018 
ûevñ
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

2019 c⁄° * c⁄° 
h2c
 = "0123456789ABCDEF";

2020 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

2021 
s¸©ch
[16 * 3 + 4];

2022 *
p
 = 
s¸©ch
;

2023 
uöt8_t
 *
buf
;

2024 
uöt8_t
 *
íd
;

2025 
size_t
 
i
;

2027 ()
td
;

2029 if(!
°
 || (!°->
buf
 && st->
size
))

2030  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

2035 
buf
 = 
°
->buf;

2036 
íd
 = 
buf
 + 
°
->
size
;

2037 
i
 = 0; 
buf
 < 
íd
; buf++, i++) {

2038 if(!(
i
 % 16Ë&& (ò|| 
°
->
size
 > 16)) {

2039 if(
	`cb
(
s¸©ch
, 
p
 - s¸©ch, 
≠p_key
) < 0)

2041 
	`_i_INDENT
(1);

2042 
p
 = 
s¸©ch
;

2044 *
p
++ = 
h2c
[(*
buf
 >> 4) & 0x0F];

2045 *
p
++ = 
h2c
[*
buf
 & 0x0F];

2046 *
p
++ = 0x20;

2049 if(
p
 > 
s¸©ch
) {

2050 
p
--;

2051 if(
	`cb
(
s¸©ch
, 
p
 - s¸©ch, 
≠p_key
) < 0)

2056 
	}
}

2059 
	$OCTET_STRING_¥öt_utf8
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

2060 
ûevñ
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

2061 *
≠p_key
) {

2062 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

2064 ()
td
;

2065 ()
ûevñ
;

2067 if(
°
 && (°->
buf
 || !°->
size
)) {

2068  (
	`cb
(
°
->
buf
, st->
size
, 
≠p_key
) < 0) ? -1 : 0;

2070  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

2072 
	}
}

2075 
	$OCTET_STRING_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

2076 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

2077 
OCTET_STRING_t
 *
°
 = (OCTET_STRING_à*)
•å
;

2078 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
;

2079 
a¢_°ru˘_˘x_t
 *
˘x
;

2080 
_°ack
 *
°ck
;

2082 if(!
td
 || !
°
)

2085 
•ecs
 = 
td
->
•ecifics


2086 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


2087 : &
a¢_SPC_OCTET_STRING_•ecs
;

2088 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

2090 
	`ASN_DEBUG
("Fªeög %†a†OCTET STRING", 
td
->
«me
);

2092 if(
°
->
buf
) {

2093 
	`FREEMEM
(
°
->
buf
);

2094 
°
->
buf
 = 0;

2100 
°ck
 = (
_°ack
 *)
˘x
->
±r
;

2101 if(
°ck
) {

2102 
°ck
->
èû
) {

2103 
_°ack_ñ
 *
£l
 = 
°ck
->
èû
;

2104 
°ck
->
èû
 = 
£l
->
¥ev
;

2105 
	`FREEMEM
(
£l
);

2107 
	`FREEMEM
(
°ck
);

2110 
mëhod
) {

2111 
ASFM_FREE_EVERYTHING
:

2112 
	`FREEMEM
(
•å
);

2114 
ASFM_FREE_UNDERLYING
:

2116 
ASFM_FREE_UNDERLYING_AND_RESET
:

2117 
	`mem£t
(
•å
, 0,

2118 
td
->
•ecifics


2119 ? ((c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)(
td
->
•ecifics
))

2120 ->
°ru˘_size


2121 : (
OCTET_STRING_t
));

2124 
	}
}

2130 
	$OCTET_STRING_‰omBuf
(
OCTET_STRING_t
 *
°
, c⁄° *
°r
, 
Àn
) {

2131 *
buf
;

2133 if(
°
 =0 || (
°r
 =0 && 
Àn
)) {

2134 
î∫o
 = 
EINVAL
;

2141 if(
°r
 =
NULL
) {

2142 
	`FREEMEM
(
°
->
buf
);

2143 
°
->
buf
 = 0;

2144 
°
->
size
 = 0;

2149 if(
Àn
 < 0)

2150 
Àn
 = 
	`°æí
(
°r
);

2153 
buf
 = 
	`MALLOC
(
Àn
 + 1);

2154 if(
buf
 =
NULL
)

2157 
	`mem˝y
(
buf
, 
°r
, 
Àn
);

2158 ((
uöt8_t
 *)
buf
)[
Àn
] = '\0';

2159 
	`FREEMEM
(
°
->
buf
);

2160 
°
->
buf
 = (
uöt8_t
 *)buf;

2161 
°
->
size
 = 
Àn
;

2164 
	}
}

2166 
OCTET_STRING_t
 *

2167 
	$OCTET_STRING_√w_‰omBuf
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
°r
,

2168 
Àn
) {

2169 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 =

2170 
td
->
•ecifics
 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)td->specifics

2171 : &
a¢_SPC_OCTET_STRING_•ecs
;

2172 
OCTET_STRING_t
 *
°
;

2174 
°
 = (
OCTET_STRING_t
 *)
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

2175 if(
°
 && 
°r
 && 
	`OCTET_STRING_‰omBuf
(°, så, 
Àn
)) {

2176 
	`FREEMEM
(
°
);

2177 
°
 = 
NULL
;

2180  
°
;

2181 
	}
}

2188 
	$OCTET_STRING_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

2189 c⁄° *
b±r
) {

2190 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics
;

2191 c⁄° 
OCTET_STRING_t
 *
a
 = 
≠å
;

2192 c⁄° 
OCTET_STRING_t
 *
b
 = 
b±r
;

2194 
	`as£π
(!
•ecs
 || s≥cs->
subv¨ü¡
 !
ASN_OSUBV_BIT
);

2196 if(
a
 && 
b
) {

2197 
size_t
 
comm⁄_¥efix_size
 = 
a
->
size
 <
b
->size ?á->size : b->size;

2198 
ªt
 = 
	`memcmp
(
a
->
buf
, 
b
->buf, 
comm⁄_¥efix_size
);

2199 if(
ªt
 == 0) {

2201 if(
a
->
size
 < 
b
->size) {

2203 } if(
a
->
size
 > 
b
->size) {

2209  
ªt
 < 0 ? -1 : 1;

2211 } if(!
a
 && !
b
) {

2213 } if(!
a
) {

2219 
	}
}

2224 
uöt32_t


2225 
	$OCTET_STRING__øndom_ch¨
(
lb
, 
ub
) {

2226 
	`as£π
(
lb
 <
ub
);

2227 
	`a¢_øndom_bëwìn
(0, 16)) {

2229 if(
lb
 < 
ub
) Üb + 1;

2232  
lb
;

2234 if(
lb
 < 
ub
)  ub - 1;

2237  
ub
;

2239  
	`a¢_øndom_bëwìn
(
lb
, 
ub
);

2241 
	}
}

2244 
size_t


2245 
	$OCTET_STRING_øndom_Àngth_c⁄°øöed
(

2246 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

2247 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
, 
size_t
 
max_Àngth
) {

2248 c⁄° 
Àngths
[] = {0, 1, 2, 3, 4, 8,

2251 
size_t
 
∫d_Àn
;

2254 
∫d_Àn
 = 
Àngths
[
	`a¢_øndom_bëwìn
(

2255 0, (
Àngths
) / (lengths[0]) - 1)];

2257 if(!
c⁄°øöts
 || !c⁄°øöts->
≥r_c⁄°øöts
)

2258 
c⁄°øöts
 = &
td
->
ícodög_c⁄°øöts
;

2259 if(
c⁄°øöts
->
≥r_c⁄°øöts
) {

2260 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
pc
 = &
c⁄°øöts
->
≥r_c⁄°øöts
->
size
;

2261 if(
pc
->
Êags
 & 
APC_CONSTRAINED
) {

2262 
sugge°ed_uµî_bound
 = 
pc
->
uµî_bound
 < (
ssize_t
)
max_Àngth


2263 ? 
pc
->
uµî_bound


2264 : (
ssize_t
)
max_Àngth
;

2265 if(
max_Àngth
 <(
size_t
)
pc
->
lowî_bound
) {

2266  
pc
->
lowî_bound
;

2268 if(
pc
->
Êags
 & 
APC_EXTENSIBLE
) {

2269 
	`a¢_øndom_bëwìn
(0, 5)) {

2271 if(
pc
->
lowî_bound
 > 0) {

2272 
∫d_Àn
 = 
pc
->
lowî_bound
 - 1;

2277 
∫d_Àn
 = 
pc
->
uµî_bound
 + 1;

2281 if(
∫d_Àn
 <
max_Àngth
) {

2286 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
pc
->
lowî_bound
,

2287 
sugge°ed_uµî_bound
);

2290 
∫d_Àn
 =

2291 
	`a¢_øndom_bëwìn
(
pc
->
lowî_bound
, 
sugge°ed_uµî_bound
);

2294 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(0, 
max_Àngth
);

2296 } if(
∫d_Àn
 > 
max_Àngth
) {

2297 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(0, 
max_Àngth
);

2300  
∫d_Àn
;

2301 
	}
}

2303 
a¢_øndom_fûl_ªsu…_t


2304 
	$OCTET_STRING_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

2305 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

2306 
size_t
 
max_Àngth
) {

2307 c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *
•ecs
 = 
td
->
•ecifics


2308 ? (c⁄° 
a¢_OCTET_STRING_•ecifics_t
 *)
td
->
•ecifics


2309 : &
a¢_SPC_OCTET_STRING_•ecs
;

2310 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

2311 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

2312 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

2313 
unô_byãs
 = 1;

2314 
˛b
 = 0;

2315 
cub
 = 255;

2316 
uöt8_t
 *
buf
;

2317 
uöt8_t
 *
bíd
;

2318 
uöt8_t
 *
b
;

2319 
size_t
 
∫d_Àn
;

2320 
OCTET_STRING_t
 *
°
;

2322 if(
max_Àngth
 =0 && !*
•å
Ë 
ªsu…_skù≥d
;

2324 
•ecs
->
subv¨ü¡
) {

2326 
ASN_OSUBV_ANY
:

2327  
ªsu…_Áûed
;

2328 
ASN_OSUBV_BIT
:

2330  
ªsu…_Áûed
;

2331 
ASN_OSUBV_STR
:

2332 
unô_byãs
 = 1;

2333 
˛b
 = 0;

2334 
cub
 = 255;

2336 
ASN_OSUBV_U16
:

2337 
unô_byãs
 = 2;

2338 
˛b
 = 0;

2339 
cub
 = 65535;

2341 
ASN_OSUBV_U32
:

2342 
unô_byãs
 = 4;

2343 
˛b
 = 0;

2344 
cub
 = 0x10FFFF;

2348 if(!
c⁄°øöts
 || !c⁄°øöts->
≥r_c⁄°øöts
)

2349 
c⁄°øöts
 = &
td
->
ícodög_c⁄°øöts
;

2350 if(
c⁄°øöts
->
≥r_c⁄°øöts
) {

2351 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
pc
 = &
c⁄°øöts
->
≥r_c⁄°øöts
->
vÆue
;

2352 if(
pc
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

2353 
˛b
 = 
pc
->
lowî_bound
;

2354 } if(
pc
->
Êags
 & 
APC_CONSTRAINED
) {

2355 
˛b
 = 
pc
->
lowî_bound
;

2356 
cub
 = 
pc
->
uµî_bound
;

2360 
∫d_Àn
 =

2361 
	`OCTET_STRING_øndom_Àngth_c⁄°øöed
(
td
, 
c⁄°øöts
, 
max_Àngth
);

2363 
buf
 = 
	`CALLOC
(
unô_byãs
, 
∫d_Àn
 + 1);

2364 if(!
buf
Ë 
ªsu…_Áûed
;

2366 
bíd
 = &
buf
[
unô_byãs
 * 
∫d_Àn
];

2368 
unô_byãs
) {

2370 
b
 = 
buf
; b < 
bíd
; b +
unô_byãs
) {

2371 *(
uöt8_t
 *)
b
 = 
	`OCTET_STRING__øndom_ch¨
(
˛b
, 
cub
);

2373 *(
uöt8_t
 *)
b
 = 0;

2376 
b
 = 
buf
; b < 
bíd
; b +
unô_byãs
) {

2377 
uöt32_t
 
code
 = 
	`OCTET_STRING__øndom_ch¨
(
˛b
, 
cub
);

2378 
b
[0] = 
code
 >> 8;

2379 
b
[1] = 
code
;

2381 *(
uöt16_t
 *)
b
 = 0;

2384 
b
 = 
buf
; b < 
bíd
; b +
unô_byãs
) {

2385 
uöt32_t
 
code
 = 
	`OCTET_STRING__øndom_ch¨
(
˛b
, 
cub
);

2386 
b
[0] = 
code
 >> 24;

2387 
b
[1] = 
code
 >> 16;

2388 
b
[2] = 
code
 >> 8;

2389 
b
[3] = 
code
;

2391 *(
uöt32_t
 *)
b
 = 0;

2395 if(*
•å
) {

2396 
°
 = *
•å
;

2397 
	`FREEMEM
(
°
->
buf
);

2399 
°
 = (
OCTET_STRING_t
 *)(*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

2400 if(!
°
) {

2401 
	`FREEMEM
(
buf
);

2402  
ªsu…_Áûed
;

2406 
°
->
buf
 = buf;

2407 
°
->
size
 = 
unô_byãs
 * 
∫d_Àn
;

2409 
ªsu…_ok
.
Àngth
 = 
°
->
size
;

2410  
ªsu…_ok
;

2411 
	}
}

	@OPEN_TYPE.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<OPEN_TYPE.h
>

7 
	~<c⁄°r_CHOICE.h
>

8 
	~<≥r_›íty≥.h
>

9 
	~<î∫o.h
>

11 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_OPEN_TYPE
 = {

12 
OPEN_TYPE_‰ì
,

13 
OPEN_TYPE_¥öt
,

14 
OPEN_TYPE_com∑ª
,

15 
OPEN_TYPE_decode_bî
,

16 
OPEN_TYPE_ícode_dî
,

17 
OPEN_TYPE_decode_xî
,

18 
OPEN_TYPE_ícode_xî
,

19 #ifde‡
ASN_DISABLE_OER_SUPPORT


22 
OPEN_TYPE_decode_€r
,

23 
OPEN_TYPE_ícode_€r
,

25 #ifde‡
ASN_DISABLE_PER_SUPPORT


28 
OPEN_TYPE_decode_u≥r
,

29 
OPEN_TYPE_ícode_u≥r
,

30 
OPEN_TYPE_decode_≠î
,

31 
OPEN_TYPE_ícode_≠î
,

37 #unde‡
ADVANCE


38 
	#ADVANCE
(
num_byãs
) \

40 
size_t
 
num
 = 
num_byãs
; \

41 
±r
 = ((c⁄° *ÌåË+ 
num
; \

42 
size
 -
num
; \

43 
c⁄sumed_my£lf
 +
num
; \

44 } 0)

	)

46 
a¢_dec_rvÆ_t


47 
	$OPEN_TYPE_bî_gë
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

48 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

49 c⁄° 
a¢_TYPE_membî_t
 *
ñm
, c⁄° *
±r
, 
size_t
 
size
) {

50 
size_t
 
c⁄sumed_my£lf
 = 0;

51 
a¢_ty≥_£À˘‹_ªsu…_t
 
£À˘ed
;

52 *
memb_±r
;

53 **
memb_±r2
;

54 *
ö√r_vÆue
;

55 
a¢_dec_rvÆ_t
 
rv
;

57 if(!(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
)) {

58 
ASN__DECODE_FAILED
;

61 if(!
ñm
->
ty≥_£À˘‹
) {

62 
	`ASN_DEBUG
("Type selector isÇot defined for Open Type %s->%s->%s",

63 
td
->
«me
, 
ñm
->«me,Élm->
ty≥
->name);

64 
ASN__DECODE_FAILED
;

67 
£À˘ed
 = 
ñm
->
	`ty≥_£À˘‹
(
td
, 
•å
);

68 if(!
£À˘ed
.
¥e£n˚_ödex
) {

69 
ASN__DECODE_FAILED
;

73 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

74 
memb_±r2
 = (**)((*)
•å
 + 
ñm
->
memb_off£t
);

76 
memb_±r
 = (*)
•å
 + 
ñm
->
memb_off£t
;

77 
memb_±r2
 = &
memb_±r
;

79 if(*
memb_±r2
 !
NULL
) {

81 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
, 0) != 0) {

82 
ASN__DECODE_FAILED
;

86 
ö√r_vÆue
 =

87 (*)*
memb_±r2


88 + 
ñm
->
ty≥
->
ñemíts
[
£À˘ed
.
¥e£n˚_ödex
 - 1].
memb_off£t
;

90 
	`ASN_DEBUG
("¥e£n˚ %d\n", 
£À˘ed
.
¥e£n˚_ödex
);

92 
rv
 = 
£À˘ed
.
ty≥_des¸ùt‹
->
›
->
	`bî_decodî
(

93 
›t_codec_˘x
, 
£À˘ed
.
ty≥_des¸ùt‹
, &
ö√r_vÆue
, 
±r
, 
size
,

94 
ñm
->
èg_mode
);

95 
	`ADVANCE
(
rv
.
c⁄sumed
);

96 
rv
.
c⁄sumed
 = 0;

97 
rv
.
code
) {

98 
RC_OK
:

99 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
,

100 
£À˘ed
.
¥e£n˚_ödex
)

102 
rv
.
code
 = 
RC_OK
;

103 
rv
.
c⁄sumed
 = 
c⁄sumed_my£lf
;

104  
rv
;

109 
RC_FAIL
:

110 
rv
.
c⁄sumed
 = 
c⁄sumed_my£lf
;

112 
RC_WMORE
:

116 if(*
memb_±r2
) {

117 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

118 
	`ASN_STRUCT_FREE
(*
£À˘ed
.
ty≥_des¸ùt‹
, 
ö√r_vÆue
);

119 *
memb_±r2
 = 
NULL
;

121 
	`ASN_STRUCT_RESET
(*
£À˘ed
.
ty≥_des¸ùt‹
,

122 
ö√r_vÆue
);

125  
rv
;

126 
	}
}

128 
a¢_dec_rvÆ_t


129 
	$OPEN_TYPE_xî_gë
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

130 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

131 c⁄° 
a¢_TYPE_membî_t
 *
ñm
, c⁄° *
±r
, 
size_t
 
size
) {

132 
size_t
 
c⁄sumed_my£lf
 = 0;

133 
a¢_ty≥_£À˘‹_ªsu…_t
 
£À˘ed
;

134 *
memb_±r
;

135 **
memb_±r2
;

136 *
ö√r_vÆue
;

137 
a¢_dec_rvÆ_t
 
rv
;

139 
xî_c⁄ãxt
 = 0;

140 
ssize_t
 
ch_size
;

141 
pxî_chunk_ty≥_e
 
ch_ty≥
;

143 if(!(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
)) {

144 
ASN__DECODE_FAILED
;

147 if(!
ñm
->
ty≥_£À˘‹
) {

148 
	`ASN_DEBUG
("Type selector isÇot defined for Open Type %s->%s->%s",

149 
td
->
«me
, 
ñm
->«me,Élm->
ty≥
->name);

150 
ASN__DECODE_FAILED
;

153 
£À˘ed
 = 
ñm
->
	`ty≥_£À˘‹
(
td
, 
•å
);

154 if(!
£À˘ed
.
¥e£n˚_ödex
) {

155 
ASN__DECODE_FAILED
;

159 
	`as£π
(
ñm
->
Êags
 =
ATF_OPEN_TYPE
);

160 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

161 
memb_±r2
 = (**)((*)
•å
 + 
ñm
->
memb_off£t
);

163 
memb_±r
 = (*)
•å
 + 
ñm
->
memb_off£t
;

164 
memb_±r2
 = &
memb_±r
;

166 if(*
memb_±r2
 !
NULL
) {

168 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
, 0)

170 
ASN__DECODE_FAILED
;

178 
ch_size
 = 
	`xî_√xt_tokí
(&
xî_c⁄ãxt
, 
±r
, 
size
, &
ch_ty≥
);

179 if(
ch_size
 < 0) {

180 
ASN__DECODE_FAILED
;

182 
ch_ty≥
) {

183 
PXER_WMORE
:

184 
ASN__DECODE_STARVED
;

185 
PXER_COMMENT
:

186 
PXER_TEXT
:

187 
	`ADVANCE
(
ch_size
);

189 
PXER_TAG
:

199 
	`xî_check_èg
(
±r
, 
ch_size
, 
ñm
->
«me
)) {

200 
XCT_OPENING
:

201 
	`ADVANCE
(
ch_size
);

203 
XCT_BROKEN
:

205 
ASN__DECODE_FAILED
;

208 
ö√r_vÆue
 =

209 (*)*
memb_±r2


210 + 
ñm
->
ty≥
->
ñemíts
[
£À˘ed
.
¥e£n˚_ödex
 - 1].
memb_off£t
;

212 
rv
 = 
£À˘ed
.
ty≥_des¸ùt‹
->
›
->
	`xî_decodî
(

213 
›t_codec_˘x
, 
£À˘ed
.
ty≥_des¸ùt‹
, &
ö√r_vÆue
, 
NULL
, 
±r
, 
size
);

214 
	`ADVANCE
(
rv
.
c⁄sumed
);

215 
rv
.
c⁄sumed
 = 0;

216 
rv
.
code
) {

217 
RC_OK
:

218 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
,

219 
£À˘ed
.
¥e£n˚_ödex
)

223 
rv
.
code
 = 
RC_FAIL
;

226 
RC_FAIL
:

228 
rv
.
c⁄sumed
 = 
c⁄sumed_my£lf
;

230 
RC_WMORE
:

235 if(*
memb_±r2
) {

236 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

237 
	`ASN_STRUCT_FREE
(*
£À˘ed
.
ty≥_des¸ùt‹
, 
ö√r_vÆue
);

238 *
memb_±r2
 = 
NULL
;

240 
	`ASN_STRUCT_RESET
(*
£À˘ed
.
ty≥_des¸ùt‹
,

241 
ö√r_vÆue
);

244  
rv
;

251 
ch_size
 = 
	`xî_√xt_tokí
(&
xî_c⁄ãxt
, 
±r
, 
size
, &
ch_ty≥
);

252 if(
ch_size
 < 0) {

253 
ASN__DECODE_FAILED
;

255 
ch_ty≥
) {

256 
PXER_WMORE
:

257 
ASN__DECODE_STARVED
;

258 
PXER_COMMENT
:

259 
PXER_TEXT
:

260 
	`ADVANCE
(
ch_size
);

262 
PXER_TAG
:

272 
	`xî_check_èg
(
±r
, 
ch_size
, 
ñm
->
«me
)) {

273 
XCT_CLOSING
:

274 
	`ADVANCE
(
ch_size
);

276 
XCT_BROKEN
:

278 
ASN__DECODE_FAILED
;

281 
rv
.
c⁄sumed
 +
c⁄sumed_my£lf
;

283  
rv
;

284 
	}
}

287 #i‚de‡ 
ASN_DISABLE_PER_SUPPORT


289 
a¢_dec_rvÆ_t


290 
	$OPEN_TYPE_u≥r_gë
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

291 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

292 c⁄° 
a¢_TYPE_membî_t
 *
ñm
, 
a¢_≥r_d©a_t
 *
pd
) {

293 
a¢_ty≥_£À˘‹_ªsu…_t
 
£À˘ed
;

294 *
memb_±r
;

295 **
memb_±r2
;

296 *
ö√r_vÆue
;

297 
a¢_dec_rvÆ_t
 
rv
;

299 if(!(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
)) {

300 
ASN__DECODE_FAILED
;

303 if(!
ñm
->
ty≥_£À˘‹
) {

304 
	`ASN_DEBUG
("Type selector isÇot defined for Open Type %s->%s->%s",

305 
td
->
«me
, 
ñm
->«me,Élm->
ty≥
->name);

306 
ASN__DECODE_FAILED
;

309 
£À˘ed
 = 
ñm
->
	`ty≥_£À˘‹
(
td
, 
•å
);

310 if(!
£À˘ed
.
¥e£n˚_ödex
) {

311 
ASN__DECODE_FAILED
;

315 
	`as£π
(
ñm
->
Êags
 =
ATF_OPEN_TYPE
);

316 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

317 
memb_±r2
 = (**)((*)
•å
 + 
ñm
->
memb_off£t
);

319 
memb_±r
 = (*)
•å
 + 
ñm
->
memb_off£t
;

320 
memb_±r2
 = &
memb_±r
;

322 if(*
memb_±r2
 !
NULL
) {

324 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
, 0)

326 
ASN__DECODE_FAILED
;

330 
ö√r_vÆue
 =

331 (*)*
memb_±r2


332 + 
ñm
->
ty≥
->
ñemíts
[
£À˘ed
.
¥e£n˚_ödex
 - 1].
memb_off£t
;

334 
rv
 = 
	`u≥r_›í_ty≥_gë
(
›t_codec_˘x
, 
£À˘ed
.
ty≥_des¸ùt‹
, 
NULL
,

335 &
ö√r_vÆue
, 
pd
);

336 
rv
.
code
) {

337 
RC_OK
:

338 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
,

339 
£À˘ed
.
¥e£n˚_ödex
)

343 
rv
.
code
 = 
RC_FAIL
;

346 
RC_WMORE
:

347 
RC_FAIL
:

348 if(*
memb_±r2
) {

349 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

350 
	`ASN_STRUCT_FREE
(*
£À˘ed
.
ty≥_des¸ùt‹
, 
ö√r_vÆue
);

351 *
memb_±r2
 = 
NULL
;

353 
	`ASN_STRUCT_RESET
(*
£À˘ed
.
ty≥_des¸ùt‹
,

354 
ö√r_vÆue
);

358  
rv
;

359 
	}
}

361 
a¢_íc_rvÆ_t


362 
	$OPEN_TYPE_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

363 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

364 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

365 c⁄° *
memb_±r
;

366 
a¢_TYPE_membî_t
 *
ñm
;

367 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

368 
¥e£¡
;

370 ()
c⁄°øöts
;

372 
¥e£¡
 = 
	`CHOICE_v¨ü¡_gë_¥e£n˚
(
td
, 
•å
);

373 if(
¥e£¡
 =0 ||Öª£¡ > 
td
->
ñemíts_cou¡
) {

374 
ASN__ENCODE_FAILED
;

376 
¥e£¡
--;

379 
	`ASN_DEBUG
("Encodög %†OPEN TYPEÉÀmíà%d", 
td
->
«me
, 
¥e£¡
);

381 
ñm
 = &
td
->
ñemíts
[
¥e£¡
];

382 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

384 
memb_±r
 =

385 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

386 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

388 
memb_±r
 = (c⁄° *)
•å
 + 
ñm
->
memb_off£t
;

391 if(
	`u≥r_›í_ty≥_put
(
ñm
->
ty≥
, 
NULL
, 
memb_±r
, 
po
) < 0) {

392 
ASN__ENCODE_FAILED
;

395 
î
.
ícoded
 = 0;

396 
	`ASN__ENCODED_OK
(
î
);

397 
	}
}

399 
a¢_dec_rvÆ_t


400 
	$OPEN_TYPE_≠î_gë
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

401 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

402 c⁄° 
a¢_TYPE_membî_t
 *
ñm
, 
a¢_≥r_d©a_t
 *
pd
) {

403 
a¢_ty≥_£À˘‹_ªsu…_t
 
£À˘ed
;

404 *
memb_±r
;

405 **
memb_±r2
;

406 *
ö√r_vÆue
;

407 
a¢_dec_rvÆ_t
 
rv
;

409 if(!(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
)) {

410 
ASN__DECODE_FAILED
;

413 if(!
ñm
->
ty≥_£À˘‹
) {

414 
	`ASN_DEBUG
("Type selector isÇot defined for Open Type %s->%s->%s",

415 
td
->
«me
, 
ñm
->«me,Élm->
ty≥
->name);

416 
ASN__DECODE_FAILED
;

419 
£À˘ed
 = 
ñm
->
	`ty≥_£À˘‹
(
td
, 
•å
);

420 if(!
£À˘ed
.
¥e£n˚_ödex
) {

421 
ASN__DECODE_FAILED
;

425 
	`as£π
(
ñm
->
Êags
 =
ATF_OPEN_TYPE
);

426 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

427 
memb_±r2
 = (**)((*)
•å
 + 
ñm
->
memb_off£t
);

429 
memb_±r
 = (*)
•å
 + 
ñm
->
memb_off£t
;

430 
memb_±r2
 = &
memb_±r
;

432 if(*
memb_±r2
 !
NULL
) {

434 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
, 0)

436 
ASN__DECODE_FAILED
;

440 
ö√r_vÆue
 =

441 (*)*
memb_±r2


442 + 
ñm
->
ty≥
->
ñemíts
[
£À˘ed
.
¥e£n˚_ödex
 - 1].
memb_off£t
;

444 
rv
 = 
	`≠î_›í_ty≥_gë
(
›t_codec_˘x
, 
£À˘ed
.
ty≥_des¸ùt‹
, 
NULL
,

445 &
ö√r_vÆue
, 
pd
);

446 
rv
.
code
) {

447 
RC_OK
:

448 if(
	`CHOICE_v¨ü¡_£t_¥e£n˚
(
ñm
->
ty≥
, *
memb_±r2
,

449 
£À˘ed
.
¥e£n˚_ödex
)

453 
rv
.
code
 = 
RC_FAIL
;

456 
RC_WMORE
:

457 
RC_FAIL
:

458 if(*
memb_±r2
) {

459 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

460 
	`ASN_STRUCT_FREE
(*
£À˘ed
.
ty≥_des¸ùt‹
, 
ö√r_vÆue
);

461 *
memb_±r2
 = 
NULL
;

463 
	`ASN_STRUCT_RESET
(*
£À˘ed
.
ty≥_des¸ùt‹
,

464 
ö√r_vÆue
);

468  
rv
;

469 
	}
}

471 
a¢_íc_rvÆ_t


472 
	$OPEN_TYPE_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

473 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

474 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

475 c⁄° *
memb_±r
;

476 
a¢_TYPE_membî_t
 *
ñm
;

477 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

478 
¥e£¡
;

480 ()
c⁄°øöts
;

482 
¥e£¡
 = 
	`CHOICE_v¨ü¡_gë_¥e£n˚
(
td
, 
•å
);

483 if(
¥e£¡
 =0 ||Öª£¡ > 
td
->
ñemíts_cou¡
) {

484 
ASN__ENCODE_FAILED
;

486 
¥e£¡
--;

489 
	`ASN_DEBUG
("Encodög %†OPEN TYPEÉÀmíà%d", 
td
->
«me
, 
¥e£¡
);

491 
ñm
 = &
td
->
ñemíts
[
¥e£¡
];

492 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

494 
memb_±r
 =

495 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

496 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

498 
memb_±r
 = (c⁄° *)
•å
 + 
ñm
->
memb_off£t
;

501 if(
	`≠î_›í_ty≥_put
(
ñm
->
ty≥
, 
NULL
, 
memb_±r
, 
po
) < 0) {

502 
ASN__ENCODE_FAILED
;

505 
î
.
ícoded
 = 0;

506 
	`ASN__ENCODED_OK
(
î
);

507 
	}
}

	@PLMNIdentity.c

8 
	~"PLMNIdítôy.h
"

11 
	$PLMNIdítôy_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 3)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_PLMNIdítôy_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 3, 3 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_PLMNIdítôy_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_PLMNIdítôy
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_PLMNIdítôy_ègs_1
,

53 (
a¢_DEF_PLMNIdítôy_ègs_1
)

54 /(
a¢_DEF_PLMNIdítôy_ègs_1
[0]),

55 
a¢_DEF_PLMNIdítôy_ègs_1
,

56 (
a¢_DEF_PLMNIdítôy_ègs_1
)

57 /(
a¢_DEF_PLMNIdítôy_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_PLMNIdítôy_c⁄°r_1
, 
PLMNIdítôy_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@PrintableString.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<PröèbÀSåög.h
>

12 c⁄° 
	g_PröèbÀSåög_Æphabë
[256] = {

22 c⁄° 
	g_PröèbÀSåög_code2vÆue
[74] = {

32 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_PröèbÀSåög_ègs
[] = {

33 (
ASN_TAG_CLASS_UNIVERSAL
 | (19 << 2)),

34 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

36 
	$a¢_DEF_PröèbÀSåög_v2c
(
vÆue
) {

37  
_PröèbÀSåög_Æphabë
[
vÆue
 > 255 ? 0 : value] - 1;

38 
	}
}

39 
	$a¢_DEF_PröèbÀSåög_c2v
(
code
) {

40 if(
code
 < 74)

41  
_PröèbÀSåög_code2vÆue
[
code
];

43 
	}
}

44 
a¢_≥r_c⁄°øöts_t
 
	ga¢_DEF_PröèbÀSåög_≥r_c⁄°øöts
 = {

45 { 
APC_CONSTRAINED
, 4, 4, 0x20, 0x39 },

46 { 
APC_SEMI_CONSTRAINED
, -1, -1, 0, 0 },

47 
a¢_DEF_PröèbÀSåög_v2c
,

48 
a¢_DEF_PröèbÀSåög_c2v


50 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_PröèbÀSåög
 = {

51 
OCTET_STRING_‰ì
,

52 
OCTET_STRING_¥öt_utf8
,

53 
OCTET_STRING_com∑ª
,

54 
OCTET_STRING_decode_bî
,

55 
OCTET_STRING_ícode_dî
,

56 
OCTET_STRING_decode_xî_utf8
,

57 
OCTET_STRING_ícode_xî_utf8
,

58 #ifdef 
ASN_DISABLE_OER_SUPPORT


62 
OCTET_STRING_decode_€r
,

63 
OCTET_STRING_ícode_€r
,

65 #ifdef 
ASN_DISABLE_PER_SUPPORT


71 
OCTET_STRING_decode_u≥r
,

72 
OCTET_STRING_ícode_u≥r
,

73 
OCTET_STRING_decode_≠î
,

74 
OCTET_STRING_ícode_≠î
,

76 
OCTET_STRING_øndom_fûl
,

79 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_PröèbÀSåög
 = {

82 &
a¢_OP_PröèbÀSåög
,

83 
a¢_DEF_PröèbÀSåög_ègs
,

84 (
a¢_DEF_PröèbÀSåög_ègs
)

85 / (
a¢_DEF_PröèbÀSåög_ègs
[0]) - 1,

86 
a¢_DEF_PröèbÀSåög_ègs
,

87 (
a¢_DEF_PröèbÀSåög_ègs
)

88 / (
a¢_DEF_PröèbÀSåög_ègs
[0]),

89 { 0, &
a¢_DEF_PröèbÀSåög_≥r_c⁄°øöts
, 
PröèbÀSåög_c⁄°øöt
 },

96 
	$PröèbÀSåög_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

97 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
,

98 *
≠p_key
) {

99 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

101 if(
°
 && st->
buf
) {

102 
uöt8_t
 *
buf
 = 
°
->buf;

103 
uöt8_t
 *
íd
 = 
buf
 + 
°
->
size
;

109 ; 
buf
 < 
íd
; buf++) {

110 if(!
_PröèbÀSåög_Æphabë
[*
buf
]) {

111 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

115 
td
->
«me
,

116 ()((
buf
 - 
°
->buf) + 1),

117 *
buf
,

118 
__FILE__
, 
__LINE__
);

123 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

125 
td
->
«me
, 
__FILE__
, 
__LINE__
);

130 
	}
}

	@QCI.c

8 
	~"QCI.h
"

11 
	$QCI_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 255)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_QCI_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
, 8, 8, 0, 255 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_QCI_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_QCI
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_QCI_ègs_1
,

52 (
a¢_DEF_QCI_ègs_1
)

53 /(
a¢_DEF_QCI_ègs_1
[0]),

54 
a¢_DEF_QCI_ègs_1
,

55 (
a¢_DEF_QCI_ègs_1
)

56 /(
a¢_DEF_QCI_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_QCI_c⁄°r_1
, 
QCI_c⁄°øöt
 },

	@QoSID.c

8 
	~"QoSID.h
"

10 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_QoSID_c⁄°r_1
 
	gCC_NOTUSED
 = {

11 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

15 
a¢_TYPE_membî_t
 
	ga¢_MBR_QoSID_1
[] = {

16 { 
ATF_NOFLAGS
, 0, 
off£tof
(
QoSID
, 
choi˚
.
fiveGC
),

17 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

19 &
a¢_DEF_FiveQI
,

25 { 
ATF_NOFLAGS
, 0, 
off£tof
(
QoSID
, 
choi˚
.
ePC
),

26 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

28 &
a¢_DEF_QCI
,

35 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_QoSID_èg2ñ_1
[] = {

36 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

37 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

39 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_QoSID_•ecs_1
 = {

40 (
QoSID
),

41 
off£tof
(
QoSID
, 
_a¢_˘x
),

42 
off£tof
(
QoSID
, 
¥e£¡
),

43 (((
QoSID
 *)0)->
¥e£¡
),

44 
a¢_MAP_QoSID_èg2ñ_1
,

49 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_QoSID
 = {

52 &
a¢_OP_CHOICE
,

57 { 0, &
a¢_PER_ty≥_QoSID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

58 
a¢_MBR_QoSID_1
,

60 &
a¢_SPC_QoSID_•ecs_1


	@QosFlowIdentifier.c

8 
	~"QosFlowIdítifõr.h
"

11 
	$QosFlowIdítifõr_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 0 && value <= 63)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_QosFlowIdítifõr_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 6, 6, 0, 63 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_QosFlowIdítifõr_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_QosFlowIdítifõr
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_QosFlowIdítifõr_ègs_1
,

52 (
a¢_DEF_QosFlowIdítifõr_ègs_1
)

53 /(
a¢_DEF_QosFlowIdítifõr_ègs_1
[0]),

54 
a¢_DEF_QosFlowIdítifõr_ègs_1
,

55 (
a¢_DEF_QosFlowIdítifõr_ègs_1
)

56 /(
a¢_DEF_QosFlowIdítifõr_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_QosFlowIdítifõr_c⁄°r_1
, 
QosFlowIdítifõr_c⁄°øöt
 },

	@RANUEID.c

8 
	~"RANUEID.h
"

11 
	$RANUEID_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 8)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_RANUEID_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 8, 8 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RANUEID_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RANUEID
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_RANUEID_ègs_1
,

53 (
a¢_DEF_RANUEID_ègs_1
)

54 /(
a¢_DEF_RANUEID_ègs_1
[0]),

55 
a¢_DEF_RANUEID_ègs_1
,

56 (
a¢_DEF_RANUEID_ègs_1
)

57 /(
a¢_DEF_RANUEID_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_RANUEID_c⁄°r_1
, 
RANUEID_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@RANfunction-Name.c

8 
	~"RANfun˘i⁄-Name.h
"

10 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_2
[256] = {

20 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_2
[74] = {

28 
	$check_≥rmôãd_Æphabë_2
(c⁄° *
•å
) {

29 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_2
;

31 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

32 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

33 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

35 ; 
ch
 < 
íd
; ch++) {

36 
uöt8_t
 
cv
 = *
ch
;

37 if(!
èbÀ
[
cv
])  -1;

40 
	}
}

42 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_3
[256] = {

52 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_3
[74] = {

60 
	$check_≥rmôãd_Æphabë_3
(c⁄° *
•å
) {

61 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_3
;

63 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

64 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

65 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

67 ; 
ch
 < 
íd
; ch++) {

68 
uöt8_t
 
cv
 = *
ch
;

69 if(!
èbÀ
[
cv
])  -1;

72 
	}
}

74 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_4
[256] = {

84 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_4
[74] = {

92 
	$check_≥rmôãd_Æphabë_4
(c⁄° *
•å
) {

93 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_4
;

95 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

96 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

97 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

99 ; 
ch
 < 
íd
; ch++) {

100 
uöt8_t
 
cv
 = *
ch
;

101 if(!
èbÀ
[
cv
])  -1;

104 
	}
}

107 
	$memb_ønFun˘i⁄_Sh‹tName_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

108 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

109 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

110 
size_t
 
size
;

112 if(!
•å
) {

113 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

115 
td
->
«me
, 
__FILE__
, 
__LINE__
);

119 
size
 = 
°
->size;

121 if((
size
 >= 1 && size <= 150)

122 && !
	`check_≥rmôãd_Æphabë_2
(
°
)) {

126 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

128 
td
->
«me
, 
__FILE__
, 
__LINE__
);

131 
	}
}

133 
	$a¢_PER_MAP_ønFun˘i⁄_Sh‹tName_2_v2c
(
vÆue
) {

134 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_2
)/(permitted_alphabet_table_2[0]))

136  
≥rmôãd_Æphabë_èbÀ_2
[
vÆue
] - 1;

137 
	}
}

138 
	$a¢_PER_MAP_ønFun˘i⁄_Sh‹tName_2_c2v
(
code
) {

139 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_2
)/(permitted_alphabet_code2value_2[0]))

141  
≥rmôãd_Æphabë_code2vÆue_2
[
code
];

142 
	}
}

144 
	$memb_ønFun˘i⁄_E2SM_OID_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

145 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

146 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

147 
size_t
 
size
;

149 if(!
•å
) {

150 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

152 
td
->
«me
, 
__FILE__
, 
__LINE__
);

156 
size
 = 
°
->size;

158 if((
size
 >= 1 && size <= 1000)

159 && !
	`check_≥rmôãd_Æphabë_3
(
°
)) {

163 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

165 
td
->
«me
, 
__FILE__
, 
__LINE__
);

168 
	}
}

170 
	$a¢_PER_MAP_ønFun˘i⁄_E2SM_OID_3_v2c
(
vÆue
) {

171 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_3
)/(permitted_alphabet_table_3[0]))

173  
≥rmôãd_Æphabë_èbÀ_3
[
vÆue
] - 1;

174 
	}
}

175 
	$a¢_PER_MAP_ønFun˘i⁄_E2SM_OID_3_c2v
(
code
) {

176 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_3
)/(permitted_alphabet_code2value_3[0]))

178  
≥rmôãd_Æphabë_code2vÆue_3
[
code
];

179 
	}
}

181 
	$memb_ønFun˘i⁄_Des¸ùti⁄_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

182 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

183 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

184 
size_t
 
size
;

186 if(!
•å
) {

187 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

189 
td
->
«me
, 
__FILE__
, 
__LINE__
);

193 
size
 = 
°
->size;

195 if((
size
 >= 1 && size <= 150)

196 && !
	`check_≥rmôãd_Æphabë_4
(
°
)) {

200 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

202 
td
->
«me
, 
__FILE__
, 
__LINE__
);

205 
	}
}

207 
	$a¢_PER_MAP_ønFun˘i⁄_Des¸ùti⁄_4_v2c
(
vÆue
) {

208 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_4
)/(permitted_alphabet_table_4[0]))

210  
≥rmôãd_Æphabë_èbÀ_4
[
vÆue
] - 1;

211 
	}
}

212 
	$a¢_PER_MAP_ønFun˘i⁄_Des¸ùti⁄_4_c2v
(
code
) {

213 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_4
)/(permitted_alphabet_code2value_4[0]))

215  
≥rmôãd_Æphabë_code2vÆue_4
[
code
];

216 
	}
}

217 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ønFun˘i⁄_Sh‹tName_c⁄°r_2
 
	gCC_NOTUSED
 = {

218 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

219 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 8, 8, 1, 150 } ,

220 
a¢_PER_MAP_ønFun˘i⁄_Sh‹tName_2_v2c
,

221 
a¢_PER_MAP_ønFun˘i⁄_Sh‹tName_2_c2v


223 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ønFun˘i⁄_E2SM_OID_c⁄°r_3
 
	gCC_NOTUSED
 = {

224 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

225 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 10, 10, 1, 1000 } ,

226 
a¢_PER_MAP_ønFun˘i⁄_E2SM_OID_3_v2c
,

227 
a¢_PER_MAP_ønFun˘i⁄_E2SM_OID_3_c2v


229 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_ønFun˘i⁄_Des¸ùti⁄_c⁄°r_4
 
	gCC_NOTUSED
 = {

230 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

231 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 8, 8, 1, 150 } ,

232 
a¢_PER_MAP_ønFun˘i⁄_Des¸ùti⁄_4_v2c
,

233 
a¢_PER_MAP_ønFun˘i⁄_Des¸ùti⁄_4_c2v


235 
a¢_TYPE_membî_t
 
	ga¢_MBR_RANfun˘i⁄_Name_1
[] = {

236 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RANfun˘i⁄_Name
, 
ønFun˘i⁄_Sh‹tName
),

237 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

239 &
a¢_DEF_PröèbÀSåög
,

241 { 0, &
a¢_PER_memb_ønFun˘i⁄_Sh‹tName_c⁄°r_2
, 
memb_ønFun˘i⁄_Sh‹tName_c⁄°øöt_1
 },

245 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RANfun˘i⁄_Name
, 
ønFun˘i⁄_E2SM_OID
),

246 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

248 &
a¢_DEF_PröèbÀSåög
,

250 { 0, &
a¢_PER_memb_ønFun˘i⁄_E2SM_OID_c⁄°r_3
, 
memb_ønFun˘i⁄_E2SM_OID_c⁄°øöt_1
 },

254 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RANfun˘i⁄_Name
, 
ønFun˘i⁄_Des¸ùti⁄
),

255 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

257 &
a¢_DEF_PröèbÀSåög
,

259 { 0, &
a¢_PER_memb_ønFun˘i⁄_Des¸ùti⁄_c⁄°r_4
, 
memb_ønFun˘i⁄_Des¸ùti⁄_c⁄°øöt_1
 },

263 { 
ATF_POINTER
, 1, 
off£tof
(
RANfun˘i⁄_Name
, 
ønFun˘i⁄_In°™˚
),

264 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

266 &
a¢_DEF_N©iveI¡egî
,

273 c⁄° 
	ga¢_MAP_RANfun˘i⁄_Name_oms_1
[] = { 3 };

274 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RANfun˘i⁄_Name_ègs_1
[] = {

275 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

277 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_RANfun˘i⁄_Name_èg2ñ_1
[] = {

278 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

279 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

280 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

281 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 }

283 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_RANfun˘i⁄_Name_•ecs_1
 = {

284 (
RANfun˘i⁄_Name
),

285 
off£tof
(
RANfun˘i⁄_Name
, 
_a¢_˘x
),

286 
a¢_MAP_RANfun˘i⁄_Name_èg2ñ_1
,

288 
a¢_MAP_RANfun˘i⁄_Name_oms_1
,

292 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RANfun˘i⁄_Name
 = {

295 &
a¢_OP_SEQUENCE
,

296 
a¢_DEF_RANfun˘i⁄_Name_ègs_1
,

297 (
a¢_DEF_RANfun˘i⁄_Name_ègs_1
)

298 /(
a¢_DEF_RANfun˘i⁄_Name_ègs_1
[0]),

299 
a¢_DEF_RANfun˘i⁄_Name_ègs_1
,

300 (
a¢_DEF_RANfun˘i⁄_Name_ègs_1
)

301 /(
a¢_DEF_RANfun˘i⁄_Name_ègs_1
[0]),

302 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

303 
a¢_MBR_RANfun˘i⁄_Name_1
,

305 &
a¢_SPC_RANfun˘i⁄_Name_•ecs_1


	@REAL.c

5 
	#_ISOC99_SOURCE


	)

6 #i‚de‡
_BSD_SOURCE


7 
	#_BSD_SOURCE


	)

9 
	~<a¢_öã∫Æ.h
>

10 #if 
deföed
(
__Æpha
)

11 
	~<sys/ªsour˚.h
>

13 
	~<°dlib.h
>

14 
	~<m©h.h
>

15 
	~<Êﬂt.h
>

16 
	~<î∫o.h
>

17 
	~<REAL.h
>

18 
	~<OCTET_STRING.h
>

20 #unde‡
INT_MAX


21 
	#INT_MAX
 (()((()-1Ë>> 1))

	)

23 #if !(
deföed
(
NAN
Ë|| deföed(
INFINITY
))

24 vﬁ©ûê
ªÆ_zîo
 
	gCC_NOTUSED
 = 0.0;

26 #i‚def 
NAN


27 
	#NAN
 (0.0/0.0)

	)

29 #i‚def 
INFINITY


30 
	#INFINITY
 (1.0/0.0)

	)

33 #i‡
deföed
(
__˛™g__
)

41 #¥agm®
˛™g
 
dügno°ic
 
push


42 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wc11-extensions"

43 
	$a¢_i¢™
(
d
) {

44  
	`i¢™
(
d
);

45 
	}
}

46 
	$a¢_isföôe
(
d
) {

47 #ifde‡
isföôe


48  
	`isföôe
(
d
);

50  
	`föôe
(
d
);

52 
	}
}

53 #¥agm®
˛™g
 
dügno°ic
 
p›


55 
	#a¢_i¢™
(
v
Ë
	`i¢™
(v)

	)

56 #ifde‡
isföôe


57 
	#a¢_isföôe
(
d
Ë
	`isföôe
(dË

	)

59 
	#a¢_isföôe
(
d
Ë
	`föôe
(dË

	)

66 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_REAL_ègs
[] = {

67 (
ASN_TAG_CLASS_UNIVERSAL
 | (9 << 2))

69 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_REAL
 = {

70 
ASN__PRIMITIVE_TYPE_‰ì
,

71 
REAL_¥öt
,

72 
REAL_com∑ª
,

73 
bî_decode_¥imôive
,

74 
dî_ícode_¥imôive
,

75 
REAL_decode_xî
,

76 
REAL_ícode_xî
,

77 #ifdef 
ASN_DISABLE_OER_SUPPORT


81 
REAL_decode_€r
,

82 
REAL_ícode_€r
,

84 #ifdef 
ASN_DISABLE_PER_SUPPORT


90 
REAL_decode_u≥r
,

91 
REAL_ícode_u≥r
,

92 
REAL_decode_≠î
,

93 
REAL_ícode_≠î
,

95 
REAL_øndom_fûl
,

98 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_REAL
 = {

101 &
a¢_OP_REAL
,

102 
a¢_DEF_REAL_ègs
,

103 (
a¢_DEF_REAL_ègs
) / (asn_DEF_REAL_tags[0]),

104 
a¢_DEF_REAL_ègs
,

105 (
a¢_DEF_REAL_ègs
) / (asn_DEF_REAL_tags[0]),

106 { 0, 0, 
a¢_gíîic_no_c⁄°øöt
 },

112 
	e•ecülRólVÆue
 {

113 
	mSRV__NOT_A_NUMBER
,

114 
	mSRV__MINUS_INFINITY
,

115 
	mSRV__PLUS_INFINITY


116 } 
	t•ecülRólVÆue_e
;

117 
	s•ecülRólVÆue_s
 {

118 *
	m°rög
;

119 
size_t
 
	mÀngth
;

120 
	mdv
;

121 } 
	g•ecülRólVÆue
[] = {

122 
	#SRV_SET
(
foo
, 
vÆ
Ë{ foo, (fooË- 1, vÆ }

	)

123 
SRV_SET
("<NOT-A-NUMBER/>", 0),

124 
SRV_SET
("<MINUS-INFINITY/>", -1),

125 
SRV_SET
("<PLUS-INFINITY/>", 1),

126 #unde‡
SRV_SET


129 
ssize_t


130 
	$REAL__dump
(
d
, 
ˇn⁄iˇl
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

131 
loˇl_buf
[64];

132 *
buf
 = 
loˇl_buf
;

133 
ssize_t
 
buÊí
 = (
loˇl_buf
);

134 c⁄° *
fmt
 = 
ˇn⁄iˇl
 ? "%.17E" : "%.15f" ;

135 
ssize_t
 
ªt
;

141 if(
	`a¢_i¢™
(
d
)) {

142 
buf
 = 
•ecülRólVÆue
[
SRV__NOT_A_NUMBER
].
°rög
;

143 
buÊí
 = 
•ecülRólVÆue
[
SRV__NOT_A_NUMBER
].
Àngth
;

144  (
	`cb
(
buf
, 
buÊí
, 
≠p_key
) < 0) ? -1 : buflen;

145 } if(!
	`a¢_isföôe
(
d
)) {

146 if(
	`c›ysign
(1.0, 
d
) < 0.0) {

147 
buf
 = 
•ecülRólVÆue
[
SRV__MINUS_INFINITY
].
°rög
;

148 
buÊí
 = 
•ecülRólVÆue
[
SRV__MINUS_INFINITY
].
Àngth
;

150 
buf
 = 
•ecülRólVÆue
[
SRV__PLUS_INFINITY
].
°rög
;

151 
buÊí
 = 
•ecülRólVÆue
[
SRV__PLUS_INFINITY
].
Àngth
;

153  (
	`cb
(
buf
, 
buÊí
, 
≠p_key
) < 0) ? -1 : buflen;

154 } if(
	`ûogb
(
d
Ë<-
INT_MAX
) {

155 if(
	`c›ysign
(1.0, 
d
) < 0.0) {

156 
buf
 = "-0";

157 
buÊí
 = 2;

159 
buf
 = "0";

160 
buÊí
 = 1;

162  (
	`cb
(
buf
, 
buÊí
, 
≠p_key
) < 0) ? -1 : buflen;

169 
ªt
 = 
	`¢¥ötf
(
buf
, 
buÊí
, 
fmt
, 
d
);

170 if(
ªt
 < 0) {

172 
buÊí
 <<= 1;

173 if(
buÊí
 > 4096) {

175 if(
buf
 !
loˇl_buf
Ë
	`FREEMEM
(buf);

178 } if(
ªt
 >
buÊí
) {

179 
buÊí
 = 
ªt
 + 1;

181 
buÊí
 = 
ªt
;

184 if(
buf
 !
loˇl_buf
Ë
	`FREEMEM
(buf);

185 
buf
 = (*)
	`MALLOC
(
buÊí
);

186 if(!
buf
)  -1;

189 if(
ˇn⁄iˇl
) {

194 *
dŸ
;

195 *
íd
 = 
buf
 + 
buÊí
;

196 *
œ°_zîo
;

197 *
fú°_zîo_ö_run
;

198 *
s
;

201 
LZSTATE_NOTHING
,

202 
LZSTATE_ZEROES


203 } 
lz_°©e
 = 
LZSTATE_NOTHING
;

205 
dŸ
 = (
buf
[0] == 0x2d ) ? (buf + 2) : (buf + 1);

206 if(*
dŸ
 >= 0x30) {

207 if(
buf
 !
loˇl_buf
Ë
	`FREEMEM
(buf);

208 
î∫o
 = 
EINVAL
;

211 *
dŸ
 = 0x2e;

213 
fú°_zîo_ö_run
 = 
œ°_zîo
 = 
s
 = 
dŸ
 + 2; s < 
íd
; s++) {

214 *
s
) {

216 if(
lz_°©e
 =
LZSTATE_ZEROES
Ë
œ°_zîo
 = 
fú°_zîo_ö_run
;

219 if(
lz_°©e
 =
LZSTATE_NOTHING
Ë
fú°_zîo_ö_run
 = 
s
;

220 
lz_°©e
 = 
LZSTATE_ZEROES
;

223 
lz_°©e
 = 
LZSTATE_NOTHING
;

229 if(
s
 =
íd
) {

230 if(
buf
 !
loˇl_buf
Ë
	`FREEMEM
(buf);

231 
î∫o
 = 
EINVAL
;

235 
	`as£π
(*
s
 == 0x45);

237 *
E
 = 
s
;

238 *
exµå
 = ++
E
;

239 *
s
 = 
exµå
;

240 
sign
;

242 if(*
exµå
 == 0x2b ) {

244 
buÊí
 -= 1;

245 
sign
 = 0;

247 
sign
 = 1;

248 
s
++;

250 
exµå
++;

251 if(
exµå
 > 
íd
) {

252 if(
buf
 !
loˇl_buf
Ë
	`FREEMEM
(buf);

253 
î∫o
 = 
EINVAL
;

256 if(*
exµå
 == 0x30) {

257 
buÊí
--;

258 
exµå
++;

260 if(
lz_°©e
 =
LZSTATE_ZEROES
) {

261 *
œ°_zîo
 = 0x45;

262 
buÊí
 -
s
 - (
œ°_zîo
 + 1);

263 
s
 = 
œ°_zîo
 + 1;

264 if(
sign
) {

265 *
s
++ = 0x2d ;

266 
buÊí
++;

269 ; 
exµå
 <
íd
; 
s
++,Éxpptr++)

270 *
s
 = *
exµå
;

276 *
íd
 = 
buf
 + 
buÊí
;

277 *
œ°_zîo
 = 
íd
;

278 
°›lookög
 = 0;

279 *
z
;

280 
z
 = 
íd
 - 1; z > 
buf
; z--) {

281 *
z
) {

283 if(!
°›lookög
)

284 
œ°_zîo
 = 
z
;

288 
°›lookög
 = 1;

295 *
z
 = 0x2e;

296 if(
œ°_zîo
 =
z
 + 1) {

297 
œ°_zîo
++;

299 
buÊí
 = 
œ°_zîo
 - 
buf
;

300 *
œ°_zîo
 = '\0';

307 
ªt
 = 
	`cb
(
buf
, 
buÊí
, 
≠p_key
);

308 if(
buf
 !
loˇl_buf
Ë
	`FREEMEM
(buf);

309  (
ªt
 < 0Ë? -1 : 
buÊí
;

310 
	}
}

313 
	$REAL_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

314 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

315 c⁄° 
REAL_t
 *
°
 = (c⁄° REAL_à*)
•å
;

316 
ssize_t
 
ªt
;

317 
d
;

319 ()
td
;

320 ()
ûevñ
;

322 if(!
°
 || !°->
buf
)

323 
ªt
 = 
	`cb
("<ab£¡>", 8, 
≠p_key
);

324 if(
	`a¢_REAL2doubÀ
(
°
, &
d
))

325 
ªt
 = 
	`cb
("<îr‹>", 7, 
≠p_key
);

327 
ªt
 = 
	`REAL__dump
(
d
, 0, 
cb
, 
≠p_key
);

329  (
ªt
 < 0) ? -1 : 0;

330 
	}
}

333 
	$REAL_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

334 c⁄° *
b±r
) {

335 c⁄° 
REAL_t
 *
a
 = 
≠å
;

336 c⁄° 
REAL_t
 *
b
 = 
b±r
;

338 ()
td
;

340 if(
a
 && 
b
) {

341 
adbl
, 
bdbl
;

342 
ø
, 
rb
;

343 
ø
 = 
	`a¢_REAL2doubÀ
(
a
, &
adbl
);

344 
rb
 = 
	`a¢_REAL2doubÀ
(
b
, &
bdbl
);

345 if(
ø
 =0 && 
rb
 == 0) {

346 if(
	`a¢_i¢™
(
adbl
)) {

347 if(
	`a¢_i¢™
(
bdbl
)) {

352 } if(
	`a¢_i¢™
(
bdbl
)) {

356 if(
adbl
 < 
bdbl
) {

358 } if(
adbl
 > 
bdbl
) {

363 } if(
ø
) {

368 } if(!
a
) {

373 
	}
}

375 
a¢_íc_rvÆ_t


376 
	$REAL_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

377 
xî_ícodî_Êags_e
 
Êags
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

378 *
≠p_key
) {

379 c⁄° 
REAL_t
 *
°
 = (c⁄° REAL_à*)
•å
;

380 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

381 
d
;

383 ()
ûevñ
;

385 if(!
°
 || !°->
buf
 || 
	`a¢_REAL2doubÀ
(°, &
d
))

386 
ASN__ENCODE_FAILED
;

388 
î
.
ícoded
 = 
	`REAL__dump
(
d
, 
Êags
 & 
XER_F_CANONICAL
, 
cb
, 
≠p_key
);

389 if(
î
.
ícoded
 < 0Ë
ASN__ENCODE_FAILED
;

391 
	`ASN__ENCODED_OK
(
î
);

392 
	}
}

398 
xî_pbd_rvÆ


399 
	$REAL__xî_body_decode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

400 c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

401 
REAL_t
 *
°
 = (REAL_à*)
•å
;

402 
vÆue
;

403 c⁄° *
xîd©a
 = (c⁄° *)
chunk_buf
;

404 *
íd±r
 = 0;

405 *
b
;

407 ()
td
;

409 if(!
chunk_size
Ë 
XPBD_BROKEN_ENCODING
;

414 if(
xîd©a
[0] == 0x3c ) {

415 
size_t
 
i
;

416 
i
 = 0; i < (
•ecülRólVÆue
)

417 / (
•ecülRólVÆue
[0]); 
i
++) {

418 
•ecülRólVÆue_s
 *
§v
 = &
•ecülRólVÆue
[
i
];

419 
dv
;

421 if(
§v
->
Àngth
 !
chunk_size


422 || 
	`memcmp
(
§v
->
°rög
, 
chunk_buf
, 
chunk_size
))

430 
§v
->
dv
) {

431 -1: 
dv
 = - 
INFINITY
; ;

432 0: 
dv
 = 
NAN
; ;

433 1: 
dv
 = 
INFINITY
; ;

434 :  
XPBD_SYSTEM_FAILURE
;

437 if(
	`a¢_doubÀ2REAL
(
°
, 
dv
))

438  
XPBD_SYSTEM_FAILURE
;

440  
XPBD_BODY_CONSUMED
;

442 
	`ASN_DEBUG
("Unknown XMLSpecialRealValue");

443  
XPBD_BROKEN_ENCODING
;

449 
b
 = (*)
	`MALLOC
(
chunk_size
 + 1);

450 if(!
b
Ë 
XPBD_SYSTEM_FAILURE
;

451 
	`mem˝y
(
b
, 
chunk_buf
, 
chunk_size
);

452 
b
[
chunk_size
] = 0;

454 
vÆue
 = 
	`°πod
(
b
, &
íd±r
);

455 
	`FREEMEM
(
b
);

456 if(
íd±r
 =
b
Ë 
XPBD_BROKEN_ENCODING
;

458 if(
	`a¢_doubÀ2REAL
(
°
, 
vÆue
))

459  
XPBD_SYSTEM_FAILURE
;

461  
XPBD_BODY_CONSUMED
;

462 
	}
}

464 
a¢_dec_rvÆ_t


465 
	$REAL_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

466 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

467 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

468  
	`xî_decode_¥imôive
(
›t_codec_˘x
, 
td
,

469 
•å
, (
REAL_t
), 
›t_m«me
,

470 
buf_±r
, 
size
, 
REAL__xî_body_decode
);

471 
	}
}

474 
	$a¢_REAL2doubÀ
(c⁄° 
REAL_t
 *
°
, *
dbl_vÆue
) {

475 
o˘v
;

477 if(!
°
 || !°->
buf
) {

478 
î∫o
 = 
EINVAL
;

482 if(
°
->
size
 == 0) {

483 *
dbl_vÆue
 = 0;

487 
o˘v
 = 
°
->
buf
[0];

489 
o˘v
 & 0xC0) {

498 
°
->
buf
[0]) {

500 *
dbl_vÆue
 = 
INFINITY
;

503 *
dbl_vÆue
 = - 
INFINITY
;

506 *
dbl_vÆue
 = 
NAN
;

509 *
dbl_vÆue
 = -0.0;

513 
î∫o
 = 
EINVAL
;

522 
d
;

523 *
sour˚
 = 0;

524 *
íd±r
;

525 
u£d_mÆloc
 = 0;

527 if(
o˘v
 == 0 || (octv & 0x3C)) {

529 
î∫o
 = 
EINVAL
;

539 if(
°
->
buf
[°->
size
] !'\0' || 
	`memchr
(st->buf, ',', st->size)) {

540 c⁄° 
uöt8_t
 *
p
, *
íd
;

541 *
b
;

543 
b
 = 
sour˚
 = (*)
	`MALLOC
(
°
->
size
 + 1);

544 if(!
sour˚
)  -1;

545 
u£d_mÆloc
 = 1;

548 
p
 = 
°
->
buf
 + 1, 
íd
 = st->bu‡+ st->
size
;

549 
p
 < 
íd
; 
b
++,Ö++)

550 *
b
 = (*
p
 == ',') ? '.' : *p;

551 *
b
 = '\0';

553 
sour˚
 = (*)&
°
->
buf
[1];

556 
íd±r
 = 
sour˚
;

557 
d
 = 
	`°πod
(
sour˚
, &
íd±r
);

558 if(*
íd±r
 != '\0') {

560 if(
u£d_mÆloc
Ë
	`FREEMEM
(
sour˚
);

561 
î∫o
 = 
EINVAL
;

564 if(
u£d_mÆloc
Ë
	`FREEMEM
(
sour˚
);

565 if(
	`a¢_isföôe
(
d
)) {

566 *
dbl_vÆue
 = 
d
;

569 
î∫o
 = 
ERANGE
;

579 
m
;

580 
öt32_t
 
expvÆ
;

581 
ñí
;

582 
sˇÀF
;

583 
ba£F
;

584 
uöt8_t
 *
±r
;

585 
uöt8_t
 *
íd
;

586 
sign
;

588 (
o˘v
 & 0x30) >> 4) {

589 0x00: 
ba£F
 = 1; ;

590 0x01: 
ba£F
 = 3; ;

591 0x02: 
ba£F
 = 4; ;

594 
î∫o
 = 
EINVAL
;

598 
sign
 = (
o˘v
 & 0x40);

599 
sˇÀF
 = (
o˘v
 & 0x0C) >> 2;

601 if(
°
->
size
 <1 + (
o˘v
 & 0x03)) {

602 
î∫o
 = 
EINVAL
;

606 
ñí
 = (
o˘v
 & 0x03);

607 if(
ñí
 == 0x03) {

608 
ñí
 = 
°
->
buf
[1];

609 if(
ñí
 =0 || 
°
->
size
 <= (2 +Élen)) {

610 
î∫o
 = 
EINVAL
;

614 
±r
 = &
°
->
buf
[2];

616 
±r
 = &
°
->
buf
[1];

620 
expvÆ
 = ()(*(
öt8_t
 *)
±r
);

621 if(
ñí
 >(
expvÆ
)-1) {

622 
î∫o
 = 
ERANGE
;

625 
íd
 = 
±r
 + 
ñí
 + 1;

626 
±r
++;Öå < 
íd
;Ötr++)

627 
expvÆ
 = (expvÆ * 256Ë+ *
±r
;

629 
m
 = 0.0;

632 
íd
 = 
°
->
buf
 + st->
size
;

633 ; 
±r
 < 
íd
;Ötr++)

634 
m
 = 
	`ldexp
(m, 8Ë+ *
±r
;

637 
	`ASN_DEBUG
("m=%.10f, scF=%d, bF=%d,Éxpval=%d,Üdexp()=%f,Üdexp()=%f\n",

638 
m
, 
sˇÀF
, 
ba£F
, 
expvÆ
,

639 
	`ldexp
(
m
, 
expvÆ
 * 
ba£F
 + 
sˇÀF
),

640 
	`ldexp
(
m
, 
sˇÀF
Ë* 
	`pow
’ow(2, 
ba£F
), 
expvÆ
)

648 
m
 = 
	`ldexp
(m, 
expvÆ
 * 
ba£F
 + 
sˇÀF
);

649 if(
	`a¢_isföôe
(
m
)) {

650 *
dbl_vÆue
 = 
sign
 ? -
m
 : m;

652 
î∫o
 = 
ERANGE
;

659 
	}
}

666 
	$a¢_doubÀ2REAL
(
REAL_t
 *
°
, 
dbl_vÆue
) {

667 
ã°
 = -0.0;

668 
Êﬂt_big_ídün
 = *(c⁄° *)&
ã°
 != 0;

669 
uöt8_t
 
buf
[16];

670 
uöt8_t
 
ds¸
[(
dbl_vÆue
)];

672 
as£πi⁄_buf„r1
[9 - (
dbl_vÆue
)] 
CC_NOTUSED
;

673 
as£πi⁄_buf„r2
[(
dbl_vÆue
Ë- 7] 
CC_NOTUSED
;

674 
uöt8_t
 *
±r
 = 
buf
;

675 
uöt8_t
 *
m°›
;

676 
mvÆ
;

677 
bmsign
;

678 
buÊí
;

679 
accum
;

680 
expvÆ
;

682 if(!
°
) {

683 
î∫o
 = 
EINVAL
;

692 
expvÆ
 = 
	`ûogb
(
dbl_vÆue
);

693 if(
expvÆ
 <-
INT_MAX


694 || 
expvÆ
 =
INT_MAX


696 if(!
°
->
buf
 || st->
size
 < 2) {

697 
±r
 = (
uöt8_t
 *)
	`MALLOC
(2);

698 if(!
±r
)  -1;

699 if(
°
->
buf
Ë
	`FREEMEM
(st->buf);

700 
°
->
buf
 = 
±r
;

703 if(
	`a¢_i¢™
(
dbl_vÆue
)) {

704 
°
->
buf
[0] = 0x42;

705 
°
->
buf
[1] = 0;

706 
°
->
size
 = 1;

707 } if(!
	`a¢_isföôe
(
dbl_vÆue
)) {

708 if(
	`c›ysign
(1.0, 
dbl_vÆue
) < 0.0) {

709 
°
->
buf
[0] = 0x41;

711 
°
->
buf
[0] = 0x40;

713 
°
->
buf
[1] = 0;

714 
°
->
size
 = 1;

716 if(
	`c›ysign
(1.0, 
dbl_vÆue
) >= 0.0) {

718 
°
->
buf
[0] = 0;

719 
°
->
size
 = 0;

722 
°
->
buf
[0] = 0x43;

723 
°
->
buf
[1] = 0;

724 
°
->
size
 = 1;

730 if(
Êﬂt_big_ídün
) {

731 
uöt8_t
 *
s
 = ((uöt8_à*)&
dbl_vÆue
) + 1;

732 
uöt8_t
 *
íd
 = ((uöt8_à*)&
dbl_vÆue
) + ();

733 
uöt8_t
 *
d
;

735 
bmsign
 = 0x80 | ((
s
[-1] >> 1) & 0x40);

736 
m°›
 = 
d
 = 
ds¸
; 
s
 < 
íd
; d++, s++) {

737 *
d
 = *
s
;

738 if(*
d
Ë
m°›
 = d;

741 
uöt8_t
 *
s
 = ((uöt8_à*)&
dbl_vÆue
) + (dbl_value) - 2;

742 
uöt8_t
 *
°¨t
 = ((uöt8_à*)&
dbl_vÆue
);

743 
uöt8_t
 *
d
;

745 
bmsign
 = 0x80 | ((
s
[1] >> 1) & 0x40);

746 
m°›
 = 
d
 = 
ds¸
; 
s
 >
°¨t
; d++, s--) {

747 *
d
 = *
s
;

748 if(*
d
Ë
m°›
 = d;

753 
ds¸
[0] = 0x10 | (dscr[0] & 0x0f);

756 
expvÆ
 -8 * ((
m°›
 - 
ds¸
) + 1) - 4;

759 
mvÆ
 = *
m°›
;

760 if(
mvÆ
 && !(mval & 1)) {

761 
shi·_cou¡
 = 1;

762 
ishi·
;

763 
uöt8_t
 *
m±r
;

768 if(!(
mvÆ
 & 0x0f))

769 
shi·_cou¡
 = 4;

770 ((
mvÆ
 >> 
shi·_cou¡
) & 1) == 0)

771 
shi·_cou¡
++;

773 
ishi·
 = 8 - 
shi·_cou¡
;

774 
accum
 = 0;

777 
m±r
 = 
ds¸
; m±∏<
m°›
; mptr++) {

778 
mvÆ
 = *
m±r
;

779 *
m±r
 = 
accum
 | (
mvÆ
 >> 
shi·_cou¡
);

780 
accum
 = 
mvÆ
 << 
ishi·
;

784 
expvÆ
 +
shi·_cou¡
;

787 if(
expvÆ
 < 0) {

788 if((
expvÆ
 >> 7) == -1) {

789 *
±r
++ = 
bmsign
 | 0x00;

790 *
±r
++ = 
expvÆ
;

791 } if((
expvÆ
 >> 15) == -1) {

792 *
±r
++ = 
bmsign
 | 0x01;

793 *
±r
++ = 
expvÆ
 >> 8;

794 *
±r
++ = 
expvÆ
;

796 *
±r
++ = 
bmsign
 | 0x02;

797 *
±r
++ = 
expvÆ
 >> 16;

798 *
±r
++ = 
expvÆ
 >> 8;

799 *
±r
++ = 
expvÆ
;

801 } if(
expvÆ
 <= 0x7f) {

802 *
±r
++ = 
bmsign
 | 0x00;

803 *
±r
++ = 
expvÆ
;

804 } if(
expvÆ
 <= 0x7fff) {

805 *
±r
++ = 
bmsign
 | 0x01;

806 *
±r
++ = 
expvÆ
 >> 8;

807 *
±r
++ = 
expvÆ
;

809 
	`as£π
(
expvÆ
 <= 0x7fffff);

810 *
±r
++ = 
bmsign
 | 0x02;

811 *
±r
++ = 
expvÆ
 >> 16;

812 *
±r
++ = 
expvÆ
 >> 8;

813 *
±r
++ = 
expvÆ
;

816 
buÊí
 = (
m°›
 - 
ds¸
) + 1;

817 
	`mem˝y
(
±r
, 
ds¸
, 
buÊí
);

818 
±r
 +
buÊí
;

819 
buÊí
 = 
±r
 - 
buf
;

821 
±r
 = (
uöt8_t
 *)
	`MALLOC
(
buÊí
 + 1);

822 if(!
±r
)  -1;

824 
	`mem˝y
(
±r
, 
buf
, 
buÊí
);

825 
buf
[
buÊí
] = 0;

827 if(
°
->
buf
Ë
	`FREEMEM
(st->buf);

828 
°
->
buf
 = 
±r
;

829 
°
->
size
 = 
buÊí
;

832 
	}
}

834 
CC_ATTR_NO_SANITIZE
("float-cast-overflow")

835 
	$a¢_doubÀ2Êﬂt
(
d
, *
outcome
) {

836 
f
 = 
d
;

838 *
outcome
 = 
f
;

840 if(
	`a¢_isföôe
(
d
Ë=a¢_isföôe(
f
)) {

845 
	}
}

847 #i‚de‡
ASN_DISABLE_OER_SUPPORT


852 
a¢_íc_rvÆ_t


853 
	$REAL_ícode_€r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

854 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

855 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

856 c⁄° 
REAL_t
 *
°
 = 
•å
;

857 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

858 
ssize_t
 
Àn_Àn
;

860 if(!
°
 || !°->
buf
 || !
td
)

861 
ASN__ENCODE_FAILED
;

863 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
€r_c⁄°øöts
;

864 if(
c⁄°øöts
 && c⁄°øöts->
vÆue
.
width
 != 0) {

867 
ASN__ENCODE_FAILED
;

871 
Àn_Àn
 = 
	`€r_£rülize_Àngth
(
°
->
size
, 
cb
, 
≠p_key
);

872 if(
Àn_Àn
 < 0 || 
	`cb
(
°
->
buf
, st->
size
, 
≠p_key
) < 0) {

873 
ASN__ENCODE_FAILED
;

875 
î
.
ícoded
 = 
Àn_Àn
 + 
°
->
size
;

876 
	`ASN__ENCODED_OK
(
î
);

878 
	}
}

880 
a¢_dec_rvÆ_t


881 
	$REAL_decode_€r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

882 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

883 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

884 c⁄° *
±r
, 
size_t
 
size
) {

885 
a¢_dec_rvÆ_t
 
ok
 = {
RC_OK
, 0};

886 
REAL_t
 *
°
;

887 
uöt8_t
 *
buf
;

888 
ssize_t
 
Àn_Àn
;

889 
size_t
 
ªÆ_body_Àn
;

891 ()
›t_codec_˘x
;

893 if(!
c⁄°øöts
Ëc⁄°øöt†
td
->
ícodög_c⁄°øöts
.
€r_c⁄°øöts
;

894 if(
c⁄°øöts
 && c⁄°øöts->
vÆue
.
width
 != 0) {

897 
ASN__DECODE_FAILED
;

900 
Àn_Àn
 = 
	`€r_„tch_Àngth
(
±r
, 
size
, &
ªÆ_body_Àn
);

901 if(
Àn_Àn
 < 0Ë
ASN__DECODE_FAILED
;

902 if(
Àn_Àn
 =0Ë
ASN__DECODE_STARVED
;

904 
±r
 = (c⁄° *Ìå + 
Àn_Àn
;

905 
size
 -
Àn_Àn
;

907 if(
ªÆ_body_Àn
 > 
size
Ë
ASN__DECODE_STARVED
;

909 
buf
 = 
	`CALLOC
(1, 
ªÆ_body_Àn
 + 1);

910 if(!
buf
Ë
ASN__DECODE_FAILED
;

912 if(!(
°
 = *
•å
)) {

913 
°
 = (*
•å
 = 
	`CALLOC
(1, (
REAL_t
)));

914 if(!
°
) {

915 
	`FREEMEM
(
buf
);

916 
ASN__DECODE_FAILED
;

919 
	`FREEMEM
(
°
->
buf
);

922 
	`mem˝y
(
buf
, 
±r
, 
ªÆ_body_Àn
);

923 
buf
[
ªÆ_body_Àn
] = '\0';

925 
°
->
buf
 = buf;

926 
°
->
size
 = 
ªÆ_body_Àn
;

928 
ok
.
c⁄sumed
 = 
Àn_Àn
 + 
ªÆ_body_Àn
;

929  
ok
;

930 
	}
}

934 #i‚de‡
ASN_DISABLE_PER_SUPPORT


936 
a¢_dec_rvÆ_t


937 
	$REAL_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

938 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

939 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

940 
a¢_≥r_d©a_t
 *
pd
) {

941 ()
c⁄°øöts
;

942  
	`OCTET_STRING_decode_u≥r
(
›t_codec_˘x
, 
td
, 0, 
•å
, 
pd
);

943 
	}
}

945 
a¢_íc_rvÆ_t


946 
	$REAL_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

947 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

948 
a¢_≥r_ouç_t
 *
po
) {

949 ()
c⁄°øöts
;

950  
	`OCTET_STRING_ícode_u≥r
(
td
, 0, 
•å
, 
po
);

951 
	}
}

953 
a¢_dec_rvÆ_t


954 
	$REAL_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

955 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

956 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

957 **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

958 ()
c⁄°øöts
;

959  
	`OCTET_STRING_decode_≠î
(
›t_codec_˘x
, 
td
, 0, 
•å
, 
pd
);

960 
	}
}

962 
a¢_íc_rvÆ_t


963 
	$REAL_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

964 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

965 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

966 ()
c⁄°øöts
;

967  
	`OCTET_STRING_ícode_≠î
(
td
, 0, 
•å
, 
po
);

968 
	}
}

972 
a¢_øndom_fûl_ªsu…_t


973 
	$REAL_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

974 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

975 
size_t
 
max_Àngth
) {

976 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 1};

977 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

978 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

979 c⁄° 
vÆues
[] = {

980 0, -0.0, -1, 1, -
M_E
, M_E, -3.14, 3.14, -
M_PI
, M_PI, -255, 255,

987 -
FLT_MIN
, FLT_MIN,

988 -
FLT_MAX
, FLT_MAX,

989 -
DBL_MIN
, DBL_MIN,

990 -
DBL_MAX
, DBL_MAX,

991 #ifde‡ 
FLT_TRUE_MIN


992 -
FLT_TRUE_MIN
, FLT_TRUE_MIN,

994 #ifde‡ 
DBL_TRUE_MIN


995 -
DBL_TRUE_MIN
, DBL_TRUE_MIN,

997 
INFINITY
, -INFINITY, 
NAN
};

998 
REAL_t
 *
°
;

999 
d
;

1001 ()
c⁄°øöts
;

1003 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

1005 
d
 = 
vÆues
[
	`a¢_øndom_bëwìn
(0, (values) / (values[0]) - 1)];

1007 if(*
•å
) {

1008 
°
 = *
•å
;

1010 
°
 = (
REAL_t
*)(*
•å
 = 
	`CALLOC
(1, (REAL_t)));

1011 if(!
°
) {

1012  
ªsu…_Áûed
;

1016 if(
	`a¢_doubÀ2REAL
(
°
, 
d
)) {

1017 if(
°
 =*
•å
) {

1018 
	`ASN_STRUCT_RESET
(*
td
, 
°
);

1020 
	`ASN_STRUCT_FREE
(*
td
, 
°
);

1022  
ªsu…_Áûed
;

1025 
ªsu…_ok
.
Àngth
 = 
°
->
size
;

1026  
ªsu…_ok
;

1027 
	}
}

	@RIC-EventTriggerStyle-Item.c

8 
	~"RIC-EvítTriggîStyÀ-Iãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_RIC_EvítTriggîStyÀ_Iãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_EvítTriggîStyÀ_Iãm
, 
ric_EvítTriggîStyÀ_Ty≥
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_RIC_StyÀ_Ty≥
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_EvítTriggîStyÀ_Iãm
, 
ric_EvítTriggîStyÀ_Name
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_RIC_StyÀ_Name
,

29 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_EvítTriggîStyÀ_Iãm
, 
ric_EvítTriggîF‹m©_Ty≥
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_RIC_F‹m©_Ty≥
,

39 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
[] = {

40 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

42 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_RIC_EvítTriggîStyÀ_Iãm_èg2ñ_1
[] = {

43 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

44 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

45 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

47 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_RIC_EvítTriggîStyÀ_Iãm_•ecs_1
 = {

48 (
RIC_EvítTriggîStyÀ_Iãm
),

49 
off£tof
(
RIC_EvítTriggîStyÀ_Iãm
, 
_a¢_˘x
),

50 
a¢_MAP_RIC_EvítTriggîStyÀ_Iãm_èg2ñ_1
,

55 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RIC_EvítTriggîStyÀ_Iãm
 = {

58 &
a¢_OP_SEQUENCE
,

59 
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
,

60 (
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
)

61 /(
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
[0]),

62 
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
,

63 (
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
)

64 /(
a¢_DEF_RIC_EvítTriggîStyÀ_Iãm_ègs_1
[0]),

65 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

66 
a¢_MBR_RIC_EvítTriggîStyÀ_Iãm_1
,

68 &
a¢_SPC_RIC_EvítTriggîStyÀ_Iãm_•ecs_1


	@RIC-Format-Type.c

8 
	~"RIC-F‹m©-Ty≥.h
"

14 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RIC_F‹m©_Ty≥_ègs_1
[] = {

15 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

17 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RIC_F‹m©_Ty≥
 = {

20 &
a¢_OP_N©iveI¡egî
,

21 
a¢_DEF_RIC_F‹m©_Ty≥_ègs_1
,

22 (
a¢_DEF_RIC_F‹m©_Ty≥_ègs_1
)

23 /(
a¢_DEF_RIC_F‹m©_Ty≥_ègs_1
[0]),

24 
a¢_DEF_RIC_F‹m©_Ty≥_ègs_1
,

25 (
a¢_DEF_RIC_F‹m©_Ty≥_ègs_1
)

26 /(
a¢_DEF_RIC_F‹m©_Ty≥_ègs_1
[0]),

27 { 0, 0, 
N©iveI¡egî_c⁄°øöt
 },

	@RIC-ReportStyle-Item.c

8 
	~"RIC-Rï‹tStyÀ-Iãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_RIC_Rï‹tStyÀ_Iãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
ric_Rï‹tStyÀ_Ty≥
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_RIC_StyÀ_Ty≥
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
ric_Rï‹tStyÀ_Name
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_RIC_StyÀ_Name
,

29 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
ric_A˘i⁄F‹m©_Ty≥
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_RIC_F‹m©_Ty≥
,

38 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
mósInfo_A˘i⁄_Li°
),

39 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

41 &
a¢_DEF_MósuªmítInfo_A˘i⁄_Li°
,

47 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
ric_Indiˇti⁄HódîF‹m©_Ty≥
),

48 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

50 &
a¢_DEF_RIC_F‹m©_Ty≥
,

56 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
ric_Indiˇti⁄MesßgeF‹m©_Ty≥
),

57 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

59 &
a¢_DEF_RIC_F‹m©_Ty≥
,

66 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
[] = {

67 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

69 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_RIC_Rï‹tStyÀ_Iãm_èg2ñ_1
[] = {

70 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

71 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

72 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

73 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

74 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

75 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 }

77 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_RIC_Rï‹tStyÀ_Iãm_•ecs_1
 = {

78 (
RIC_Rï‹tStyÀ_Iãm
),

79 
off£tof
(
RIC_Rï‹tStyÀ_Iãm
, 
_a¢_˘x
),

80 
a¢_MAP_RIC_Rï‹tStyÀ_Iãm_èg2ñ_1
,

85 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RIC_Rï‹tStyÀ_Iãm
 = {

88 &
a¢_OP_SEQUENCE
,

89 
a¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
,

90 (
a¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
)

91 /(
a¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
[0]),

92 
a¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
,

93 (
a¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
)

94 /(
a¢_DEF_RIC_Rï‹tStyÀ_Iãm_ègs_1
[0]),

95 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

96 
a¢_MBR_RIC_Rï‹tStyÀ_Iãm_1
,

98 &
a¢_SPC_RIC_Rï‹tStyÀ_Iãm_•ecs_1


	@RIC-Style-Name.c

8 
	~"RIC-StyÀ-Name.h
"

10 c⁄° 
	g≥rmôãd_Æphabë_èbÀ_1
[256] = {

20 c⁄° 
	g≥rmôãd_Æphabë_code2vÆue_1
[74] = {

28 
	$check_≥rmôãd_Æphabë_1
(c⁄° *
•å
) {

29 c⁄° *
èbÀ
 = 
≥rmôãd_Æphabë_èbÀ_1
;

31 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

32 c⁄° 
uöt8_t
 *
ch
 = 
°
->
buf
;

33 c⁄° 
uöt8_t
 *
íd
 = 
ch
 + 
°
->
size
;

35 ; 
ch
 < 
íd
; ch++) {

36 
uöt8_t
 
cv
 = *
ch
;

37 if(!
èbÀ
[
cv
])  -1;

40 
	}
}

43 
	$RIC_StyÀ_Name_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

44 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

45 c⁄° 
PröèbÀSåög_t
 *
°
 = (c⁄° PröèbÀSåög_à*)
•å
;

46 
size_t
 
size
;

48 if(!
•å
) {

49 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

51 
td
->
«me
, 
__FILE__
, 
__LINE__
);

55 
size
 = 
°
->size;

57 if((
size
 >= 1 && size <= 150)

58 && !
	`check_≥rmôãd_Æphabë_1
(
°
)) {

62 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

64 
td
->
«me
, 
__FILE__
, 
__LINE__
);

67 
	}
}

69 
	$a¢_PER_MAP_RIC_StyÀ_Name_1_v2c
(
vÆue
) {

70 if(
vÆue
 >(
≥rmôãd_Æphabë_èbÀ_1
)/(permitted_alphabet_table_1[0]))

72  
≥rmôãd_Æphabë_èbÀ_1
[
vÆue
] - 1;

73 
	}
}

74 
	$a¢_PER_MAP_RIC_StyÀ_Name_1_c2v
(
code
) {

75 if(
code
 >(
≥rmôãd_Æphabë_code2vÆue_1
)/(permitted_alphabet_code2value_1[0]))

77  
≥rmôãd_Æphabë_code2vÆue_1
[
code
];

78 
	}
}

83 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_RIC_StyÀ_Name_c⁄°r_1
 
	gCC_NOTUSED
 = {

84 { 
APC_CONSTRAINED
, 7, 7, 32, 122 } ,

85 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 8, 8, 1, 150 } ,

86 
a¢_PER_MAP_RIC_StyÀ_Name_1_v2c
,

87 
a¢_PER_MAP_RIC_StyÀ_Name_1_c2v


89 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RIC_StyÀ_Name_ègs_1
[] = {

90 (
ASN_TAG_CLASS_UNIVERSAL
 | (19 << 2))

92 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RIC_StyÀ_Name
 = {

95 &
a¢_OP_PröèbÀSåög
,

96 
a¢_DEF_RIC_StyÀ_Name_ègs_1
,

97 (
a¢_DEF_RIC_StyÀ_Name_ègs_1
)

98 /(
a¢_DEF_RIC_StyÀ_Name_ègs_1
[0]),

99 
a¢_DEF_RIC_StyÀ_Name_ègs_1
,

100 (
a¢_DEF_RIC_StyÀ_Name_ègs_1
)

101 /(
a¢_DEF_RIC_StyÀ_Name_ègs_1
[0]),

102 { 0, &
a¢_PER_ty≥_RIC_StyÀ_Name_c⁄°r_1
, 
RIC_StyÀ_Name_c⁄°øöt
 },

	@RIC-Style-Type.c

8 
	~"RIC-StyÀ-Ty≥.h
"

14 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RIC_StyÀ_Ty≥_ègs_1
[] = {

15 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

17 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RIC_StyÀ_Ty≥
 = {

20 &
a¢_OP_N©iveI¡egî
,

21 
a¢_DEF_RIC_StyÀ_Ty≥_ègs_1
,

22 (
a¢_DEF_RIC_StyÀ_Ty≥_ègs_1
)

23 /(
a¢_DEF_RIC_StyÀ_Ty≥_ègs_1
[0]),

24 
a¢_DEF_RIC_StyÀ_Ty≥_ègs_1
,

25 (
a¢_DEF_RIC_StyÀ_Ty≥_ègs_1
)

26 /(
a¢_DEF_RIC_StyÀ_Ty≥_ègs_1
[0]),

27 { 0, 0, 
N©iveI¡egî_c⁄°øöt
 },

	@RRC-MessageID.c

8 
	~"RRC-MesßgeID.h
"

10 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_ºcTy≥_c⁄°r_2
 
	gCC_NOTUSED
 = {

11 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

15 
a¢_TYPE_membî_t
 
	ga¢_MBR_ºcTy≥_2
[] = {

16 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RRC_MesßgeID__ºcTy≥
, 
choi˚
.
lTE
),

17 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

19 &
a¢_DEF_RRC˛ass_LTE
,

25 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RRC_MesßgeID__ºcTy≥
, 
choi˚
.
nR
),

26 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

28 &
a¢_DEF_RRC˛ass_NR
,

35 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_ºcTy≥_èg2ñ_2
[] = {

36 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

37 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

39 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_ºcTy≥_•ecs_2
 = {

40 (
RRC_MesßgeID__ºcTy≥
),

41 
off£tof
(
RRC_MesßgeID__ºcTy≥
, 
_a¢_˘x
),

42 
off£tof
(
RRC_MesßgeID__ºcTy≥
, 
¥e£¡
),

43 (((
RRC_MesßgeID__ºcTy≥
 *)0)->
¥e£¡
),

44 
a¢_MAP_ºcTy≥_èg2ñ_2
,

50 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_ºcTy≥_2
 = {

53 &
a¢_OP_CHOICE
,

58 { 0, &
a¢_PER_ty≥_ºcTy≥_c⁄°r_2
, 
CHOICE_c⁄°øöt
 },

59 
a¢_MBR_ºcTy≥_2
,

61 &
a¢_SPC_ºcTy≥_•ecs_2


64 
a¢_TYPE_membî_t
 
	ga¢_MBR_RRC_MesßgeID_1
[] = {

65 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RRC_MesßgeID
, 
ºcTy≥
),

66 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

68 &
a¢_DEF_ºcTy≥_2
,

74 { 
ATF_NOFLAGS
, 0, 
off£tof
(
RRC_MesßgeID
, 
mesßgeID
),

75 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

77 &
a¢_DEF_N©iveI¡egî
,

84 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RRC_MesßgeID_ègs_1
[] = {

85 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

87 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_RRC_MesßgeID_èg2ñ_1
[] = {

88 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

89 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

91 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_RRC_MesßgeID_•ecs_1
 = {

92 (
RRC_MesßgeID
),

93 
off£tof
(
RRC_MesßgeID
, 
_a¢_˘x
),

94 
a¢_MAP_RRC_MesßgeID_èg2ñ_1
,

99 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RRC_MesßgeID
 = {

102 &
a¢_OP_SEQUENCE
,

103 
a¢_DEF_RRC_MesßgeID_ègs_1
,

104 (
a¢_DEF_RRC_MesßgeID_ègs_1
)

105 /(
a¢_DEF_RRC_MesßgeID_ègs_1
[0]),

106 
a¢_DEF_RRC_MesßgeID_ègs_1
,

107 (
a¢_DEF_RRC_MesßgeID_ègs_1
)

108 /(
a¢_DEF_RRC_MesßgeID_ègs_1
[0]),

109 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

110 
a¢_MBR_RRC_MesßgeID_1
,

112 &
a¢_SPC_RRC_MesßgeID_•ecs_1


	@RRCclass-LTE.c

8 
	~"RRC˛ass-LTE.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_RRC˛ass_LTE_c⁄°r_1
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 4, 4, 0, 11 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_RRC˛ass_LTE_vÆue2íum_1
[] = {

34 c⁄° 
	ga¢_MAP_RRC˛ass_LTE_íum2vÆue_1
[] = {

49 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_RRC˛ass_LTE_•ecs_1
 = {

50 
a¢_MAP_RRC˛ass_LTE_vÆue2íum_1
,

51 
a¢_MAP_RRC˛ass_LTE_íum2vÆue_1
,

58 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RRC˛ass_LTE_ègs_1
[] = {

59 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

61 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RRC˛ass_LTE
 = {

64 &
a¢_OP_N©iveEnumî©ed
,

65 
a¢_DEF_RRC˛ass_LTE_ègs_1
,

66 (
a¢_DEF_RRC˛ass_LTE_ègs_1
)

67 /(
a¢_DEF_RRC˛ass_LTE_ègs_1
[0]),

68 
a¢_DEF_RRC˛ass_LTE_ègs_1
,

69 (
a¢_DEF_RRC˛ass_LTE_ègs_1
)

70 /(
a¢_DEF_RRC˛ass_LTE_ègs_1
[0]),

71 { 0, &
a¢_PER_ty≥_RRC˛ass_LTE_c⁄°r_1
, 
N©iveEnumî©ed_c⁄°øöt
 },

73 &
a¢_SPC_RRC˛ass_LTE_•ecs_1


	@RRCclass-NR.c

8 
	~"RRC˛ass-NR.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_RRC˛ass_NR_c⁄°r_1
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 7 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_RRC˛ass_NR_vÆue2íum_1
[] = {

30 c⁄° 
	ga¢_MAP_RRC˛ass_NR_íum2vÆue_1
[] = {

41 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_RRC˛ass_NR_•ecs_1
 = {

42 
a¢_MAP_RRC˛ass_NR_vÆue2íum_1
,

43 
a¢_MAP_RRC˛ass_NR_íum2vÆue_1
,

50 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_RRC˛ass_NR_ègs_1
[] = {

51 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

53 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_RRC˛ass_NR
 = {

56 &
a¢_OP_N©iveEnumî©ed
,

57 
a¢_DEF_RRC˛ass_NR_ègs_1
,

58 (
a¢_DEF_RRC˛ass_NR_ègs_1
)

59 /(
a¢_DEF_RRC˛ass_NR_ègs_1
[0]),

60 
a¢_DEF_RRC˛ass_NR_ègs_1
,

61 (
a¢_DEF_RRC˛ass_NR_ègs_1
)

62 /(
a¢_DEF_RRC˛ass_NR_ègs_1
[0]),

63 { 0, &
a¢_PER_ty≥_RRC˛ass_NR_c⁄°r_1
, 
N©iveEnumî©ed_c⁄°øöt
 },

65 &
a¢_SPC_RRC˛ass_NR_•ecs_1


	@S-NSSAI.c

8 
	~"S-NSSAI.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_S_NSSAI_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
S_NSSAI
, 
sST
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_SST
,

20 { 
ATF_POINTER
, 1, 
off£tof
(
S_NSSAI
, 
sD
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_SD
,

30 c⁄° 
	ga¢_MAP_S_NSSAI_oms_1
[] = { 1 };

31 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_S_NSSAI_ègs_1
[] = {

32 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

34 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_S_NSSAI_èg2ñ_1
[] = {

35 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

36 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

38 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_S_NSSAI_•ecs_1
 = {

39 (
S_NSSAI
),

40 
off£tof
(
S_NSSAI
, 
_a¢_˘x
),

41 
a¢_MAP_S_NSSAI_èg2ñ_1
,

43 
a¢_MAP_S_NSSAI_oms_1
,

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_S_NSSAI
 = {

50 &
a¢_OP_SEQUENCE
,

51 
a¢_DEF_S_NSSAI_ègs_1
,

52 (
a¢_DEF_S_NSSAI_ègs_1
)

53 /(
a¢_DEF_S_NSSAI_ègs_1
[0]),

54 
a¢_DEF_S_NSSAI_ègs_1
,

55 (
a¢_DEF_S_NSSAI_ègs_1
)

56 /(
a¢_DEF_S_NSSAI_ègs_1
[0]),

57 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

58 
a¢_MBR_S_NSSAI_1
,

60 &
a¢_SPC_S_NSSAI_•ecs_1


	@SD.c

8 
	~"SD.h
"

11 
	$SD_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 3)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_SD_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 3, 3 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_SD_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_SD
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_SD_ègs_1
,

53 (
a¢_DEF_SD_ègs_1
)

54 /(
a¢_DEF_SD_ègs_1
[0]),

55 
a¢_DEF_SD_ègs_1
,

56 (
a¢_DEF_SD_ègs_1
)

57 /(
a¢_DEF_SD_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_SD_c⁄°r_1
, 
SD_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@SST.c

8 
	~"SST.h
"

11 
	$SST_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 1)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_SST_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 1, 1 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_SST_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_SST
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_SST_ègs_1
,

53 (
a¢_DEF_SST_ègs_1
)

54 /(
a¢_DEF_SST_ègs_1
[0]),

55 
a¢_DEF_SST_ègs_1
,

56 (
a¢_DEF_SST_ègs_1
)

57 /(
a¢_DEF_SST_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_SST_c⁄°r_1
, 
SST_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@ServingCell-ARFCN.c

8 
	~"SîvögCñl-ARFCN.h
"

10 
	~"NR-ARFCN.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_SîvögCñl_ARFCN_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

13 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_SîvögCñl_ARFCN_1
[] = {

17 { 
ATF_POINTER
, 0, 
off£tof
(
SîvögCñl_ARFCN
, 
choi˚
.
nR
),

18 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

20 &
a¢_DEF_NR_ARFCN
,

26 { 
ATF_NOFLAGS
, 0, 
off£tof
(
SîvögCñl_ARFCN
, 
choi˚
.
eUTRA
),

27 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

29 &
a¢_DEF_E_UTRA_ARFCN
,

36 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_SîvögCñl_ARFCN_èg2ñ_1
[] = {

37 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

38 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

40 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_SîvögCñl_ARFCN_•ecs_1
 = {

41 (
SîvögCñl_ARFCN
),

42 
off£tof
(
SîvögCñl_ARFCN
, 
_a¢_˘x
),

43 
off£tof
(
SîvögCñl_ARFCN
, 
¥e£¡
),

44 (((
SîvögCñl_ARFCN
 *)0)->
¥e£¡
),

45 
a¢_MAP_SîvögCñl_ARFCN_èg2ñ_1
,

50 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_SîvögCñl_ARFCN
 = {

53 &
a¢_OP_CHOICE
,

58 { 0, &
a¢_PER_ty≥_SîvögCñl_ARFCN_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

59 
a¢_MBR_SîvögCñl_ARFCN_1
,

61 &
a¢_SPC_SîvögCñl_ARFCN_•ecs_1


	@ServingCell-PCI.c

8 
	~"SîvögCñl-PCI.h
"

10 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_SîvögCñl_PCI_c⁄°r_1
 
	gCC_NOTUSED
 = {

11 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 1, 1, 0, 1 } ,

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

15 
a¢_TYPE_membî_t
 
	ga¢_MBR_SîvögCñl_PCI_1
[] = {

16 { 
ATF_NOFLAGS
, 0, 
off£tof
(
SîvögCñl_PCI
, 
choi˚
.
nR
),

17 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

19 &
a¢_DEF_NR_PCI
,

25 { 
ATF_NOFLAGS
, 0, 
off£tof
(
SîvögCñl_PCI
, 
choi˚
.
eUTRA
),

26 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

28 &
a¢_DEF_E_UTRA_PCI
,

35 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_SîvögCñl_PCI_èg2ñ_1
[] = {

36 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

37 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

39 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_SîvögCñl_PCI_•ecs_1
 = {

40 (
SîvögCñl_PCI
),

41 
off£tof
(
SîvögCñl_PCI
, 
_a¢_˘x
),

42 
off£tof
(
SîvögCñl_PCI
, 
¥e£¡
),

43 (((
SîvögCñl_PCI
 *)0)->
¥e£¡
),

44 
a¢_MAP_SîvögCñl_PCI_èg2ñ_1
,

49 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_SîvögCñl_PCI
 = {

52 &
a¢_OP_CHOICE
,

57 { 0, &
a¢_PER_ty≥_SîvögCñl_PCI_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

58 
a¢_MBR_SîvögCñl_PCI_1
,

60 &
a¢_SPC_SîvögCñl_PCI_•ecs_1


	@SubscriberProfileIDforRFP.c

8 
	~"Subs¸ibîProfûeIDf‹RFP.h
"

11 
	$Subs¸ibîProfûeIDf‹RFP_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 256)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_Subs¸ibîProfûeIDf‹RFP_c⁄°r_1
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
, 8, 8, 1, 256 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (2 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Subs¸ibîProfûeIDf‹RFP
 = {

50 &
a¢_OP_N©iveI¡egî
,

51 
a¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
,

52 (
a¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
)

53 /(
a¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
[0]),

54 
a¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
,

55 (
a¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
)

56 /(
a¢_DEF_Subs¸ibîProfûeIDf‹RFP_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_Subs¸ibîProfûeIDf‹RFP_c⁄°r_1
, 
Subs¸ibîProfûeIDf‹RFP_c⁄°øöt
 },

	@SupportedSULBandList.c

8 
	~"Suµ‹ãdSULB™dLi°.h
"

10 
	~"Suµ‹ãdSULFªqB™dIãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_Suµ‹ãdSULB™dLi°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 6, 6, 0, 32 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_Suµ‹ãdSULB™dLi°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_Suµ‹ãdSULFªqB™dIãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_Suµ‹ãdSULB™dLi°_•ecs_1
 = {

31 (
Suµ‹ãdSULB™dLi°
),

32 
off£tof
(
Suµ‹ãdSULB™dLi°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Suµ‹ãdSULB™dLi°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
,

40 (
a¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
)

41 /(
a¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
[0]),

42 
a¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
,

43 (
a¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
)

44 /(
a¢_DEF_Suµ‹ãdSULB™dLi°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_Suµ‹ãdSULB™dLi°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_Suµ‹ãdSULB™dLi°_1
,

48 &
a¢_SPC_Suµ‹ãdSULB™dLi°_•ecs_1


	@SupportedSULFreqBandItem.c

8 
	~"Suµ‹ãdSULFªqB™dIãm.h
"

11 
	$memb_‰eqB™dIndiˇt‹Nr_c⁄°øöt_1
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 
vÆue
;

15 if(!
•å
) {

16 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

18 
td
->
«me
, 
__FILE__
, 
__LINE__
);

22 
vÆue
 = *(c⁄° *)
•å
;

24 if((
vÆue
 >= 1 && value <= 1024)) {

28 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

30 
td
->
«me
, 
__FILE__
, 
__LINE__
);

33 
	}
}

35 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_memb_‰eqB™dIndiˇt‹Nr_c⁄°r_2
 
	gCC_NOTUSED
 = {

36 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 10, 10, 1, 1024 } ,

37 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

40 
a¢_TYPE_membî_t
 
	ga¢_MBR_Suµ‹ãdSULFªqB™dIãm_1
[] = {

41 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Suµ‹ãdSULFªqB™dIãm
, 
‰eqB™dIndiˇt‹Nr
),

42 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

44 &
a¢_DEF_N©iveI¡egî
,

46 { 0, &
a¢_PER_memb_‰eqB™dIndiˇt‹Nr_c⁄°r_2
, 
memb_‰eqB™dIndiˇt‹Nr_c⁄°øöt_1
 },

51 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
[] = {

52 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

54 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_Suµ‹ãdSULFªqB™dIãm_èg2ñ_1
[] = {

55 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

57 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_Suµ‹ãdSULFªqB™dIãm_•ecs_1
 = {

58 (
Suµ‹ãdSULFªqB™dIãm
),

59 
off£tof
(
Suµ‹ãdSULFªqB™dIãm
, 
_a¢_˘x
),

60 
a¢_MAP_Suµ‹ãdSULFªqB™dIãm_èg2ñ_1
,

65 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Suµ‹ãdSULFªqB™dIãm
 = {

68 &
a¢_OP_SEQUENCE
,

69 
a¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
,

70 (
a¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
)

71 /(
a¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
[0]),

72 
a¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
,

73 (
a¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
)

74 /(
a¢_DEF_Suµ‹ãdSULFªqB™dIãm_ègs_1
[0]),

75 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

76 
a¢_MBR_Suµ‹ãdSULFªqB™dIãm_1
,

78 &
a¢_SPC_Suµ‹ãdSULFªqB™dIãm_•ecs_1


	@TestCond-Expression.c

8 
	~"Te°C⁄d-Ex¥essi⁄.h
"

14 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_Te°C⁄d_Ex¥essi⁄_c⁄°r_1
 
	gCC_NOTUSED
 = {

15 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 4 } ,

16 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

19 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_Te°C⁄d_Ex¥essi⁄_vÆue2íum_1
[] = {

27 c⁄° 
	ga¢_MAP_Te°C⁄d_Ex¥essi⁄_íum2vÆue_1
[] = {

35 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_Te°C⁄d_Ex¥essi⁄_•ecs_1
 = {

36 
a¢_MAP_Te°C⁄d_Ex¥essi⁄_vÆue2íum_1
,

37 
a¢_MAP_Te°C⁄d_Ex¥essi⁄_íum2vÆue_1
,

44 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
[] = {

45 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Te°C⁄d_Ex¥essi⁄
 = {

50 &
a¢_OP_N©iveEnumî©ed
,

51 
a¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
,

52 (
a¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
)

53 /(
a¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
[0]),

54 
a¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
,

55 (
a¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
)

56 /(
a¢_DEF_Te°C⁄d_Ex¥essi⁄_ègs_1
[0]),

57 { 0, &
a¢_PER_ty≥_Te°C⁄d_Ex¥essi⁄_c⁄°r_1
, 
N©iveEnumî©ed_c⁄°øöt
 },

59 &
a¢_SPC_Te°C⁄d_Ex¥essi⁄_•ecs_1


	@TestCond-Type.c

8 
	~"Te°C⁄d-Ty≥.h
"

34 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_gBR_c⁄°r_2
 
	gCC_NOTUSED
 = {

35 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

36 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

39 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_aMBR_c⁄°r_5
 
	gCC_NOTUSED
 = {

40 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

44 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_isSèt_c⁄°r_8
 
	gCC_NOTUSED
 = {

45 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

46 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

49 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_isC©M_c⁄°r_11
 
	gCC_NOTUSED
 = {

50 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

51 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

54 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_rSRP_c⁄°r_14
 
	gCC_NOTUSED
 = {

55 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

56 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

59 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_rSRQ_c⁄°r_17
 
	gCC_NOTUSED
 = {

60 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 0, 0, 0, 0 } ,

61 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

64 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_Te°C⁄d_Ty≥_c⁄°r_1
 
	gCC_NOTUSED
 = {

65 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 5 } ,

66 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

69 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_gBR_vÆue2íum_2
[] = {

73 c⁄° 
	ga¢_MAP_gBR_íum2vÆue_2
[] = {

77 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_gBR_•ecs_2
 = {

78 
a¢_MAP_gBR_vÆue2íum_2
,

79 
a¢_MAP_gBR_íum2vÆue_2
,

86 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_gBR_ègs_2
[] = {

87 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

88 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

91 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_gBR_2
 = {

94 &
a¢_OP_N©iveEnumî©ed
,

95 
a¢_DEF_gBR_ègs_2
,

96 (
a¢_DEF_gBR_ègs_2
)

97 /(
a¢_DEF_gBR_ègs_2
[0]) - 1,

98 
a¢_DEF_gBR_ègs_2
,

99 (
a¢_DEF_gBR_ègs_2
)

100 /(
a¢_DEF_gBR_ègs_2
[0]),

101 { 0, &
a¢_PER_ty≥_gBR_c⁄°r_2
, 
N©iveEnumî©ed_c⁄°øöt
 },

103 &
a¢_SPC_gBR_•ecs_2


106 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_aMBR_vÆue2íum_5
[] = {

110 c⁄° 
	ga¢_MAP_aMBR_íum2vÆue_5
[] = {

114 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_aMBR_•ecs_5
 = {

115 
a¢_MAP_aMBR_vÆue2íum_5
,

116 
a¢_MAP_aMBR_íum2vÆue_5
,

123 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_aMBR_ègs_5
[] = {

124 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

125 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

128 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_aMBR_5
 = {

131 &
a¢_OP_N©iveEnumî©ed
,

132 
a¢_DEF_aMBR_ègs_5
,

133 (
a¢_DEF_aMBR_ègs_5
)

134 /(
a¢_DEF_aMBR_ègs_5
[0]) - 1,

135 
a¢_DEF_aMBR_ègs_5
,

136 (
a¢_DEF_aMBR_ègs_5
)

137 /(
a¢_DEF_aMBR_ègs_5
[0]),

138 { 0, &
a¢_PER_ty≥_aMBR_c⁄°r_5
, 
N©iveEnumî©ed_c⁄°øöt
 },

140 &
a¢_SPC_aMBR_•ecs_5


143 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_isSèt_vÆue2íum_8
[] = {

147 c⁄° 
	ga¢_MAP_isSèt_íum2vÆue_8
[] = {

151 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_isSèt_•ecs_8
 = {

152 
a¢_MAP_isSèt_vÆue2íum_8
,

153 
a¢_MAP_isSèt_íum2vÆue_8
,

160 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_isSèt_ègs_8
[] = {

161 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

162 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

165 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_isSèt_8
 = {

168 &
a¢_OP_N©iveEnumî©ed
,

169 
a¢_DEF_isSèt_ègs_8
,

170 (
a¢_DEF_isSèt_ègs_8
)

171 /(
a¢_DEF_isSèt_ègs_8
[0]) - 1,

172 
a¢_DEF_isSèt_ègs_8
,

173 (
a¢_DEF_isSèt_ègs_8
)

174 /(
a¢_DEF_isSèt_ègs_8
[0]),

175 { 0, &
a¢_PER_ty≥_isSèt_c⁄°r_8
, 
N©iveEnumî©ed_c⁄°øöt
 },

177 &
a¢_SPC_isSèt_•ecs_8


180 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_isC©M_vÆue2íum_11
[] = {

184 c⁄° 
	ga¢_MAP_isC©M_íum2vÆue_11
[] = {

188 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_isC©M_•ecs_11
 = {

189 
a¢_MAP_isC©M_vÆue2íum_11
,

190 
a¢_MAP_isC©M_íum2vÆue_11
,

197 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_isC©M_ègs_11
[] = {

198 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

199 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

202 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_isC©M_11
 = {

205 &
a¢_OP_N©iveEnumî©ed
,

206 
a¢_DEF_isC©M_ègs_11
,

207 (
a¢_DEF_isC©M_ègs_11
)

208 /(
a¢_DEF_isC©M_ègs_11
[0]) - 1,

209 
a¢_DEF_isC©M_ègs_11
,

210 (
a¢_DEF_isC©M_ègs_11
)

211 /(
a¢_DEF_isC©M_ègs_11
[0]),

212 { 0, &
a¢_PER_ty≥_isC©M_c⁄°r_11
, 
N©iveEnumî©ed_c⁄°øöt
 },

214 &
a¢_SPC_isC©M_•ecs_11


217 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_rSRP_vÆue2íum_14
[] = {

221 c⁄° 
	ga¢_MAP_rSRP_íum2vÆue_14
[] = {

225 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_rSRP_•ecs_14
 = {

226 
a¢_MAP_rSRP_vÆue2íum_14
,

227 
a¢_MAP_rSRP_íum2vÆue_14
,

234 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_rSRP_ègs_14
[] = {

235 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

236 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

239 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_rSRP_14
 = {

242 &
a¢_OP_N©iveEnumî©ed
,

243 
a¢_DEF_rSRP_ègs_14
,

244 (
a¢_DEF_rSRP_ègs_14
)

245 /(
a¢_DEF_rSRP_ègs_14
[0]) - 1,

246 
a¢_DEF_rSRP_ègs_14
,

247 (
a¢_DEF_rSRP_ègs_14
)

248 /(
a¢_DEF_rSRP_ègs_14
[0]),

249 { 0, &
a¢_PER_ty≥_rSRP_c⁄°r_14
, 
N©iveEnumî©ed_c⁄°øöt
 },

251 &
a¢_SPC_rSRP_•ecs_14


254 c⁄° 
a¢_INTEGER_íum_m≠_t
 
	ga¢_MAP_rSRQ_vÆue2íum_17
[] = {

258 c⁄° 
	ga¢_MAP_rSRQ_íum2vÆue_17
[] = {

262 c⁄° 
a¢_INTEGER_•ecifics_t
 
	ga¢_SPC_rSRQ_•ecs_17
 = {

263 
a¢_MAP_rSRQ_vÆue2íum_17
,

264 
a¢_MAP_rSRQ_íum2vÆue_17
,

271 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_rSRQ_ègs_17
[] = {

272 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

273 (
ASN_TAG_CLASS_UNIVERSAL
 | (10 << 2))

276 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_rSRQ_17
 = {

279 &
a¢_OP_N©iveEnumî©ed
,

280 
a¢_DEF_rSRQ_ègs_17
,

281 (
a¢_DEF_rSRQ_ègs_17
)

282 /(
a¢_DEF_rSRQ_ègs_17
[0]) - 1,

283 
a¢_DEF_rSRQ_ègs_17
,

284 (
a¢_DEF_rSRQ_ègs_17
)

285 /(
a¢_DEF_rSRQ_ègs_17
[0]),

286 { 0, &
a¢_PER_ty≥_rSRQ_c⁄°r_17
, 
N©iveEnumî©ed_c⁄°øöt
 },

288 &
a¢_SPC_rSRQ_•ecs_17


291 
a¢_TYPE_membî_t
 
	ga¢_MBR_Te°C⁄d_Ty≥_1
[] = {

292 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_Ty≥
, 
choi˚
.
gBR
),

293 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

295 &
a¢_DEF_gBR_2
,

301 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_Ty≥
, 
choi˚
.
aMBR
),

302 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

304 &
a¢_DEF_aMBR_5
,

310 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_Ty≥
, 
choi˚
.
isSèt
),

311 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

313 &
a¢_DEF_isSèt_8
,

319 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_Ty≥
, 
choi˚
.
isC©M
),

320 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

322 &
a¢_DEF_isC©M_11
,

328 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_Ty≥
, 
choi˚
.
rSRP
),

329 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

331 &
a¢_DEF_rSRP_14
,

337 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_Ty≥
, 
choi˚
.
rSRQ
),

338 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

340 &
a¢_DEF_rSRQ_17
,

347 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_Te°C⁄d_Ty≥_èg2ñ_1
[] = {

348 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

349 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

350 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

351 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

352 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

353 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 }

355 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_Te°C⁄d_Ty≥_•ecs_1
 = {

356 (
Te°C⁄d_Ty≥
),

357 
off£tof
(
Te°C⁄d_Ty≥
, 
_a¢_˘x
),

358 
off£tof
(
Te°C⁄d_Ty≥
, 
¥e£¡
),

359 (((
Te°C⁄d_Ty≥
 *)0)->
¥e£¡
),

360 
a¢_MAP_Te°C⁄d_Ty≥_èg2ñ_1
,

365 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Te°C⁄d_Ty≥
 = {

368 &
a¢_OP_CHOICE
,

373 { 0, &
a¢_PER_ty≥_Te°C⁄d_Ty≥_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

374 
a¢_MBR_Te°C⁄d_Ty≥_1
,

376 &
a¢_SPC_Te°C⁄d_Ty≥_•ecs_1


	@TestCond-Value.c

8 
	~"Te°C⁄d-VÆue.h
"

10 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_Te°C⁄d_VÆue_c⁄°r_1
 
	gCC_NOTUSED
 = {

11 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 5 } ,

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

15 
a¢_TYPE_membî_t
 
	ga¢_MBR_Te°C⁄d_VÆue_1
[] = {

16 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_VÆue
, 
choi˚
.
vÆueI¡
),

17 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

19 &
a¢_DEF_N©iveI¡egî
,

25 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_VÆue
, 
choi˚
.
vÆueEnum
),

26 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

28 &
a¢_DEF_N©iveI¡egî
,

34 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_VÆue
, 
choi˚
.
vÆueBoﬁ
),

35 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

37 &
a¢_DEF_BOOLEAN
,

43 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_VÆue
, 
choi˚
.
vÆueBôS
),

44 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

46 &
a¢_DEF_BIT_STRING
,

52 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_VÆue
, 
choi˚
.
vÆueO˘S
),

53 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

55 &
a¢_DEF_OCTET_STRING
,

61 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄d_VÆue
, 
choi˚
.
vÆuePπS
),

62 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

64 &
a¢_DEF_PröèbÀSåög
,

71 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_Te°C⁄d_VÆue_èg2ñ_1
[] = {

72 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

73 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

74 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

75 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

76 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

77 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 }

79 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_Te°C⁄d_VÆue_•ecs_1
 = {

80 (
Te°C⁄d_VÆue
),

81 
off£tof
(
Te°C⁄d_VÆue
, 
_a¢_˘x
),

82 
off£tof
(
Te°C⁄d_VÆue
, 
¥e£¡
),

83 (((
Te°C⁄d_VÆue
 *)0)->
¥e£¡
),

84 
a¢_MAP_Te°C⁄d_VÆue_èg2ñ_1
,

89 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Te°C⁄d_VÆue
 = {

92 &
a¢_OP_CHOICE
,

97 { 0, &
a¢_PER_ty≥_Te°C⁄d_VÆue_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

98 
a¢_MBR_Te°C⁄d_VÆue_1
,

100 &
a¢_SPC_Te°C⁄d_VÆue_•ecs_1


	@TestCondInfo.c

8 
	~"Te°C⁄dInfo.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_Te°C⁄dInfo_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄dInfo
, 
ã°Ty≥
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_Te°C⁄d_Ty≥
,

20 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄dInfo
, 
ã°Ex¥
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_Te°C⁄d_Ex¥essi⁄
,

29 { 
ATF_NOFLAGS
, 0, 
off£tof
(
Te°C⁄dInfo
, 
ã°VÆue
),

30 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

32 &
a¢_DEF_Te°C⁄d_VÆue
,

39 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_Te°C⁄dInfo_ègs_1
[] = {

40 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

42 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_Te°C⁄dInfo_èg2ñ_1
[] = {

43 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

44 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

45 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 }

47 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_Te°C⁄dInfo_•ecs_1
 = {

48 (
Te°C⁄dInfo
),

49 
off£tof
(
Te°C⁄dInfo
, 
_a¢_˘x
),

50 
a¢_MAP_Te°C⁄dInfo_èg2ñ_1
,

55 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_Te°C⁄dInfo
 = {

58 &
a¢_OP_SEQUENCE
,

59 
a¢_DEF_Te°C⁄dInfo_ègs_1
,

60 (
a¢_DEF_Te°C⁄dInfo_ègs_1
)

61 /(
a¢_DEF_Te°C⁄dInfo_ègs_1
[0]),

62 
a¢_DEF_Te°C⁄dInfo_ègs_1
,

63 (
a¢_DEF_Te°C⁄dInfo_ègs_1
)

64 /(
a¢_DEF_Te°C⁄dInfo_ègs_1
[0]),

65 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

66 
a¢_MBR_Te°C⁄dInfo_1
,

68 &
a¢_SPC_Te°C⁄dInfo_•ecs_1


	@TimeStamp.c

8 
	~"TimeSèmp.h
"

11 
	$TimeSèmp_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

12 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

13 c⁄° 
OCTET_STRING_t
 *
°
 = (c⁄° OCTET_STRING_à*)
•å
;

14 
size_t
 
size
;

16 if(!
•å
) {

17 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

19 
td
->
«me
, 
__FILE__
, 
__LINE__
);

23 
size
 = 
°
->size;

25 if((
size
 == 4)) {

29 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

31 
td
->
«me
, 
__FILE__
, 
__LINE__
);

34 
	}
}

40 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_TimeSèmp_c⁄°r_1
 
	gCC_NOTUSED
 = {

41 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

42 { 
APC_CONSTRAINED
, 0, 0, 4, 4 } ,

45 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_TimeSèmp_ègs_1
[] = {

46 (
ASN_TAG_CLASS_UNIVERSAL
 | (4 << 2))

48 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_TimeSèmp
 = {

51 &
a¢_OP_OCTET_STRING
,

52 
a¢_DEF_TimeSèmp_ègs_1
,

53 (
a¢_DEF_TimeSèmp_ègs_1
)

54 /(
a¢_DEF_TimeSèmp_ègs_1
[0]),

55 
a¢_DEF_TimeSèmp_ègs_1
,

56 (
a¢_DEF_TimeSèmp_ègs_1
)

57 /(
a¢_DEF_TimeSèmp_ègs_1
[0]),

58 { 0, &
a¢_PER_ty≥_TimeSèmp_c⁄°r_1
, 
TimeSèmp_c⁄°øöt
 },

60 &
a¢_SPC_OCTET_STRING_•ecs


	@UEID-EN-GNB.c

8 
	~"UEID-EN-GNB.h
"

10 
	~"UEID-GNB-CU-CP-E1AP-ID-Li°.h
"

11 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_EN_GNB_1
[] = {

12 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_EN_GNB
, 
m_eNB_UE_X2AP_ID
),

13 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

15 &
a¢_DEF_ENB_UE_X2AP_ID
,

21 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_EN_GNB
, 
m_eNB_UE_X2AP_ID_Exãnsi⁄
),

22 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

24 &
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄
,

30 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_EN_GNB
, 
globÆENB_ID
),

31 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

33 &
a¢_DEF_GlobÆENB_ID
,

39 { 
ATF_POINTER
, 3, 
off£tof
(
UEID_EN_GNB
, 
gNB_CU_UE_F1AP_ID
),

40 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

42 &
a¢_DEF_GNB_CU_UE_F1AP_ID
,

48 { 
ATF_POINTER
, 2, 
off£tof
(
UEID_EN_GNB
, 
gNB_CU_CP_UE_E1AP_ID_Li°
),

49 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

51 &
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°
,

57 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_EN_GNB
, 
øn_UEID
),

58 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

60 &
a¢_DEF_RANUEID
,

67 c⁄° 
	ga¢_MAP_UEID_EN_GNB_oms_1
[] = { 1, 3, 4, 5 };

68 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_EN_GNB_ègs_1
[] = {

69 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

71 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_EN_GNB_èg2ñ_1
[] = {

72 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

73 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

74 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

75 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

76 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

77 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 }

79 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_EN_GNB_•ecs_1
 = {

80 (
UEID_EN_GNB
),

81 
off£tof
(
UEID_EN_GNB
, 
_a¢_˘x
),

82 
a¢_MAP_UEID_EN_GNB_èg2ñ_1
,

84 
a¢_MAP_UEID_EN_GNB_oms_1
,

88 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_EN_GNB
 = {

91 &
a¢_OP_SEQUENCE
,

92 
a¢_DEF_UEID_EN_GNB_ègs_1
,

93 (
a¢_DEF_UEID_EN_GNB_ègs_1
)

94 /(
a¢_DEF_UEID_EN_GNB_ègs_1
[0]),

95 
a¢_DEF_UEID_EN_GNB_ègs_1
,

96 (
a¢_DEF_UEID_EN_GNB_ègs_1
)

97 /(
a¢_DEF_UEID_EN_GNB_ègs_1
[0]),

98 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

99 
a¢_MBR_UEID_EN_GNB_1
,

101 &
a¢_SPC_UEID_EN_GNB_•ecs_1


	@UEID-ENB.c

8 
	~"UEID-ENB.h
"

10 
	~"GlobÆENB-ID.h
"

11 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_ENB_1
[] = {

12 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_ENB
, 
mME_UE_S1AP_ID
),

13 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

15 &
a¢_DEF_MME_UE_S1AP_ID
,

21 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_ENB
, 
gUMMEI
),

22 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

24 &
a¢_DEF_GUMMEI
,

30 { 
ATF_POINTER
, 3, 
off£tof
(
UEID_ENB
, 
m_eNB_UE_X2AP_ID
),

31 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

33 &
a¢_DEF_ENB_UE_X2AP_ID
,

39 { 
ATF_POINTER
, 2, 
off£tof
(
UEID_ENB
, 
m_eNB_UE_X2AP_ID_Exãnsi⁄
),

40 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

42 &
a¢_DEF_ENB_UE_X2AP_ID_Exãnsi⁄
,

48 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_ENB
, 
globÆENB_ID
),

49 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

51 &
a¢_DEF_GlobÆENB_ID
,

58 c⁄° 
	ga¢_MAP_UEID_ENB_oms_1
[] = { 2, 3, 4 };

59 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_ENB_ègs_1
[] = {

60 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

62 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_ENB_èg2ñ_1
[] = {

63 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

64 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

65 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

66 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

67 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 }

69 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_ENB_•ecs_1
 = {

70 (
UEID_ENB
),

71 
off£tof
(
UEID_ENB
, 
_a¢_˘x
),

72 
a¢_MAP_UEID_ENB_èg2ñ_1
,

74 
a¢_MAP_UEID_ENB_oms_1
,

78 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_ENB
 = {

81 &
a¢_OP_SEQUENCE
,

82 
a¢_DEF_UEID_ENB_ègs_1
,

83 (
a¢_DEF_UEID_ENB_ègs_1
)

84 /(
a¢_DEF_UEID_ENB_ègs_1
[0]),

85 
a¢_DEF_UEID_ENB_ègs_1
,

86 (
a¢_DEF_UEID_ENB_ègs_1
)

87 /(
a¢_DEF_UEID_ENB_ègs_1
[0]),

88 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

89 
a¢_MBR_UEID_ENB_1
,

91 &
a¢_SPC_UEID_ENB_•ecs_1


	@UEID-GNB-CU-CP-E1AP-ID-Item.c

8 
	~"UEID-GNB-CU-CP-E1AP-ID-Iãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_CU_CP_E1AP_ID_Iãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_GNB_CU_CP_E1AP_ID_Iãm
, 
gNB_CU_CP_UE_E1AP_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GNB_CU_CP_UE_E1AP_ID
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_GNB_CU_CP_E1AP_ID_Iãm_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_GNB_CU_CP_E1AP_ID_Iãm_•ecs_1
 = {

28 (
UEID_GNB_CU_CP_E1AP_ID_Iãm
),

29 
off£tof
(
UEID_GNB_CU_CP_E1AP_ID_Iãm
, 
_a¢_˘x
),

30 
a¢_MAP_UEID_GNB_CU_CP_E1AP_ID_Iãm_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
,

40 (
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
)

41 /(
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
[0]),

42 
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
,

43 (
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
)

44 /(
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_UEID_GNB_CU_CP_E1AP_ID_Iãm_1
,

48 &
a¢_SPC_UEID_GNB_CU_CP_E1AP_ID_Iãm_•ecs_1


	@UEID-GNB-CU-CP-E1AP-ID-List.c

8 
	~"UEID-GNB-CU-CP-E1AP-ID-Li°.h
"

10 
	~"UEID-GNB-CU-CP-E1AP-ID-Iãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_UEID_GNB_CU_CP_E1AP_ID_Li°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 16, 16, 1, 65535 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_CU_CP_E1AP_ID_Li°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Iãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_UEID_GNB_CU_CP_E1AP_ID_Li°_•ecs_1
 = {

31 (
UEID_GNB_CU_CP_E1AP_ID_Li°
),

32 
off£tof
(
UEID_GNB_CU_CP_E1AP_ID_Li°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
,

40 (
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
)

41 /(
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
[0]),

42 
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
,

43 (
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
)

44 /(
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_UEID_GNB_CU_CP_E1AP_ID_Li°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_UEID_GNB_CU_CP_E1AP_ID_Li°_1
,

48 &
a¢_SPC_UEID_GNB_CU_CP_E1AP_ID_Li°_•ecs_1


	@UEID-GNB-CU-CP-F1AP-ID-Item.c

8 
	~"UEID-GNB-CU-CP-F1AP-ID-Iãm.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_CU_CP_F1AP_ID_Iãm_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_GNB_CU_CP_F1AP_ID_Iãm
, 
gNB_CU_UE_F1AP_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GNB_CU_UE_F1AP_ID
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_GNB_CU_CP_F1AP_ID_Iãm_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_GNB_CU_CP_F1AP_ID_Iãm_•ecs_1
 = {

28 (
UEID_GNB_CU_CP_F1AP_ID_Iãm
),

29 
off£tof
(
UEID_GNB_CU_CP_F1AP_ID_Iãm
, 
_a¢_˘x
),

30 
a¢_MAP_UEID_GNB_CU_CP_F1AP_ID_Iãm_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
,

40 (
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
)

41 /(
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
[0]),

42 
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
,

43 (
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
)

44 /(
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_UEID_GNB_CU_CP_F1AP_ID_Iãm_1
,

48 &
a¢_SPC_UEID_GNB_CU_CP_F1AP_ID_Iãm_•ecs_1


	@UEID-GNB-CU-F1AP-ID-List.c

8 
	~"UEID-GNB-CU-F1AP-ID-Li°.h
"

10 
	~"UEID-GNB-CU-CP-F1AP-ID-Iãm.h
"

11 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_UEID_GNB_CU_F1AP_ID_Li°_c⁄°r_1
 
	gCC_NOTUSED
 = {

12 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

13 { 
APC_CONSTRAINED
, 2, 2, 1, 4 } ,

16 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_CU_F1AP_ID_Li°_1
[] = {

17 { 
ATF_POINTER
, 0, 0,

18 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2)),

20 &
a¢_DEF_UEID_GNB_CU_CP_F1AP_ID_Iãm
,

27 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
[] = {

28 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

30 
a¢_SET_OF_•ecifics_t
 
	ga¢_SPC_UEID_GNB_CU_F1AP_ID_Li°_•ecs_1
 = {

31 (
UEID_GNB_CU_F1AP_ID_Li°
),

32 
off£tof
(
UEID_GNB_CU_F1AP_ID_Li°
, 
_a¢_˘x
),

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB_CU_F1AP_ID_Li°
 = {

38 &
a¢_OP_SEQUENCE_OF
,

39 
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
,

40 (
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
)

41 /(
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
[0]),

42 
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
,

43 (
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
)

44 /(
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°_ègs_1
[0]),

45 { 0, &
a¢_PER_ty≥_UEID_GNB_CU_F1AP_ID_Li°_c⁄°r_1
, 
SEQUENCE_OF_c⁄°øöt
 },

46 
a¢_MBR_UEID_GNB_CU_F1AP_ID_Li°_1
,

48 &
a¢_SPC_UEID_GNB_CU_F1AP_ID_Li°_•ecs_1


	@UEID-GNB-CU-UP.c

8 
	~"UEID-GNB-CU-UP.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_CU_UP_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_GNB_CU_UP
, 
gNB_CU_CP_UE_E1AP_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GNB_CU_CP_UE_E1AP_ID
,

20 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_GNB_CU_UP
, 
øn_UEID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_RANUEID
,

30 c⁄° 
	ga¢_MAP_UEID_GNB_CU_UP_oms_1
[] = { 1 };

31 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_CU_UP_ègs_1
[] = {

32 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

34 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_GNB_CU_UP_èg2ñ_1
[] = {

35 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

36 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

38 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_GNB_CU_UP_•ecs_1
 = {

39 (
UEID_GNB_CU_UP
),

40 
off£tof
(
UEID_GNB_CU_UP
, 
_a¢_˘x
),

41 
a¢_MAP_UEID_GNB_CU_UP_èg2ñ_1
,

43 
a¢_MAP_UEID_GNB_CU_UP_oms_1
,

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB_CU_UP
 = {

50 &
a¢_OP_SEQUENCE
,

51 
a¢_DEF_UEID_GNB_CU_UP_ègs_1
,

52 (
a¢_DEF_UEID_GNB_CU_UP_ègs_1
)

53 /(
a¢_DEF_UEID_GNB_CU_UP_ègs_1
[0]),

54 
a¢_DEF_UEID_GNB_CU_UP_ègs_1
,

55 (
a¢_DEF_UEID_GNB_CU_UP_ègs_1
)

56 /(
a¢_DEF_UEID_GNB_CU_UP_ègs_1
[0]),

57 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

58 
a¢_MBR_UEID_GNB_CU_UP_1
,

60 &
a¢_SPC_UEID_GNB_CU_UP_•ecs_1


	@UEID-GNB-DU.c

8 
	~"UEID-GNB-DU.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_DU_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_GNB_DU
, 
gNB_CU_UE_F1AP_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_GNB_CU_UE_F1AP_ID
,

20 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_GNB_DU
, 
øn_UEID
),

21 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

23 &
a¢_DEF_RANUEID
,

30 c⁄° 
	ga¢_MAP_UEID_GNB_DU_oms_1
[] = { 1 };

31 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_DU_ègs_1
[] = {

32 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

34 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_GNB_DU_èg2ñ_1
[] = {

35 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

36 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 }

38 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_GNB_DU_•ecs_1
 = {

39 (
UEID_GNB_DU
),

40 
off£tof
(
UEID_GNB_DU
, 
_a¢_˘x
),

41 
a¢_MAP_UEID_GNB_DU_èg2ñ_1
,

43 
a¢_MAP_UEID_GNB_DU_oms_1
,

47 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB_DU
 = {

50 &
a¢_OP_SEQUENCE
,

51 
a¢_DEF_UEID_GNB_DU_ègs_1
,

52 (
a¢_DEF_UEID_GNB_DU_ègs_1
)

53 /(
a¢_DEF_UEID_GNB_DU_ègs_1
[0]),

54 
a¢_DEF_UEID_GNB_DU_ègs_1
,

55 (
a¢_DEF_UEID_GNB_DU_ègs_1
)

56 /(
a¢_DEF_UEID_GNB_DU_ègs_1
[0]),

57 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

58 
a¢_MBR_UEID_GNB_DU_1
,

60 &
a¢_SPC_UEID_GNB_DU_•ecs_1


	@UEID-GNB.c

8 
	~"UEID-GNB.h
"

10 
	~"UEID-GNB-CU-F1AP-ID-Li°.h
"

11 
	~"UEID-GNB-CU-CP-E1AP-ID-Li°.h
"

12 
	~"GlobÆGNB-ID.h
"

13 
	~"GlobÆNGRANNodeID.h
"

14 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_GNB_1
[] = {

15 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_GNB
, 
amf_UE_NGAP_ID
),

16 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

18 &
a¢_DEF_AMF_UE_NGAP_ID
,

24 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_GNB
, 
guami
),

25 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

27 &
a¢_DEF_GUAMI
,

33 { 
ATF_POINTER
, 6, 
off£tof
(
UEID_GNB
, 
gNB_CU_UE_F1AP_ID_Li°
),

34 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

36 &
a¢_DEF_UEID_GNB_CU_F1AP_ID_Li°
,

42 { 
ATF_POINTER
, 5, 
off£tof
(
UEID_GNB
, 
gNB_CU_CP_UE_E1AP_ID_Li°
),

43 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

45 &
a¢_DEF_UEID_GNB_CU_CP_E1AP_ID_Li°
,

51 { 
ATF_POINTER
, 4, 
off£tof
(
UEID_GNB
, 
øn_UEID
),

52 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

54 &
a¢_DEF_RANUEID
,

60 { 
ATF_POINTER
, 3, 
off£tof
(
UEID_GNB
, 
m_NG_RAN_UE_XnAP_ID
),

61 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

63 &
a¢_DEF_NG_RANnodeUEXnAPID
,

69 { 
ATF_POINTER
, 2, 
off£tof
(
UEID_GNB
, 
globÆGNB_ID
),

70 (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)),

72 &
a¢_DEF_GlobÆGNB_ID
,

78 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_GNB
, 
globÆNG_RANNode_ID
),

79 (
ASN_TAG_CLASS_CONTEXT
 | (7 << 2)),

81 &
a¢_DEF_GlobÆNGRANNodeID
,

88 c⁄° 
	ga¢_MAP_UEID_GNB_oms_1
[] = { 2, 3, 4, 5, 6, 7 };

89 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_GNB_ègs_1
[] = {

90 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

92 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_GNB_èg2ñ_1
[] = {

93 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

94 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

95 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

96 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

97 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

98 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 },

99 { (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)), 6, 0, 0 },

100 { (
ASN_TAG_CLASS_CONTEXT
 | (7 << 2)), 7, 0, 0 }

102 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_GNB_•ecs_1
 = {

103 (
UEID_GNB
),

104 
off£tof
(
UEID_GNB
, 
_a¢_˘x
),

105 
a¢_MAP_UEID_GNB_èg2ñ_1
,

107 
a¢_MAP_UEID_GNB_oms_1
,

111 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_GNB
 = {

114 &
a¢_OP_SEQUENCE
,

115 
a¢_DEF_UEID_GNB_ègs_1
,

116 (
a¢_DEF_UEID_GNB_ègs_1
)

117 /(
a¢_DEF_UEID_GNB_ègs_1
[0]),

118 
a¢_DEF_UEID_GNB_ègs_1
,

119 (
a¢_DEF_UEID_GNB_ègs_1
)

120 /(
a¢_DEF_UEID_GNB_ègs_1
[0]),

121 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

122 
a¢_MBR_UEID_GNB_1
,

124 &
a¢_SPC_UEID_GNB_•ecs_1


	@UEID-NG-ENB-DU.c

8 
	~"UEID-NG-ENB-DU.h
"

10 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_NG_ENB_DU_1
[] = {

11 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_NG_ENB_DU
, 
ng_eNB_CU_UE_W1AP_ID
),

12 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

14 &
a¢_DEF_NGENB_CU_UE_W1AP_ID
,

21 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_NG_ENB_DU_ègs_1
[] = {

22 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

24 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_NG_ENB_DU_èg2ñ_1
[] = {

25 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 }

27 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_NG_ENB_DU_•ecs_1
 = {

28 (
UEID_NG_ENB_DU
),

29 
off£tof
(
UEID_NG_ENB_DU
, 
_a¢_˘x
),

30 
a¢_MAP_UEID_NG_ENB_DU_èg2ñ_1
,

35 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_NG_ENB_DU
 = {

38 &
a¢_OP_SEQUENCE
,

39 
a¢_DEF_UEID_NG_ENB_DU_ègs_1
,

40 (
a¢_DEF_UEID_NG_ENB_DU_ègs_1
)

41 /(
a¢_DEF_UEID_NG_ENB_DU_ègs_1
[0]),

42 
a¢_DEF_UEID_NG_ENB_DU_ègs_1
,

43 (
a¢_DEF_UEID_NG_ENB_DU_ègs_1
)

44 /(
a¢_DEF_UEID_NG_ENB_DU_ègs_1
[0]),

45 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

46 
a¢_MBR_UEID_NG_ENB_DU_1
,

48 &
a¢_SPC_UEID_NG_ENB_DU_•ecs_1


	@UEID-NG-ENB.c

8 
	~"UEID-NG-ENB.h
"

10 
	~"GlobÆNgENB-ID.h
"

11 
	~"GlobÆNGRANNodeID.h
"

12 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_NG_ENB_1
[] = {

13 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_NG_ENB
, 
amf_UE_NGAP_ID
),

14 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

16 &
a¢_DEF_AMF_UE_NGAP_ID
,

22 { 
ATF_NOFLAGS
, 0, 
off£tof
(
UEID_NG_ENB
, 
guami
),

23 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

25 &
a¢_DEF_GUAMI
,

31 { 
ATF_POINTER
, 4, 
off£tof
(
UEID_NG_ENB
, 
ng_eNB_CU_UE_W1AP_ID
),

32 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

34 &
a¢_DEF_NGENB_CU_UE_W1AP_ID
,

40 { 
ATF_POINTER
, 3, 
off£tof
(
UEID_NG_ENB
, 
m_NG_RAN_UE_XnAP_ID
),

41 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

43 &
a¢_DEF_NG_RANnodeUEXnAPID
,

49 { 
ATF_POINTER
, 2, 
off£tof
(
UEID_NG_ENB
, 
globÆNgENB_ID
),

50 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

52 &
a¢_DEF_GlobÆNgENB_ID
,

58 { 
ATF_POINTER
, 1, 
off£tof
(
UEID_NG_ENB
, 
globÆNG_RANNode_ID
),

59 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

61 &
a¢_DEF_GlobÆNGRANNodeID
,

68 c⁄° 
	ga¢_MAP_UEID_NG_ENB_oms_1
[] = { 2, 3, 4, 5 };

69 c⁄° 
bî_év_èg_t
 
	ga¢_DEF_UEID_NG_ENB_ègs_1
[] = {

70 (
ASN_TAG_CLASS_UNIVERSAL
 | (16 << 2))

72 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_NG_ENB_èg2ñ_1
[] = {

73 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

74 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

75 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

76 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

77 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

78 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 }

80 
a¢_SEQUENCE_•ecifics_t
 
	ga¢_SPC_UEID_NG_ENB_•ecs_1
 = {

81 (
UEID_NG_ENB
),

82 
off£tof
(
UEID_NG_ENB
, 
_a¢_˘x
),

83 
a¢_MAP_UEID_NG_ENB_èg2ñ_1
,

85 
a¢_MAP_UEID_NG_ENB_oms_1
,

89 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID_NG_ENB
 = {

92 &
a¢_OP_SEQUENCE
,

93 
a¢_DEF_UEID_NG_ENB_ègs_1
,

94 (
a¢_DEF_UEID_NG_ENB_ègs_1
)

95 /(
a¢_DEF_UEID_NG_ENB_ègs_1
[0]),

96 
a¢_DEF_UEID_NG_ENB_ègs_1
,

97 (
a¢_DEF_UEID_NG_ENB_ègs_1
)

98 /(
a¢_DEF_UEID_NG_ENB_ègs_1
[0]),

99 { 0, 0, 
SEQUENCE_c⁄°øöt
 },

100 
a¢_MBR_UEID_NG_ENB_1
,

102 &
a¢_SPC_UEID_NG_ENB_•ecs_1


	@UEID.c

8 
	~"UEID.h
"

10 
	~"UEID-GNB.h
"

11 
	~"UEID-GNB-DU.h
"

12 
	~"UEID-GNB-CU-UP.h
"

13 
	~"UEID-NG-ENB.h
"

14 
	~"UEID-NG-ENB-DU.h
"

15 
	~"UEID-EN-GNB.h
"

16 
	~"UEID-ENB.h
"

17 
a¢_≥r_c⁄°øöts_t
 
a¢_PER_ty≥_UEID_c⁄°r_1
 
	gCC_NOTUSED
 = {

18 { 
APC_CONSTRAINED
 | 
APC_EXTENSIBLE
, 3, 3, 0, 6 } ,

19 { 
APC_UNCONSTRAINED
, -1, -1, 0, 0 },

22 
a¢_TYPE_membî_t
 
	ga¢_MBR_UEID_1
[] = {

23 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
gNB_UEID
),

24 (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)),

26 &
a¢_DEF_UEID_GNB
,

32 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
gNB_DU_UEID
),

33 (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)),

35 &
a¢_DEF_UEID_GNB_DU
,

41 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
gNB_CU_UP_UEID
),

42 (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)),

44 &
a¢_DEF_UEID_GNB_CU_UP
,

50 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
ng_eNB_UEID
),

51 (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)),

53 &
a¢_DEF_UEID_NG_ENB
,

59 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
ng_eNB_DU_UEID
),

60 (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)),

62 &
a¢_DEF_UEID_NG_ENB_DU
,

68 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
í_gNB_UEID
),

69 (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)),

71 &
a¢_DEF_UEID_EN_GNB
,

77 { 
ATF_POINTER
, 0, 
off£tof
(
UEID
, 
choi˚
.
eNB_UEID
),

78 (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)),

80 &
a¢_DEF_UEID_ENB
,

87 c⁄° 
a¢_TYPE_èg2membî_t
 
	ga¢_MAP_UEID_èg2ñ_1
[] = {

88 { (
ASN_TAG_CLASS_CONTEXT
 | (0 << 2)), 0, 0, 0 },

89 { (
ASN_TAG_CLASS_CONTEXT
 | (1 << 2)), 1, 0, 0 },

90 { (
ASN_TAG_CLASS_CONTEXT
 | (2 << 2)), 2, 0, 0 },

91 { (
ASN_TAG_CLASS_CONTEXT
 | (3 << 2)), 3, 0, 0 },

92 { (
ASN_TAG_CLASS_CONTEXT
 | (4 << 2)), 4, 0, 0 },

93 { (
ASN_TAG_CLASS_CONTEXT
 | (5 << 2)), 5, 0, 0 },

94 { (
ASN_TAG_CLASS_CONTEXT
 | (6 << 2)), 6, 0, 0 }

96 
a¢_CHOICE_•ecifics_t
 
	ga¢_SPC_UEID_•ecs_1
 = {

97 (
UEID
),

98 
off£tof
(
UEID
, 
_a¢_˘x
),

99 
off£tof
(
UEID
, 
¥e£¡
),

100 (((
UEID
 *)0)->
¥e£¡
),

101 
a¢_MAP_UEID_èg2ñ_1
,

106 
a¢_TYPE_des¸ùt‹_t
 
	ga¢_DEF_UEID
 = {

109 &
a¢_OP_CHOICE
,

114 { 0, &
a¢_PER_ty≥_UEID_c⁄°r_1
, 
CHOICE_c⁄°øöt
 },

115 
a¢_MBR_UEID_1
,

117 &
a¢_SPC_UEID_•ecs_1


	@asn_SEQUENCE_OF.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_SEQUENCE_OF.h
>

8 
	$A_SEQUENCE_OF
(Ë
	ta¢_£quí˚
;

11 
	$a¢_£quí˚_dñ
(*
a¢_£quí˚_of_x
, 
numbî
, 
_do_‰ì
) {

12 
a¢_£quí˚
 *
as
 = (a¢_£quí˚ *)
a¢_£quí˚_of_x
;

14 if(
as
) {

15 *
±r
;

16 
n
;

18 if(
numbî
 < 0 ||Çumbî >
as
->
cou¡
)

21 if(
_do_‰ì
 && 
as
->
‰ì
) {

22 
±r
 = 
as
->
¨øy
[
numbî
];

24 
±r
 = 0;

30 --
as
->
cou¡
;

31 
n
 = 
numbî
;Ç < 
as
->
cou¡
;Ç++)

32 
as
->
¨øy
[
n
] =ás->array[n+1];

38 if(
±r
Ë
as
->
	`‰ì
(ptr);

40 
	}
}

	@asn_SET_OF.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_SET_OF.h
>

7 
	~<î∫o.h
>

13 
	$a¢_£t_add
(*
a¢_£t_of_x
, *
±r
) {

14 
a¢_™⁄ymous_£t_
 *
as
 = 
	`_A_SET_FROM_VOID
(
a¢_£t_of_x
);

16 if(
as
 =0 || 
±r
 == 0) {

17 
î∫o
 = 
EINVAL
;

24 if(
as
->
cou¡
 =as->
size
) {

25 
_√wsize
 = 
as
->
size
 ? (as->size << 1) : 4;

26 *
_√w_¨r
;

27 
_√w_¨r
 = 
	`REALLOC
(
as
->
¨øy
, 
_√wsize
 * (as->array[0]));

28 if(
_√w_¨r
) {

29 
as
->
¨øy
 = (**)
_√w_¨r
;

30 
as
->
size
 = 
_√wsize
;

37 
as
->
¨øy
[as->
cou¡
++] = 
±r
;

40 
	}
}

43 
	$a¢_£t_dñ
(*
a¢_£t_of_x
, 
numbî
, 
_do_‰ì
) {

44 
a¢_™⁄ymous_£t_
 *
as
 = 
	`_A_SET_FROM_VOID
(
a¢_£t_of_x
);

46 if(
as
) {

47 *
±r
;

48 if(
numbî
 < 0 ||Çumbî >
as
->
cou¡
)

51 if(
_do_‰ì
 && 
as
->
‰ì
) {

52 
±r
 = 
as
->
¨øy
[
numbî
];

54 
±r
 = 0;

57 
as
->
¨øy
[
numbî
] =ás->¨øy[--as->
cou¡
];

63 if(
±r
Ë
as
->
	`‰ì
(ptr);

65 
	}
}

71 
	$a¢_£t_em±y
(*
a¢_£t_of_x
) {

72 
a¢_™⁄ymous_£t_
 *
as
 = 
	`_A_SET_FROM_VOID
(
a¢_£t_of_x
);

74 if(
as
) {

75 if(
as
->
¨øy
) {

76 if(
as
->
‰ì
) {

77 
as
->
cou¡
--)

78 
as
->
	`‰ì
◊s->
¨øy
[as->
cou¡
]);

80 
	`FREEMEM
(
as
->
¨øy
);

81 
as
->
¨øy
 = 0;

83 
as
->
cou¡
 = 0;

84 
as
->
size
 = 0;

87 
	}
}

	@asn_application.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_≠∂iˇti⁄.h
>

7 
	~<î∫o.h
>

9 
a¢_íc_rvÆ_t
 
a¢_ícode_öã∫Æ
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

10 
a¢_å™s„r_sy¡ax
 
sy¡ax
,

11 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

12 c⁄° *
•å
,

13 
a¢_≠p_c⁄sume_byãs_f
 *
ˇŒback
,

14 *
ˇŒback_key
);

17 
	sˇŒback_cou¡_byãs_key
 {

18 
a¢_≠p_c⁄sume_byãs_f
 *
	mˇŒback
;

19 *
	mˇŒback_key
;

20 
size_t
 
	mcompuãd_size
;

27 
	$ˇŒback_cou¡_byãs_cb
(c⁄° *
d©a
, 
size_t
 
size
, *
keyp
) {

28 
ˇŒback_cou¡_byãs_key
 *
key
 = 
keyp
;

29 
ªt
;

31 
ªt
 = 
key
->
	`ˇŒback
(
d©a
, 
size
, key->
ˇŒback_key
);

32 if(
ªt
 >= 0) {

33 
key
->
compuãd_size
 +
size
;

36  
ªt
;

37 
	}
}

39 
	sovîrun_ícodî_key
 {

40 *
	mbuf„r
;

41 
size_t
 
	mbuf„r_size
;

42 
size_t
 
	mcompuãd_size
;

45 
	sdy«mic_ícodî_key
 {

46 *
	mbuf„r
;

47 
size_t
 
	mbuf„r_size
;

48 
size_t
 
	mcompuãd_size
;

51 
	sˇŒback_Áûuª_ˇtch_key
 {

52 
a¢_≠p_c⁄sume_byãs_f
 *
	mˇŒback
;

53 *
	mˇŒback_key
;

54 
	mˇŒback_Áûed
;

62 
	$ovîrun_ícodî_cb
(c⁄° *
d©a
, 
size_t
 
size
, *
keyp
) {

63 
ovîrun_ícodî_key
 *
key
 = 
keyp
;

65 if(
key
->
compuãd_size
 + 
size
 > key->
buf„r_size
) {

70 
key
->
buf„r_size
 = 0;

72 
	`mem˝y
((*)
key
->
buf„r
 + key->
compuãd_size
, 
d©a
, 
size
);

74 
key
->
compuãd_size
 +
size
;

77 
	}
}

84 
	$dy«mic_ícodî_cb
(c⁄° *
d©a
, 
size_t
 
size
, *
keyp
) {

85 
dy«mic_ícodî_key
 *
key
 = 
keyp
;

87 if(
key
->
buf„r
) {

88 if(
key
->
compuãd_size
 + 
size
 >key->
buf„r_size
) {

89 *
p
;

90 
size_t
 
√w_size
 = 
key
->
buf„r_size
;

93 
√w_size
 *= 2;

94 } 
√w_size
 <
key
->
compuãd_size
 + 
size
);

96 
p
 = 
	`REALLOC
(
key
->
buf„r
, 
√w_size
);

97 if(
p
) {

98 
key
->
buf„r
 = 
p
;

99 
key
->
buf„r_size
 = 
√w_size
;

101 
	`FREEMEM
(
key
->
buf„r
);

102 
key
->
buf„r
 = 0;

103 
key
->
buf„r_size
 = 0;

104 
key
->
compuãd_size
 +
size
;

108 
	`mem˝y
((*)
key
->
buf„r
 + key->
compuãd_size
, 
d©a
, 
size
);

111 
key
->
compuãd_size
 +
size
;

114 
	}
}

120 
	$ˇŒback_Áûuª_ˇtch_cb
(c⁄° *
d©a
, 
size_t
 
size
, *
keyp
) {

121 
ˇŒback_Áûuª_ˇtch_key
 *
key
 = 
keyp
;

122 
ªt
;

124 
ªt
 = 
key
->
	`ˇŒback
(
d©a
, 
size
, key->
ˇŒback_key
);

125 if(
ªt
 < 0) {

126 
key
->
ˇŒback_Áûed
 = 1;

129  
ªt
;

130 
	}
}

132 
a¢_íc_rvÆ_t


133 
	$a¢_ícode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

134 
a¢_å™s„r_sy¡ax
 
sy¡ax
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

135 c⁄° *
•å
, 
a¢_≠p_c⁄sume_byãs_f
 *
ˇŒback
, *
ˇŒback_key
) {

136 
ˇŒback_Áûuª_ˇtch_key
 
cb_key
;

137 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

139 if(!
ˇŒback
) {

140 
î∫o
 = 
EINVAL
;

141 
ASN__ENCODE_FAILED
;

144 
cb_key
.
ˇŒback
 = callback;

145 
cb_key
.
ˇŒback_key
 = callback_key;

146 
cb_key
.
ˇŒback_Áûed
 = 0;

148 
î
 = 
	`a¢_ícode_öã∫Æ
(
›t_codec_˘x
, 
sy¡ax
, 
td
, 
•å
,

149 
ˇŒback_Áûuª_ˇtch_cb
, &
cb_key
);

150 if(
cb_key
.
ˇŒback_Áûed
) {

151 
	`as£π
(
î
.
ícoded
 == -1);

152 
	`as£π
(
î∫o
 =
EBADF
);

153 
î∫o
 = 
EIO
;

156  
î
;

157 
	}
}

159 
a¢_íc_rvÆ_t


160 
	$a¢_ícode_to_buf„r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

161 
a¢_å™s„r_sy¡ax
 
sy¡ax
,

162 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

163 *
buf„r
, 
size_t
 
buf„r_size
) {

164 
ovîrun_ícodî_key
 
buf_key
;

165 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

167 if(
buf„r_size
 > 0 && !
buf„r
) {

168 
î∫o
 = 
EINVAL
;

169 
ASN__ENCODE_FAILED
;

172 
buf_key
.
buf„r
 = buffer;

173 
buf_key
.
buf„r_size
 = buffer_size;

174 
buf_key
.
compuãd_size
 = 0;

176 
î
 = 
	`a¢_ícode_öã∫Æ
(
›t_codec_˘x
, 
sy¡ax
, 
td
, 
•å
,

177 
ovîrun_ícodî_cb
, &
buf_key
);

179 if(
î
.
ícoded
 >0 && (
size_t
Îr.ícoded !
buf_key
.
compuãd_size
) {

180 
	`ASN_DEBUG
("a¢_ícode(Ëªtu∫ed %" 
ASN_PRI_SSIZE


181 " yëÖrodu˚d %" 
ASN_PRI_SIZE
 " bytes",

182 
î
.
ícoded
, 
buf_key
.
compuãd_size
);

183 
	`as£π
(
î
.
ícoded
 < 0 || (
size_t
Îr.ícoded =
buf_key
.
compuãd_size
);

186  
î
;

187 
	}
}

189 
a¢_ícode_to_√w_buf„r_ªsu…_t


190 
	$a¢_ícode_to_√w_buf„r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

191 
a¢_å™s„r_sy¡ax
 
sy¡ax
,

192 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
) {

193 
dy«mic_ícodî_key
 
buf_key
;

194 
a¢_ícode_to_√w_buf„r_ªsu…_t
 
ªs
;

196 
buf_key
.
buf„r_size
 = 16;

197 
buf_key
.
buf„r
 = 
	`MALLOC
(buf_key.
buf„r_size
);

198 
buf_key
.
compuãd_size
 = 0;

200 
ªs
.
ªsu…
 = 
	`a¢_ícode_öã∫Æ
(
›t_codec_˘x
, 
sy¡ax
, 
td
, 
•å
,

201 
dy«mic_ícodî_cb
, &
buf_key
);

203 if(
ªs
.
ªsu…
.
ícoded
 >= 0

204 && (
size_t
)
ªs
.
ªsu…
.
ícoded
 !
buf_key
.
compuãd_size
) {

205 
	`ASN_DEBUG
("a¢_ícode(Ëªtu∫ed %" 
ASN_PRI_SSIZE


206 " yëÖrodu˚d %" 
ASN_PRI_SIZE
 " bytes",

207 
ªs
.
ªsu…
.
ícoded
, 
buf_key
.
compuãd_size
);

208 
	`as£π
(
ªs
.
ªsu…
.
ícoded
 < 0

209 || (
size_t
)
ªs
.
ªsu…
.
ícoded
 =
buf_key
.
compuãd_size
);

212 
ªs
.
buf„r
 = 
buf_key
.buffer;

215 if(
ªs
.
buf„r
) {

216 
	`as£π
(
buf_key
.
compuãd_size
 < buf_key.
buf„r_size
);

217 ((*)
ªs
.
buf„r
)[
buf_key
.
compuãd_size
] = '\0';

220  
ªs
;

221 
	}
}

223 
a¢_íc_rvÆ_t


224 
	$a¢_ícode_öã∫Æ
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

225 
a¢_å™s„r_sy¡ax
 
sy¡ax
,

226 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

227 
a¢_≠p_c⁄sume_byãs_f
 *
ˇŒback
, *
ˇŒback_key
) {

228 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

229 
xî_ícodî_Êags_e
 
xî_Êags
 = 
XER_F_CANONICAL
;

231 ()
›t_codec_˘x
;

233 if(!
td
 || !
•å
) {

234 
î∫o
 = 
EINVAL
;

235 
ASN__ENCODE_FAILED
;

238 
sy¡ax
) {

239 
ATS_NONSTANDARD_PLAINTEXT
:

240 if(
td
->
›
->
¥öt_°ru˘
) {

241 
ˇŒback_cou¡_byãs_key
 
cb_key
;

242 
cb_key
.
ˇŒback
 = callback;

243 
cb_key
.
ˇŒback_key
 = callback_key;

244 
cb_key
.
compuãd_size
 = 0;

245 if(
td
->
›
->
	`¥öt_°ru˘
—d, 
•å
, 1, 
ˇŒback_cou¡_byãs_cb
,

246 &
cb_key
)

248 || 
	`ˇŒback_cou¡_byãs_cb
("\n", 1, &
cb_key
) < 0) {

249 
î∫o
 = 
EBADF
;

250 
î
.
ícoded
 = -1;

251 
î
.
Áûed_ty≥
 = 
td
;

252 
î
.
°ru˘uª_±r
 = 
•å
;

254 
î
.
ícoded
 = 
cb_key
.
compuãd_size
;

255 
î
.
Áûed_ty≥
 = 0;

256 
î
.
°ru˘uª_±r
 = 0;

259 
î∫o
 = 
ENOENT
;

260 
ASN__ENCODE_FAILED
;

264 
ATS_RANDOM
:

265 
î∫o
 = 
ENOENT
;

266 
ASN__ENCODE_FAILED
;

268 
ATS_BER
:

271 
ATS_DER
:

272 if(
td
->
›
->
dî_ícodî
) {

273 
î
 = 
	`dî_ícode
(
td
, 
•å
, 
ˇŒback
, 
ˇŒback_key
);

274 if(
î
.
ícoded
 == -1) {

275 if(
î
.
Áûed_ty≥
 &&Ér.Áûed_ty≥->
›
->
dî_ícodî
) {

276 
î∫o
 = 
EBADF
;

278 
î∫o
 = 
ENOENT
;

282 
î∫o
 = 
ENOENT
;

283 
ASN__ENCODE_FAILED
;

286 
ATS_CER
:

287 
î∫o
 = 
ENOENT
;

288 
ASN__ENCODE_FAILED
;

290 #ifde‡ 
ASN_DISABLE_OER_SUPPORT


291 
ATS_BASIC_OER
:

292 
ATS_CANONICAL_OER
:

293 
î∫o
 = 
ENOENT
;

294 
ASN__ENCODE_FAILED
;

297 
ATS_BASIC_OER
:

300 
ATS_CANONICAL_OER
:

301 if(
td
->
›
->
€r_ícodî
) {

302 
î
 = 
	`€r_ícode
(
td
, 
•å
, 
ˇŒback
, 
ˇŒback_key
);

303 if(
î
.
ícoded
 == -1) {

304 if(
î
.
Áûed_ty≥
 &&Ér.Áûed_ty≥->
›
->
€r_ícodî
) {

305 
î∫o
 = 
EBADF
;

307 
î∫o
 = 
ENOENT
;

311 
î∫o
 = 
ENOENT
;

312 
ASN__ENCODE_FAILED
;

317 #ifde‡ 
ASN_DISABLE_PER_SUPPORT


318 
ATS_UNALIGNED_BASIC_PER
:

319 
ATS_UNALIGNED_CANONICAL_PER
:

320 
ATS_ALIGNED_BASIC_PER
:

321 
ATS_ALIGNED_CANONICAL_PER
:

322 
î∫o
 = 
ENOENT
;

323 
ASN__ENCODE_FAILED
;

326 
ATS_UNALIGNED_BASIC_PER
:

329 
ATS_UNALIGNED_CANONICAL_PER
:

330 if(
td
->
›
->
u≥r_ícodî
) {

331 
î
 = 
	`u≥r_ícode
(
td
, 0, 
•å
, 
ˇŒback
, 
ˇŒback_key
);

332 if(
î
.
ícoded
 == -1) {

333 if(
î
.
Áûed_ty≥
 &&Ér.Áûed_ty≥->
›
->
u≥r_ícodî
) {

334 
î∫o
 = 
EBADF
;

336 
î∫o
 = 
ENOENT
;

339 
	`ASN_DEBUG
("Com∂ëêícoded i¿%ld bôs", ()
î
.
ícoded
);

340 if(
î
.
ícoded
 == 0) {

342 if(
	`ˇŒback
("\0", 1, 
ˇŒback_key
) < 0) {

343 
î∫o
 = 
EBADF
;

344 
ASN__ENCODE_FAILED
;

346 
î
.
ícoded
 = 8;

349 
î
.
ícoded
 = (er.encoded + 7) >> 3;

352 
î∫o
 = 
ENOENT
;

353 
ASN__ENCODE_FAILED
;

356 
ATS_ALIGNED_BASIC_PER
:

359 
ATS_ALIGNED_CANONICAL_PER
:

360 if(
td
->
›
->
≠î_ícodî
) {

361 
î
 = 
	`≠î_ícode
(
td
, 0, 
•å
, 
ˇŒback
, 
ˇŒback_key
);

362 if(
î
.
ícoded
 == -1) {

363 if(
î
.
Áûed_ty≥
 &&Ér.Áûed_ty≥->
›
->
≠î_ícodî
) {

364 
î∫o
 = 
EBADF
;

366 
î∫o
 = 
ENOENT
;

369 
	`ASN_DEBUG
("Com∂ëêícoded i¿%ld bôs", ()
î
.
ícoded
);

370 if(
î
.
ícoded
 == 0) {

372 if(
	`ˇŒback
("\0", 1, 
ˇŒback_key
) < 0) {

373 
î∫o
 = 
EBADF
;

374 
ASN__ENCODE_FAILED
;

376 
î
.
ícoded
 = 8;

379 
î
.
ícoded
 = (er.encoded + 7) >> 3;

382 
î∫o
 = 
ENOENT
;

383 
ASN__ENCODE_FAILED
;

388 
ATS_BASIC_XER
:

390 
xî_Êags
 &~
XER_F_CANONICAL
;

391 
xî_Êags
 |
XER_F_BASIC
;

393 
ATS_CANONICAL_XER
:

394 if(
td
->
›
->
xî_ícodî
) {

395 
î
 = 
	`xî_ícode
(
td
, 
•å
, 
xî_Êags
, 
ˇŒback
, 
ˇŒback_key
);

396 if(
î
.
ícoded
 == -1) {

397 if(
î
.
Áûed_ty≥
 &&Ér.Áûed_ty≥->
›
->
xî_ícodî
) {

398 
î∫o
 = 
EBADF
;

400 
î∫o
 = 
ENOENT
;

404 
î∫o
 = 
ENOENT
;

405 
ASN__ENCODE_FAILED
;

410 
î∫o
 = 
ENOENT
;

411 
ASN__ENCODE_FAILED
;

414  
î
;

415 
	}
}

417 
a¢_dec_rvÆ_t


418 
	$a¢_decode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

419 
a¢_å™s„r_sy¡ax
 
sy¡ax
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

420 **
•å
, c⁄° *
buf„r
, 
size_t
 
size
) {

421 if(!
td
 || !td->
›
 || !
•å
 || (
size
 && !
buf„r
)) {

422 
ASN__DECODE_FAILED
;

425 
sy¡ax
) {

426 
ATS_CER
:

427 
ATS_NONSTANDARD_PLAINTEXT
:

429 
î∫o
 = 
ENOENT
;

430 
ASN__DECODE_FAILED
;

432 
ATS_RANDOM
:

433 if(!
td
->
›
->
øndom_fûl
) {

434 
ASN__DECODE_FAILED
;

436 if(
	`a¢_øndom_fûl
(
td
, 
•å
, 16000) == 0) {

437 
a¢_dec_rvÆ_t
 
ªt
 = {
RC_OK
, 0};

438  
ªt
;

440 
ASN__DECODE_FAILED
;

445 
ATS_DER
:

446 
ATS_BER
:

447  
	`bî_decode
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
);

449 
ATS_BASIC_OER
:

450 
ATS_CANONICAL_OER
:

451 #ifde‡ 
ASN_DISABLE_OER_SUPPORT


452 
î∫o
 = 
ENOENT
;

453 
ASN__DECODE_FAILED
;

455  
	`€r_decode
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
);

458 
ATS_UNALIGNED_BASIC_PER
:

459 
ATS_UNALIGNED_CANONICAL_PER
:

460 #ifde‡ 
ASN_DISABLE_PER_SUPPORT


461 
î∫o
 = 
ENOENT
;

462 
ASN__DECODE_FAILED
;

464  
	`u≥r_decode_com∂ëe
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
);

467 
ATS_ALIGNED_BASIC_PER
:

468 
ATS_ALIGNED_CANONICAL_PER
:

469 #ifde‡ 
ASN_DISABLE_PER_SUPPORT


470 
î∫o
 = 
ENOENT
;

471 
ASN__DECODE_FAILED
;

473  
	`≠î_decode_com∂ëe
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
);

476 
ATS_BASIC_XER
:

477 
ATS_CANONICAL_XER
:

478  
	`xî_decode
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
);

480 
	}
}

	@asn_bit_data.c

6 
	~<a¢_sy°em.h
>

7 
	~<a¢_öã∫Æ.h
>

8 
	~<a¢_bô_d©a.h
>

14 
a¢_bô_d©a_t
 *

15 
	$a¢_bô_d©a_√w_c⁄tiguous
(c⁄° *
d©a
, 
size_t
 
size_bôs
) {

16 
size_t
 
size_byãs
 = (
size_bôs
 + 7) / 8;

17 
a¢_bô_d©a_t
 *
pd
;

18 
uöt8_t
 *
byãs
;

21 
pd
 = 
	`CALLOC
(1, (*pdË+ 
size_byãs
 + 1);

22 if(!
pd
) {

23  
NULL
;

25 
byãs
 = (*)(((*)
pd
) + (*pd));

26 
	`mem˝y
(
byãs
, 
d©a
, 
size_byãs
);

27 
byãs
[
size_byãs
] = 0;

28 
pd
->
buf„r
 = 
byãs
;

29 
pd
->
nboff
 = 0;

30 
pd
->
nbôs
 = 
size_bôs
;

32  
pd
;

33 
	}
}

37 
	$a¢_bô_d©a_°rög
(
a¢_bô_d©a_t
 *
pd
) {

38 
buf
[2][32];

39 
n
;

40 
n
 = (n+1) % 2;

41 
	`¢¥ötf
(
buf
[
n
], (buf[n]),

42 "{m=%" 
ASN_PRI_SIZE
 " span %" ASN_PRI_SIZE "[%" ASN_PRI_SIZE

43 "..%" 
ASN_PRI_SIZE
 "] (%" ASN_PRI_SIZE ")}",

44 
pd
->
moved
, ((
uöçå_t
)’d->
buf„r
Ë& 0xf),Öd->
nboff
,Öd->
nbôs
,

45 
pd
->
nbôs
 -Öd->
nboff
);

46  
buf
[
n
];

47 
	}
}

50 
	$a¢_gë_undo
(
a¢_bô_d©a_t
 *
pd
, 
nbôs
) {

51 if((
ssize_t
)
pd
->
nboff
 < 
nbôs
) {

52 
	`as£π
((
ssize_t
)
pd
->
nboff
 < 
nbôs
);

54 
pd
->
nboff
 -
nbôs
;

55 
pd
->
moved
 -
nbôs
;

57 
	}
}

62 
öt32_t


63 
	$a¢_gë_„w_bôs
(
a¢_bô_d©a_t
 *
pd
, 
nbôs
) {

64 
size_t
 
off
;

65 
ssize_t
 
∆e·
;

66 
uöt32_t
 
accum
;

67 c⁄° 
uöt8_t
 *
buf
;

69 if(
nbôs
 < 0)

72 
∆e·
 = 
pd
->
nbôs
 -Öd->
nboff
;

73 if(
nbôs
 > 
∆e·
) {

74 
öt32_t
 
èûv
, 
vhód
;

75 if(!
pd
->
ªfûl
 || 
nbôs
 > 31)  -1;

77 
	`ASN_DEBUG
("ObtainÅheÑest %d bits (want %d)",

78 ()
∆e·
, ()
nbôs
);

79 
èûv
 = 
	`a¢_gë_„w_bôs
(
pd
, 
∆e·
);

80 if(
èûv
 < 0)  -1;

82 if(
pd
->
	`ªfûl
(pd))

84 
nbôs
 -
∆e·
;

85 
vhód
 = 
	`a¢_gë_„w_bôs
(
pd
, 
nbôs
);

87 
èûv
 = (èûv << 
nbôs
Ë| 
vhód
;

88  
èûv
;

94 if(
pd
->
nboff
 >= 8) {

95 
pd
->
buf„r
 +’d->
nboff
 >> 3);

96 
pd
->
nbôs
 -’d->
nboff
 & ~0x07);

97 
pd
->
nboff
 &= 0x07;

99 
pd
->
moved
 +
nbôs
;

100 
pd
->
nboff
 +
nbôs
;

101 
off
 = 
pd
->
nboff
;

102 
buf
 = 
pd
->
buf„r
;

107 if(
off
 <= 8)

108 
accum
 = 
nbôs
 ? (
buf
[0]Ë>> (8 - 
off
) : 0;

109 if(
off
 <= 16)

110 
accum
 = ((
buf
[0] << 8Ë+ buf[1]Ë>> (16 - 
off
);

111 if(
off
 <= 24)

112 
accum
 = ((
buf
[0] << 16Ë+ (buf[1] << 8Ë+ buf[2]Ë>> (24 - 
off
);

113 if(
off
 <= 31)

114 
accum
 = (((
uöt32_t
)
buf
[0] << 24) + (buf[1] << 16)

115 + (
buf
[2] << 8Ë+ (buf[3])Ë>> (32 - 
off
);

116 if(
nbôs
 <= 31) {

117 
a¢_bô_d©a_t
 
çd
 = *
pd
;

119 
	`a¢_gë_undo
(&
çd
, 
nbôs
);

123 
accum
 = 
	`a¢_gë_„w_bôs
(&
çd
, 
nbôs
 - 24) << 24;

124 
accum
 |
	`a¢_gë_„w_bôs
(&
çd
, 24);

126 
	`a¢_gë_undo
(
pd
, 
nbôs
);

130 
accum
 &(((
uöt32_t
)1 << 
nbôs
) - 1);

132 
	`ASN_DEBUG
(" [PER got %2d<=%2d bits => span %d %+ld[%d..%d]:%02x (%d) => 0x%x]",

133 ()
nbôs
, ()
∆e·
,

134 ()
pd
->
moved
,

135 ((()
pd
->
buf„r
) & 0xf),

136 ()
pd
->
nboff
, (Ìd->
nbôs
,

137 ((
pd
->
buf„r
 !
NULL
)?pd->buffer[0]:0),

138 ()(
pd
->
nbôs
 -Öd->
nboff
),

139 ()
accum
);

141  
accum
;

142 
	}
}

148 
	$a¢_gë_m™y_bôs
(
a¢_bô_d©a_t
 *
pd
, 
uöt8_t
 *
d°
, 
Æright
, 
nbôs
) {

149 
öt32_t
 
vÆue
;

151 if(
Æright
 && (
nbôs
 & 7)) {

153 
vÆue
 = 
	`a¢_gë_„w_bôs
(
pd
, 
nbôs
 & 0x07);

154 if(
vÆue
 < 0)  -1;

155 *
d°
++ = 
vÆue
;

156 
nbôs
 &= ~7;

159 
nbôs
) {

160 if(
nbôs
 >= 24) {

161 
vÆue
 = 
	`a¢_gë_„w_bôs
(
pd
, 24);

162 if(
vÆue
 < 0)  -1;

163 *(
d°
++Ë
vÆue
 >> 16;

164 *(
d°
++Ë
vÆue
 >> 8;

165 *(
d°
++Ë
vÆue
;

166 
nbôs
 -= 24;

168 
vÆue
 = 
	`a¢_gë_„w_bôs
(
pd
, 
nbôs
);

169 if(
vÆue
 < 0)  -1;

170 if(
nbôs
 & 7) {

171 
vÆue
 <<8 - (
nbôs
 & 7),

172 
nbôs
 += 8 - (nbits & 7);

173 if(
nbôs
 > 24)

174 *
d°
++ = 
vÆue
 >> 24;

176 if(
nbôs
 > 16)

177 *
d°
++ = 
vÆue
 >> 16;

178 if(
nbôs
 > 8)

179 *
d°
++ = 
vÆue
 >> 8;

180 *
d°
++ = 
vÆue
;

186 
	}
}

192 
	$a¢_put_„w_bôs
(
a¢_bô_ouç_t
 *
po
, 
uöt32_t
 
bôs
, 
obôs
) {

193 
size_t
 
off
;

194 
size_t
 
omsk
;

195 
uöt8_t
 *
buf
;

197 if(
obôs
 <= 0 || obits >= 32)  obits ? -1 : 0;

199 
	`ASN_DEBUG
("[PERÖut %d bits %xÅo %p+%d bits]",

200 
obôs
, ()
bôs
, (*)
po
->
buf„r
, (Ìo->
nboff
);

205 if(
po
->
nboff
 >= 8) {

206 
po
->
buf„r
 +’o->
nboff
 >> 3);

207 
po
->
nbôs
 -’o->
nboff
 & ~0x07);

208 
po
->
nboff
 &= 0x07;

214 if(
po
->
nboff
 + 
obôs
 >Öo->
nbôs
) {

215 
size_t
 
com∂ëe_byãs
;

216 if(!
po
->
buf„r
Ëpo->buf„∏po->
tmp•a˚
;

217 
com∂ëe_byãs
 = (
po
->
buf„r
 -Öo->
tmp•a˚
);

218 
	`ASN_DEBUG
("[PER output %ld complete + %ld]",

219 ()
com∂ëe_byãs
, ()
po
->
Êushed_byãs
);

220 if(
po
->
	`ouçut
’o->
tmp•a˚
, 
com∂ëe_byãs
,Öo->
›_key
) < 0)

222 if(
po
->
nboff
)

223 
po
->
tmp•a˚
[0] =Öo->
buf„r
[0];

224 
po
->
buf„r
 =Öo->
tmp•a˚
;

225 
po
->
nbôs
 = 8 * ’o->
tmp•a˚
);

226 
po
->
Êushed_byãs
 +
com∂ëe_byãs
;

232 
buf
 = 
po
->
buf„r
;

233 
omsk
 = ~((1 << (8 - 
po
->
nboff
)) - 1);

234 
off
 = (
po
->
nboff
 + 
obôs
);

237 
bôs
 &(((
uöt32_t
)1 << 
obôs
) - 1);

239 
	`ASN_DEBUG
("[PER ouà%d %u/%x (t=%d,o=%dË%x&%x=%x]", 
obôs
,

240 ()
bôs
, ()bits,

241 ()
po
->
nboff
, ()
off
,

242 
buf
[0], ()(
omsk
&0xff),

243 ()(
buf
[0] & 
omsk
));

245 if(
off
 <= 8)

246 
po
->
nboff
 = 
off
,

247 
bôs
 <<(8 - 
off
),

248 
buf
[0] = (buf[0] & 
omsk
Ë| 
bôs
;

249 if(
off
 <= 16)

250 
po
->
nboff
 = 
off
,

251 
bôs
 <<(16 - 
off
),

252 
buf
[0] = (buf[0] & 
omsk
Ë| (
bôs
 >> 8),

253 
buf
[1] = 
bôs
;

254 if(
off
 <= 24)

255 
po
->
nboff
 = 
off
,

256 
bôs
 <<(24 - 
off
),

257 
buf
[0] = (buf[0] & 
omsk
Ë| (
bôs
 >> 16),

258 
buf
[1] = 
bôs
 >> 8,

259 
buf
[2] = 
bôs
;

260 if(
off
 <= 31)

261 
po
->
nboff
 = 
off
,

262 
bôs
 <<(32 - 
off
),

263 
buf
[0] = (buf[0] & 
omsk
Ë| (
bôs
 >> 24),

264 
buf
[1] = 
bôs
 >> 16,

265 
buf
[2] = 
bôs
 >> 8,

266 
buf
[3] = 
bôs
;

268 if(
	`a¢_put_„w_bôs
(
po
, 
bôs
 >> (
obôs
 - 24), 24))  -1;

269 if(
	`a¢_put_„w_bôs
(
po
, 
bôs
, 
obôs
 - 24))  -1;

272 
	`ASN_DEBUG
("[PER out %u/%x => %02x buf+%ld]",

273 ()
bôs
, ()bôs, 
buf
[0],

274 ()(
po
->
buf„r
 -Öo->
tmp•a˚
));

277 
	}
}

284 
	$a¢_put_m™y_bôs
(
a¢_bô_ouç_t
 *
po
, c⁄° 
uöt8_t
 *
§c
, 
nbôs
) {

286 
nbôs
) {

287 
uöt32_t
 
vÆue
;

289 if(
nbôs
 >= 24) {

290 
vÆue
 = (
§c
[0] << 16) | (src[1] << 8) | src[2];

291 
§c
 += 3;

292 
nbôs
 -= 24;

293 if(
	`a¢_put_„w_bôs
(
po
, 
vÆue
, 24))

296 
vÆue
 = 
§c
[0];

297 if(
nbôs
 > 8)

298 
vÆue
 = (vÆuê<< 8Ë| 
§c
[1];

299 if(
nbôs
 > 16)

300 
vÆue
 = (vÆuê<< 8Ë| 
§c
[2];

301 if(
nbôs
 & 0x07)

302 
vÆue
 >>(8 - (
nbôs
 & 0x07));

303 if(
	`a¢_put_„w_bôs
(
po
, 
vÆue
, 
nbôs
))

310 
	}
}

314 
	$a¢_put_Æig√d_Êush
(
a¢_bô_ouç_t
 *
po
) {

315 
uöt32_t
 
unu£d_bôs
 = (0x7 & (8 - (
po
->
nboff
 & 0x07)));

316 
size_t
 
com∂ëe_byãs
 =

317 (
po
->
buf„r
 ?Öo->buf„∏-Öo->
tmp•a˚
 : 0Ë+ (’o->
nboff
 + 7) >> 3);

319 if(
unu£d_bôs
) {

320 
po
->
buf„r
[po->
nboff
 >> 3] &~0u << 
unu£d_bôs
;

323 if(
po
->
	`ouçut
’o->
tmp•a˚
, 
com∂ëe_byãs
,Öo->
›_key
) < 0) {

326 
po
->
buf„r
 =Öo->
tmp•a˚
;

327 
po
->
nboff
 = 0;

328 
po
->
nbôs
 = 8 * ’o->
tmp•a˚
);

329 
po
->
Êushed_byãs
 +
com∂ëe_byãs
;

332 
	}
}

	@asn_codecs_prim.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_codecs_¥im.h
>

7 
	~<î∫o.h
>

12 
a¢_dec_rvÆ_t


13 
	$bî_decode_¥imôive
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

14 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

15 c⁄° *
buf_±r
, 
size_t
 
size
, 
èg_mode
) {

16 
ASN__PRIMITIVE_TYPE_t
 *
°
 = (ASN__PRIMITIVE_TYPE_à*)*
•å
;

17 
a¢_dec_rvÆ_t
 
rvÆ
;

18 
bî_év_Àn_t
 
Àngth
 = 0;

23 if(
°
 =
NULL
) {

24 
°
 = (
ASN__PRIMITIVE_TYPE_t
 *)
	`CALLOC
(1, (*st));

25 if(
°
 =
NULL
Ë
ASN__DECODE_FAILED
;

26 *
•å
 = (*)
°
;

29 
	`ASN_DEBUG
("Decoding %sásÖlainÖrimitive (tm=%d)",

30 
td
->
«me
, 
èg_mode
);

35 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 0, 
buf_±r
, 
size
,

36 
èg_mode
, 0, &
Àngth
, 0);

37 if(
rvÆ
.
code
 !
RC_OK
)

38  
rvÆ
;

40 
	`ASN_DEBUG
("%†Àngth i†%d byãs", 
td
->
«me
, ()
Àngth
);

45 
buf_±r
 = ((c⁄° *)buf_±rË+ 
rvÆ
.
c⁄sumed
;

46 
size
 -
rvÆ
.
c⁄sumed
;

47 if(
Àngth
 > (
bî_év_Àn_t
)
size
) {

48 
rvÆ
.
code
 = 
RC_WMORE
;

49 
rvÆ
.
c⁄sumed
 = 0;

50  
rvÆ
;

53 
°
->
size
 = ()
Àngth
;

55 if((
°
->
size
Ë!(
Àngth
)

56 && (
bî_év_Àn_t
)
°
->
size
 !
Àngth
) {

57 
°
->
size
 = 0;

58 
ASN__DECODE_FAILED
;

61 
°
->
buf
 = (
uöt8_t
 *)
	`MALLOC
(
Àngth
 + 1);

62 if(!
°
->
buf
) {

63 
°
->
size
 = 0;

64 
ASN__DECODE_FAILED
;

67 
	`mem˝y
(
°
->
buf
, 
buf_±r
, 
Àngth
);

68 
°
->
buf
[
Àngth
] = '\0';

70 
rvÆ
.
code
 = 
RC_OK
;

71 
rvÆ
.
c⁄sumed
 +
Àngth
;

73 
	`ASN_DEBUG
("Took %ld/%ld bytesÅoÉncode %s",

74 ()
rvÆ
.
c⁄sumed
,

75 ()
Àngth
, 
td
->
«me
);

77  
rvÆ
;

78 
	}
}

83 
a¢_íc_rvÆ_t


84 
	$dî_ícode_¥imôive
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

85 
èg_mode
, 
bî_év_èg_t
 
èg
,

86 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

87 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

88 c⁄° 
ASN__PRIMITIVE_TYPE_t
 *
°
 = (c⁄° ASN__PRIMITIVE_TYPE_à*)
•å
;

90 
	`ASN_DEBUG
("%s %sásáÖrimitiveÅype (tm=%d)",

91 
cb
?"Encodög":"E°im©ög", 
td
->
«me
, 
èg_mode
);

93 
îvÆ
.
ícoded
 = 
	`dî_wrôe_ègs
(
td
, 
°
->
size
, 
èg_mode
, 0, 
èg
,

94 
cb
, 
≠p_key
);

95 
	`ASN_DEBUG
("%†wrŸêèg†%d", 
td
->
«me
, ()
îvÆ
.
ícoded
);

96 if(
îvÆ
.
ícoded
 == -1) {

97 
îvÆ
.
Áûed_ty≥
 = 
td
;

98 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

99  
îvÆ
;

102 if(
cb
 && 
°
->
buf
) {

103 if(
	`cb
(
°
->
buf
, st->
size
, 
≠p_key
) < 0) {

104 
îvÆ
.
ícoded
 = -1;

105 
îvÆ
.
Áûed_ty≥
 = 
td
;

106 
îvÆ
.
°ru˘uª_±r
 = 
•å
;

107  
îvÆ
;

110 
	`as£π
(
°
->
buf
 || st->
size
 == 0);

113 
îvÆ
.
ícoded
 +
°
->
size
;

114 
	`ASN__ENCODED_OK
(
îvÆ
);

115 
	}
}

118 
	$ASN__PRIMITIVE_TYPE_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

119 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

120 
ASN__PRIMITIVE_TYPE_t
 *
°
 = (ASN__PRIMITIVE_TYPE_à*)
•å
;

122 if(!
td
 || !
•å
)

125 
	`ASN_DEBUG
("Fªeög %†a†®¥imôivêty≥", 
td
->
«me
);

127 if(
°
->
buf
)

128 
	`FREEMEM
(
°
->
buf
);

130 
mëhod
) {

131 
ASFM_FREE_EVERYTHING
:

132 
	`FREEMEM
(
•å
);

134 
ASFM_FREE_UNDERLYING
:

136 
ASFM_FREE_UNDERLYING_AND_RESET
:

137 
	`mem£t
(
•å
, 0, (
ASN__PRIMITIVE_TYPE_t
));

140 
	}
}

146 
	sxdp_¨g_s
 {

147 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
	mty≥_des¸ùt‹
;

148 *
	m°ru˘_key
;

149 
xî_¥imôive_body_decodî_f
 *
	m¥im_body_decodî
;

150 
	mdecoded_somëhög
;

151 
	mw™t_m‹e
;

160 
	$xî_decode__u√x≥˘ed_èg
(*
key
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

161 
xdp_¨g_s
 *
¨g
 = (xdp_¨g_†*)
key
;

162 
xî_pbd_rvÆ
 
bªt
;

167 
	`as£π
(
chunk_size
 && ((c⁄° *)
chunk_buf
)[0] == 0x3c);

172 if(
¨g
->
decoded_somëhög
)

175 
bªt
 = 
¨g
->
	`¥im_body_decodî
◊rg->
ty≥_des¸ùt‹
,

176 
¨g
->
°ru˘_key
, 
chunk_buf
, 
chunk_size
);

177 
bªt
) {

178 
XPBD_SYSTEM_FAILURE
:

179 
XPBD_DECODER_LIMIT
:

180 
XPBD_BROKEN_ENCODING
:

182 
XPBD_BODY_CONSUMED
:

184 
¨g
->
decoded_somëhög
 = 1;

186 
XPBD_NOT_BODY_IGNORE
:

191 
	}
}

193 
ssize_t


194 
	$xî_decode__¥imôive_body
(*
key
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
, 
have_m‹e
) {

195 
xdp_¨g_s
 *
¨g
 = (xdp_¨g_†*)
key
;

196 
xî_pbd_rvÆ
 
bªt
;

197 
size_t
 
Àad_w•_size
;

199 if(
¨g
->
decoded_somëhög
) {

200 if(
	`xî_whôe•a˚_•™
(
chunk_buf
, 
chunk_size
) == chunk_size) {

206  
chunk_size
;

214 if(!
have_m‹e
) {

223 
¨g
->
w™t_m‹e
 = 1;

227 
Àad_w•_size
 = 
	`xî_whôe•a˚_•™
(
chunk_buf
, 
chunk_size
);

228 
chunk_buf
 = (c⁄° *)chunk_bu‡+ 
Àad_w•_size
;

229 
chunk_size
 -
Àad_w•_size
;

231 
bªt
 = 
¨g
->
	`¥im_body_decodî
◊rg->
ty≥_des¸ùt‹
,

232 
¨g
->
°ru˘_key
, 
chunk_buf
, 
chunk_size
);

233 
bªt
) {

234 
XPBD_SYSTEM_FAILURE
:

235 
XPBD_DECODER_LIMIT
:

236 
XPBD_BROKEN_ENCODING
:

238 
XPBD_BODY_CONSUMED
:

240 
¨g
->
decoded_somëhög
 = 1;

242 
XPBD_NOT_BODY_IGNORE
:

243  
Àad_w•_size
 + 
chunk_size
;

247 
	}
}

250 
a¢_dec_rvÆ_t


251 
	$xî_decode_¥imôive
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

252 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

253 
size_t
 
°ru˘_size
, c⁄° *
›t_m«me
,

254 c⁄° *
buf_±r
, 
size_t
 
size
,

255 
xî_¥imôive_body_decodî_f
 *
¥im_body_decodî
) {

256 c⁄° *
xml_èg
 = 
›t_m«me
 ? o±_m«mê: 
td
->xml_tag;

257 
a¢_°ru˘_˘x_t
 
s_˘x
;

258 
xdp_¨g_s
 
s_¨g
;

259 
a¢_dec_rvÆ_t
 
rc
;

264 if(!*
•å
) {

265 *
•å
 = 
	`CALLOC
(1, 
°ru˘_size
);

266 if(!*
•å
Ë
ASN__DECODE_FAILED
;

269 
	`mem£t
(&
s_˘x
, 0, (s_ctx));

270 
s_¨g
.
ty≥_des¸ùt‹
 = 
td
;

271 
s_¨g
.
°ru˘_key
 = *
•å
;

272 
s_¨g
.
¥im_body_decodî
 =Örim_body_decoder;

273 
s_¨g
.
decoded_somëhög
 = 0;

274 
s_¨g
.
w™t_m‹e
 = 0;

276 
rc
 = 
	`xî_decode_gíîÆ
(
›t_codec_˘x
, &
s_˘x
, &
s_¨g
,

277 
xml_èg
, 
buf_±r
, 
size
,

278 
xî_decode__u√x≥˘ed_èg
, 
xî_decode__¥imôive_body
);

279 
rc
.
code
) {

280 
RC_OK
:

281 if(!
s_¨g
.
decoded_somëhög
) {

282 
ch
;

283 
	`ASN_DEBUG
("Primitive body isÇotÑecognized, "

290 if(
	`¥im_body_decodî
(
s_¨g
.
ty≥_des¸ùt‹
,

291 
s_¨g
.
°ru˘_key
, &
ch
, 0)

292 !
XPBD_BODY_CONSUMED
) {

296 
ASN__DECODE_FAILED
;

300 
RC_WMORE
:

305 
rc
.
c⁄sumed
 = 0;

307 
RC_FAIL
:

308 
rc
.
c⁄sumed
 = 0;

309 if(
s_¨g
.
w™t_m‹e
)

310 
rc
.
code
 = 
RC_WMORE
;

312 
ASN__DECODE_FAILED
;

315  
rc
;

316 
	}
}

	@asn_internal.c

1 
	~<a¢_öã∫Æ.h
>

3 
ssize_t


4 
	$a¢__f‹m©_to_ˇŒback
((*
cb
)(c⁄° *, 
size_t
, *
key
), *key,

5 c⁄° *
fmt
, ...) {

6 
s¸©ch
[64];

7 *
buf
 = 
s¸©ch
;

8 
size_t
 
buf_size
 = (
s¸©ch
);

9 
wrŸe
;

10 
cb_ªt
;

13 
va_li°
 
¨gs
;

14 
	`va_°¨t
(
¨gs
, 
fmt
);

16 
wrŸe
 = 
	`v¢¥ötf
(
buf
, 
buf_size
, 
fmt
, 
¨gs
);

17 if(
wrŸe
 < (
ssize_t
)
buf_size
) {

18 if(
wrŸe
 < 0) {

19 if(
buf
 !
s¸©ch
Ë
	`FREEMEM
(buf);

20 
	`va_íd
(
¨gs
);

26 
buf_size
 <<= 1;

27 if(
buf
 =
s¸©ch
) {

28 
buf
 = 
	`MALLOC
(
buf_size
);

29 if(!
buf
Ë{ 
	`va_íd
(
¨gs
);  -1; }

31 *
p
 = 
	`REALLOC
(
buf
, 
buf_size
);

32 if(!
p
) {

33 
	`FREEMEM
(
buf
);

34 
	`va_íd
(
¨gs
);

37 
buf
 = 
p
;

41 
cb_ªt
 = 
	`cb
(
buf
, 
wrŸe
, 
key
);

42 if(
buf
 !
s¸©ch
Ë
	`FREEMEM
(buf);

43 if(
cb_ªt
 < 0) {

47  
wrŸe
;

48 
	}
}

	@asn_random_fill.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<a¢_øndom_fûl.h
>

8 
	~<c⁄°r_TYPE.h
>

11 
	$a¢_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_s
 *
td
, **
°ru˘_±r
,

12 
size_t
 
Àngth
) {

14 if(
td
 &&Åd->
›
->
øndom_fûl
) {

15 
a¢_øndom_fûl_ªsu…_t
 
ªs
 =

16 
td
->
›
->
	`øndom_fûl
—d, 
°ru˘_±r
, 0, 
Àngth
);

17  (
ªs
.
code
 =
ARFILL_OK
) ? 0 : -1;

21 
	}
}

23 
uötmax_t


24 
	$a¢__ötmax_ønge
(
ötmax_t
 
lb
, i¡max_à
ub
) {

25 
	`as£π
(
lb
 <
ub
);

26 if((
ub
 < 0Ë=(
lb
 < 0)) {

27  
ub
 - 
lb
;

28 } if(
lb
 < 0) {

29  1 + ((
uötmax_t
)
ub
 + (uötmax_t)-(
lb
 + 1));

31 
	`as£π
(!"Unreachable");

34 
	}
}

36 
ötmax_t


37 
	$a¢_øndom_bëwìn
(
ötmax_t
 
lb
, i¡max_à
rb
) {

38 if(
lb
 =
rb
) {

39  
lb
;

41 c⁄° 
uötmax_t
 
ötmax_max
 = ((~(uintmax_t)0) >> 1);

42 
uötmax_t
 
ønge
 = 
	`a¢__ötmax_ønge
(
lb
, 
rb
);

43 
uötmax_t
 
vÆue
 = 0;

44 
uötmax_t
 
gŸ_íå›y
 = 0;

46 
	`as£π
(
RAND_MAX
 > 0xffffff);

47 
	`as£π
(
ønge
 < 
ötmax_max
);

49 ; 
gŸ_íå›y
 < 
ønge
;) {

50 
gŸ_íå›y
 = (got_entropy << 24) | 0xffffff;

51 
vÆue
 = (vÆuê<< 24Ë| (
	`øndom
() % 0xffffff);

54  
lb
 + (
ötmax_t
)(
vÆue
 % (
ønge
 + 1));

56 
	}
}

	@ber_decoder.c

5 
	~<a¢_öã∫Æ.h
>

7 #unde‡
ADVANCE


8 
	#ADVANCE
(
num_byãs
) do { \

9 
size_t
 
num
 = 
num_byãs
; \

10 
±r
 = ((c⁄° *ÌåË+ 
num
; \

11 
size
 -
num
; \

12 
c⁄sumed_my£lf
 +
num
; \

13 } 0)

	)

14 #unde‡
RETURN


15 
	#RETURN
(
_code
) do { \

16 
a¢_dec_rvÆ_t
 
rvÆ
; \

17 
rvÆ
.
code
 = 
_code
; \

18 if(
›t_˘x
Ë›t_˘x->
°ï
 = step; \

19 if(
_code
 =
RC_OK
 || 
›t_˘x
) \

20 
rvÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
; \

22 
rvÆ
.
c⁄sumed
 = 0; \

23  
rvÆ
; \

24 } 0)

	)

29 
a¢_dec_rvÆ_t


30 
	$bî_decode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

31 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
, **
°ru˘_±r
,

32 c⁄° *
±r
, 
size_t
 
size
) {

33 
a¢_codec_˘x_t
 
s_codec_˘x
;

39 if(
›t_codec_˘x
) {

40 if(
›t_codec_˘x
->
max_°ack_size
) {

41 
s_codec_˘x
 = *
›t_codec_˘x
;

42 
›t_codec_˘x
 = &
s_codec_˘x
;

46 
	`mem£t
(&
s_codec_˘x
, 0, (s_codec_ctx));

47 
s_codec_˘x
.
max_°ack_size
 = 
ASN__DEFAULT_STACK_MAX
;

48 
›t_codec_˘x
 = &
s_codec_˘x
;

54  
ty≥_des¸ùt‹
->
›
->
	`bî_decodî
(
›t_codec_˘x
,Åype_descriptor,

55 
°ru˘_±r
,

56 
±r
, 
size
,

59 
	}
}

64 
a¢_dec_rvÆ_t


65 
	$bî_check_ègs
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

66 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, 
a¢_°ru˘_˘x_t
 *
›t_˘x
,

67 c⁄° *
±r
, 
size_t
 
size
, 
èg_mode
, 
œ°_èg_f‹m
,

68 
bî_év_Àn_t
 *
œ°_Àngth
, *
›t_év_f‹m
) {

69 
ssize_t
 
c⁄sumed_my£lf
 = 0;

70 
ssize_t
 
èg_Àn
;

71 
ssize_t
 
Àn_Àn
;

72 
bî_év_èg_t
 
év_èg
;

73 
bî_év_Àn_t
 
év_Àn
;

74 
bî_év_Àn_t
 
limô_Àn
 = -1;

75 
ex≥˘_00_ãrmö©‹s
 = 0;

76 
év_c⁄°r
 = -1;

77 
°ï
 = 
›t_˘x
 ? opt_ctx->step : 0;

78 
ègno
;

83 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

84 
	`RETURN
(
RC_FAIL
);

108 
ègno
 = 
°ï


109 + (
èg_mode
==1?-1:0)

111 
	`ASN_DEBUG
("ber_check_tags(%s, size=%ld,Åm=%d, step=%d,Åagno=%d)",

112 
td
->
«me
, ()
size
, 
èg_mode
, 
°ï
, 
ègno
);

115 if(
èg_mode
 =0 && 
ègno
 =()
td
->
ègs_cou¡
) {

121 
èg_Àn
 = 
	`bî_„tch_èg
(
±r
, 
size
, &
év_èg
);

122 
èg_Àn
) {

123 -1: 
	`RETURN
(
RC_FAIL
);

124 0: 
	`RETURN
(
RC_WMORE
);

126 
év_c⁄°r
 = 
	`BER_TLV_CONSTRUCTED
(
±r
);

127 
Àn_Àn
 = 
	`bî_„tch_Àngth
(
év_c⁄°r
,

128 (c⁄° *)
±r
 + 
èg_Àn
, 
size
 -Åag_Àn, &
év_Àn
);

129 
Àn_Àn
) {

130 -1: 
	`RETURN
(
RC_FAIL
);

131 0: 
	`RETURN
(
RC_WMORE
);

133 
	`ASN_DEBUG
("Advancing %ld in ANY case",

134 ()(
èg_Àn
 + 
Àn_Àn
));

135 
	`ADVANCE
(
èg_Àn
 + 
Àn_Àn
);

137 
	`as£π
(
ègno
 < ()
td
->
ègs_cou¡
);

139 ()
ègno
;Åagnÿ< ()
td
->
ègs_cou¡
;Åagno++, 
°ï
++) {

144 
èg_Àn
 = 
	`bî_„tch_èg
(
±r
, 
size
, &
év_èg
);

145 
	`ASN_DEBUG
("FetchingÅag from {%p,%ld}: "

147 
±r
, ()
size
,

148 ()
èg_Àn
, 
°ï
, 
ègno
,

149 
	`bî_év_èg_°rög
(
év_èg
));

150 
èg_Àn
) {

151 -1: 
	`RETURN
(
RC_FAIL
);

152 0: 
	`RETURN
(
RC_WMORE
);

155 
év_c⁄°r
 = 
	`BER_TLV_CONSTRUCTED
(
±r
);

161 if(
èg_mode
 !0 && 
°ï
 == 0) {

168 
	`as£π
(
ègno
 >= 0);

169 if(
év_èg
 !
td
->
ègs
[
ègno
]) {

173 
	`ASN_DEBUG
("Expected: %s, "

175 
	`bî_év_èg_°rög
(
td
->
ègs
[
ègno
]),

176 
ègno
, 
èg_mode


178 
	`RETURN
(
RC_FAIL
);

189 if(
ègno
 < (()
td
->
ègs_cou¡
 - 1)) {

190 if(
év_c⁄°r
 == 0) {

191 
	`ASN_DEBUG
("tlv_constr = %d,Éxpfail",

192 
év_c⁄°r
);

193 
	`RETURN
(
RC_FAIL
);

196 if(
œ°_èg_f‹m
 !
év_c⁄°r


197 && 
œ°_èg_f‹m
 != -1) {

198 
	`ASN_DEBUG
("last_tag_form %d != %d",

199 
œ°_èg_f‹m
, 
év_c⁄°r
);

200 
	`RETURN
(
RC_FAIL
);

207 
Àn_Àn
 = 
	`bî_„tch_Àngth
(
év_c⁄°r
,

208 (c⁄° *)
±r
 + 
èg_Àn
, 
size
 -Åag_Àn, &
év_Àn
);

209 
	`ASN_DEBUG
("FëchögÜí = %ld", ()
Àn_Àn
);

210 
Àn_Àn
) {

211 -1: 
	`RETURN
(
RC_FAIL
);

212 0: 
	`RETURN
(
RC_WMORE
);

222 if(
év_Àn
 == -1) {

226 if(
limô_Àn
 == -1) {

227 
ex≥˘_00_ãrmö©‹s
++;

229 
	`ASN_DEBUG
("Unexpected indefiniteÜength "

231 
	`RETURN
(
RC_FAIL
);

233 
	`ADVANCE
(
èg_Àn
 + 
Àn_Àn
);

236 if(
ex≥˘_00_ãrmö©‹s
) {

237 
	`ASN_DEBUG
("Unexpected definiteÜength "

239 
	`RETURN
(
RC_FAIL
);

247 if(
limô_Àn
 == -1) {

248 
limô_Àn
 = 
év_Àn
 + 
èg_Àn
 + 
Àn_Àn
;

249 if(
limô_Àn
 < 0) {

251 
	`RETURN
(
RC_FAIL
);

253 } if(
limô_Àn
 !
év_Àn
 + 
èg_Àn
 + 
Àn_Àn
) {

258 
	`ASN_DEBUG
("Outer TLV is %ldánd inner is %ld",

259 ()
limô_Àn
, ()
év_Àn
);

260 
	`RETURN
(
RC_FAIL
);

263 
	`ADVANCE
(
èg_Àn
 + 
Àn_Àn
);

265 
limô_Àn
 -(
èg_Àn
 + 
Àn_Àn
);

266 if((
ssize_t
)
size
 > 
limô_Àn
) {

271 
size
 = 
limô_Àn
;

275 if(
›t_év_f‹m
)

276 *
›t_év_f‹m
 = 
év_c⁄°r
;

277 if(
ex≥˘_00_ãrmö©‹s
)

278 *
œ°_Àngth
 = -
ex≥˘_00_ãrmö©‹s
;

280 *
œ°_Àngth
 = 
év_Àn
;

282 
	`RETURN
(
RC_OK
);

283 
	}
}

	@ber_tlv_length.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<bî_év_Àngth.h
>

7 
	~<bî_év_èg.h
>

9 
ssize_t


10 
	$bî_„tch_Àngth
(
_is_c⁄°ru˘ed
, c⁄° *
buÂå
, 
size_t
 
size
,

11 
bî_év_Àn_t
 *
Àn_r
) {

12 c⁄° 
uöt8_t
 *
buf
 = (c⁄° uöt8_à*)
buÂå
;

13 
o˘
;

15 if(
size
 == 0)

18 
o˘
 = *(c⁄° 
uöt8_t
 *)
buf
;

19 if((
o˘
 & 0x80) == 0) {

23 *
Àn_r
 = 
o˘
;

26 
bî_év_Àn_t
 
Àn
;

27 
size_t
 
skù≥d
;

29 if(
_is_c⁄°ru˘ed
 && 
o˘
 == 0x80) {

30 *
Àn_r
 = -1;

34 if(
o˘
 == 0xff) {

39 
o˘
 &= 0x7F;

40 
Àn
 = 0, 
buf
++, 
skù≥d
 = 1;

41 
o˘
 && (++
skù≥d
 <
size
); 
buf
++, oct--) {

44 if(!(
Àn
 >> ((8 * (len)) - (8+1)))) {

45 
Àn
 = (À¿<< 8Ë| *
buf
;

52 if(
o˘
 == 0) {

53 if(
Àn
 < 0 ||Üí > 
RSSIZE_MAX
) {

58 *
Àn_r
 = 
Àn
;

59  
skù≥d
;

65 
	}
}

67 
ssize_t


68 
	$bî_skù_Àngth
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

69 
_is_c⁄°ru˘ed
, c⁄° *
±r
, 
size_t
 
size
) {

70 
bî_év_Àn_t
 
vÀn
;

71 
ssize_t
 
é
;

72 
ssize_t
 
Œ
;

73 
size_t
 
skù
;

78 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

84 
Œ
 = 
	`bî_„tch_Àngth
(
_is_c⁄°ru˘ed
, 
±r
, 
size
, &
vÀn
);

85 if(
Œ
 <= 0) Ül;

90 if(
vÀn
 >= 0) {

91 
skù
 = 
Œ
 + 
vÀn
;

92 if(
skù
 > 
size
)

94  
skù
;

100 
	`ASN_DEBUG
("Skipping indefiniteÜength");

101 
skù
 = 
Œ
, 
±r
 = ((c⁄° *ÌåË+Ül, 
size
 -=Ül;;) {

102 
bî_év_èg_t
 
èg
;

105 
é
 = 
	`bî_„tch_èg
(
±r
, 
size
, &
èg
);

106 if(
é
 <= 0) Ål;

108 
Œ
 = 
	`bî_skù_Àngth
(
›t_codec_˘x
,

109 
	`BER_TLV_CONSTRUCTED
(
±r
),

110 ((c⁄° *)
±r
Ë+ 
é
, 
size
 -Ål);

111 if(
Œ
 <= 0) Ül;

113 
skù
 +
é
 + 
Œ
;

120 if(((c⁄° 
uöt8_t
 *)
±r
)[0] == 0

121 && ((c⁄° 
uöt8_t
 *)
±r
)[1] == 0)

122  
skù
;

124 
±r
 = ((c⁄° *ÌåË+ 
é
 + 
Œ
;

125 
size
 -
é
 + 
Œ
;

129 
	}
}

131 
size_t


132 
	$dî_év_Àngth_£rülize
(
bî_év_Àn_t
 
Àn
, *
buÂ
, 
size_t
 
size
) {

133 
size_t
 
ªquúed_size
;

134 
uöt8_t
 *
buf
 = (uöt8_à*)
buÂ
;

135 
uöt8_t
 *
íd
;

136 
i
;

138 if(
Àn
 <= 127) {

140 if(
size
Ë*
buf
 = (
uöt8_t
)
Àn
;

147 
ªquúed_size
 = 1, 
i
 = 8; i < 8 * ()(
Àn
); i += 8) {

148 if(
Àn
 >> 
i
)

149 
ªquúed_size
++;

154 if(
size
 <
ªquúed_size
)

155  
ªquúed_size
 + 1;

157 *
buf
++ = (
uöt8_t
)(0x80 | 
ªquúed_size
);

162 
íd
 = 
buf
 + 
ªquúed_size
;

163 
i
 -8; 
buf
 < 
íd
; i -= 8, buf++)

164 *
buf
 = (
uöt8_t
)(
Àn
 >> 
i
);

166  
ªquúed_size
 + 1;

167 
	}
}

	@ber_tlv_tag.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<bî_év_èg.h
>

7 
	~<î∫o.h
>

9 
ssize_t


10 
	$bî_„tch_èg
(c⁄° *
±r
, 
size_t
 
size
, 
bî_év_èg_t
 *
èg_r
) {

11 
bî_év_èg_t
 
vÆ
;

12 
bî_év_èg_t
 
t˛ass
;

13 
size_t
 
skù≥d
;

15 if(
size
 == 0)

18 
vÆ
 = *(c⁄° 
uöt8_t
 *)
±r
;

19 
t˛ass
 = (
vÆ
 >> 6);

20 if((
vÆ
 &= 0x1F) != 0x1F) {

25 *
èg_r
 = (
vÆ
 << 2Ë| 
t˛ass
;

33 
vÆ
 = 0, 
±r
 = ((c⁄° *ÌåË+ 1, 
skù≥d
 = 2;

34 
skù≥d
 <
size
;

35 
±r
 = ((c⁄° *ÌåË+ 1, 
skù≥d
++) {

36 
o˘
 = *(c⁄° 
uöt8_t
 *)
±r
;

37 if(
o˘
 & 0x80) {

38 
vÆ
 = (vÆ << 7Ë| (
o˘
 & 0x7F);

43 if(
vÆ
 >> ((8 * (val)) - 9)) {

51 
vÆ
 = (vÆ << 7Ë| 
o˘
;

52 *
èg_r
 = (
vÆ
 << 2Ë| 
t˛ass
;

53  
skù≥d
;

58 
	}
}

61 
ssize_t


62 
	$bî_év_èg_fwrôe
(
bî_év_èg_t
 
èg
, 
FILE
 *
f
) {

63 
buf
[("[APPLICATION ]") + 32];

64 
ssize_t
 
ªt
;

66 
ªt
 = 
	`bî_év_èg_¢¥öt
(
èg
, 
buf
, (buf));

67 if(
ªt
 >(
ssize_t
)(
buf
) ||Ñet < 2) {

68 
î∫o
 = 
EPERM
;

72  
	`fwrôe
(
buf
, 1, 
ªt
, 
f
);

73 
	}
}

75 
ssize_t


76 
	$bî_év_èg_¢¥öt
(
bî_év_èg_t
 
èg
, *
buf
, 
size_t
 
size
) {

77 c⁄° *
ty≥
 = 0;

78 
ªt
;

80 
èg
 & 0x3) {

81 
ASN_TAG_CLASS_UNIVERSAL
: 
ty≥
 = "UNIVERSAL "; ;

82 
ASN_TAG_CLASS_APPLICATION
: 
ty≥
 = "APPLICATION "; ;

83 
ASN_TAG_CLASS_CONTEXT
: 
ty≥
 = ""; ;

84 
ASN_TAG_CLASS_PRIVATE
: 
ty≥
 = "PRIVATE "; ;

87 
ªt
 = 
	`¢¥ötf
(
buf
, 
size
, "[%s%u]", 
ty≥
, (()
èg
) >> 2);

88 if(
ªt
 <0 && 
size
Ë
buf
[0] = '\0';

90  
ªt
;

91 
	}
}

94 
	$bî_év_èg_°rög
(
bî_év_èg_t
 
èg
) {

95 
buf
[("[APPLICATION ]") + 32];

97 ()
	`bî_év_èg_¢¥öt
(
èg
, 
buf
, (buf));

99  
buf
;

100 
	}
}

103 
size_t


104 
	$bî_év_èg_£rülize
(
bî_év_èg_t
 
èg
, *
buÂ
, 
size_t
 
size
) {

105 
t˛ass
 = 
	`BER_TAG_CLASS
(
èg
);

106 
bî_év_èg_t
 
tvÆ
 = 
	`BER_TAG_VALUE
(
èg
);

107 
uöt8_t
 *
buf
 = (uöt8_à*)
buÂ
;

108 
uöt8_t
 *
íd
;

109 
size_t
 
ªquúed_size
;

110 
size_t
 
i
;

112 if(
tvÆ
 <= 30) {

114 if(
size
Ë
buf
[0] = (
t˛ass
 << 6Ë| 
tvÆ
;

116 } if(
size
) {

117 *
buf
++ = (
t˛ass
 << 6) | 0x1F;

118 
size
--;

124 
ªquúed_size
 = 1, 
i
 = 7; i < 8 * (
tvÆ
); i += 7) {

125 if(
tvÆ
 >> 
i
)

126 
ªquúed_size
++;

131 if(
size
 < 
ªquúed_size
)

132  
ªquúed_size
 + 1;

137 
íd
 = 
buf
 + 
ªquúed_size
 - 1;

138 
i
 -7; 
buf
 < 
íd
; i -= 7, buf++)

139 *
buf
 = 0x80 | ((
tvÆ
 >> 
i
) & 0x7F);

140 *
buf
 = (
tvÆ
 & 0x7F);

142  
ªquúed_size
 + 1;

143 
	}
}

	@constr_CHOICE.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<c⁄°r_CHOICE.h
>

7 
	~<≥r_›íty≥.h
>

14 
	#LEFT
 ((
size
<(
size_t
)
˘x
->
À·
)?size:(size_t)˘x->À·)

	)

27 
	#SIZE_VIOLATION
 (
˘x
->
À·
 >0 && (
size_t
)˘x->À· <
size
)

	)

33 #unde‡
ADVANCE


34 
	#ADVANCE
(
num_byãs
) do { \

35 
size_t
 
num
 = 
num_byãs
; \

36 
±r
 = ((c⁄° *ÌåË+ 
num
;\

37 
size
 -
num
; \

38 if(
˘x
->
À·
 >= 0) \

39 
˘x
->
À·
 -
num
; \

40 
c⁄sumed_my£lf
 +
num
; \

41 } 0)

	)

46 #unde‡
NEXT_PHASE


47 
	#NEXT_PHASE
(
˘x
) do { \

48 
˘x
->
pha£
++; \

49 
˘x
->
°ï
 = 0; \

50 } 0)

	)

55 #unde‡
RETURN


56 
	#RETURN
(
_code
) do { \

57 
rvÆ
.
code
 = 
_code
; \

58 
rvÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
;\

59  
rvÆ
; \

60 } 0)

	)

65 
_„tch_¥e£¡_idx
(c⁄° *
°ru˘_±r
, 
off
,

66 
size
);

67 
_£t_¥e£¡_idx
(*
•å
, 
off£t
, 
size
,

68 
¥es
);

69 c⁄° *
_gë_membî_±r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *,

70 c⁄° *
•å
, 
a¢_TYPE_membî_t
 **
ñm
,

71 *
¥e£¡
);

77 
	$_£¨ch4èg
(c⁄° *
≠
, c⁄° *
bp
) {

78 c⁄° 
a¢_TYPE_èg2membî_t
 *
a
 = (c⁄°á¢_TYPE_èg2membî_à*)
≠
;

79 c⁄° 
a¢_TYPE_èg2membî_t
 *
b
 = (c⁄°á¢_TYPE_èg2membî_à*)
bp
;

81 
a_˛ass
 = 
	`BER_TAG_CLASS
(
a
->
ñ_èg
);

82 
b_˛ass
 = 
	`BER_TAG_CLASS
(
b
->
ñ_èg
);

84 if(
a_˛ass
 =
b_˛ass
) {

85 
bî_év_èg_t
 
a_vÆue
 = 
	`BER_TAG_VALUE
(
a
->
ñ_èg
);

86 
bî_év_èg_t
 
b_vÆue
 = 
	`BER_TAG_VALUE
(
b
->
ñ_èg
);

88 if(
a_vÆue
 =
b_vÆue
)

90 if(
a_vÆue
 < 
b_vÆue
)

94 } if(
a_˛ass
 < 
b_˛ass
) {

99 
	}
}

104 
a¢_dec_rvÆ_t


105 
	$CHOICE_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

106 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

107 c⁄° *
±r
, 
size_t
 
size
, 
èg_mode
) {

111 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

112 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

113 
a¢_TYPE_membî_t
 *
ñemíts
 = 
td
->elements;

118 *
°
 = *
°ru˘_±r
;

119 
a¢_°ru˘_˘x_t
 *
˘x
;

121 
bî_év_èg_t
 
év_èg
;

122 
ssize_t
 
èg_Àn
;

123 
a¢_dec_rvÆ_t
 
rvÆ
;

125 
ssize_t
 
c⁄sumed_my£lf
 = 0;

127 
	`ASN_DEBUG
("Decodög %†a†CHOICE", 
td
->
«me
);

132 if(
°
 == 0) {

133 
°
 = *
°ru˘_±r
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

134 if(
°
 == 0) {

135 
	`RETURN
(
RC_FAIL
);

142 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

147 
˘x
->
pha£
) {

155 if(
èg_mode
 || 
td
->
ègs_cou¡
) {

156 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 
˘x
, 
±r
, 
size
,

157 
èg_mode
, -1, &
˘x
->
À·
, 0);

158 if(
rvÆ
.
code
 !
RC_OK
) {

159 
	`ASN_DEBUG
("%sÅagging check failed: %d",

160 
td
->
«me
, 
rvÆ
.
code
);

161  
rvÆ
;

164 if(
˘x
->
À·
 >= 0) {

166 
˘x
->
À·
 +
rvÆ
.
c⁄sumed
;

168 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

170 
˘x
->
À·
 = -1;

173 
	`NEXT_PHASE
(
˘x
);

175 
	`ASN_DEBUG
("Structure consumes %ld bytes, buffer %ld",

176 ()
˘x
->
À·
, ()
size
);

183 
èg_Àn
 = 
	`bî_„tch_èg
(
±r
, 
LEFT
, &
év_èg
);

184 
	`ASN_DEBUG
("I¿%†CHOICEÅagÜígth %d", 
td
->
«me
, ()
èg_Àn
);

185 
èg_Àn
) {

186 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

188 -1: 
	`RETURN
(
RC_FAIL
);

192 c⁄° 
a¢_TYPE_èg2membî_t
 *
t2m
;

193 
a¢_TYPE_èg2membî_t
 
key
;

195 
key
.
ñ_èg
 = 
év_èg
;

196 
t2m
 = (c⁄° 
a¢_TYPE_èg2membî_t
 *)
	`b£¨ch
(&
key
,

197 
•ecs
->
èg2ñ
, s≥cs->
èg2ñ_cou¡
,

198 (
•ecs
->
èg2ñ
[0]), 
_£¨ch4èg
);

199 if(
t2m
) {

203 
	`NEXT_PHASE
(
˘x
);

204 
˘x
->
°ï
 = 
t2m
->
ñ_no
;

206 } if(
•ecs
->
ext_°¨t
 == -1) {

207 
	`ASN_DEBUG
("UnexpectedÅag %s "

209 
	`bî_év_èg_°rög
(
év_èg
), 
td
->
«me
);

210 
	`RETURN
(
RC_FAIL
);

213 
ssize_t
 
skù
;

215 
	`ASN_DEBUG
("Skipping unknownÅag %s",

216 
	`bî_év_èg_°rög
(
év_èg
));

218 
skù
 = 
	`bî_skù_Àngth
(
›t_codec_˘x
,

219 
	`BER_TLV_CONSTRUCTED
(
±r
),

220 (c⁄° *)
±r
 + 
èg_Àn
,

221 
LEFT
 - 
èg_Àn
);

223 
skù
) {

224 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

226 -1: 
	`RETURN
(
RC_FAIL
);

229 
	`ADVANCE
(
skù
 + 
èg_Àn
);

230 
	`RETURN
(
RC_OK
);

240 
a¢_TYPE_membî_t
 *
ñm
;

241 *
memb_±r
;

242 **
memb_±r2
;

244 
ñm
 = &
ñemíts
[
˘x
->
°ï
];

251 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

253 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

259 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

260 
memb_±r2
 = &
memb_±r
;

263 
	`_£t_¥e£¡_idx
(
°
, 
•ecs
->
¥es_off£t
,

264 
•ecs
->
¥es_size
, 
˘x
->
°ï
 + 1);

268 
rvÆ
 = 
ñm
->
ty≥
->
›
->
	`bî_decodî
(
›t_codec_˘x
,Élm->type,

269 
memb_±r2
, 
±r
, 
LEFT
, 
ñm
->
èg_mode
);

270 
rvÆ
.
code
) {

271 
RC_OK
:

273 
RC_WMORE
:

274 if(!
SIZE_VIOLATION
) {

275 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

276 
	`RETURN
(
RC_WMORE
);

278 
	`RETURN
(
RC_FAIL
);

279 
RC_FAIL
:

280 
	`RETURN
(
rvÆ
.
code
);

283 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

286 
	`NEXT_PHASE
(
˘x
);

290 
	`ASN_DEBUG
("CHOICE %s Leftover: %ld, size = %ld,Åm=%d,Åc=%d",

291 
td
->
«me
, ()
˘x
->
À·
, ()
size
,

292 
èg_mode
, 
td
->
ègs_cou¡
);

294 if(
˘x
->
À·
 > 0) {

299 
	`RETURN
(
RC_FAIL
);

302 if(
˘x
->
À·
 == -1

303 && !(
èg_mode
 || 
td
->
ègs_cou¡
)) {

310 
	`NEXT_PHASE
(
˘x
);

317 
˘x
->
À·
 < 0) {

318 
ssize_t
 
é
;

320 
é
 = 
	`bî_„tch_èg
(
±r
, 
LEFT
, &
év_èg
);

321 
é
) {

322 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

324 -1: 
	`RETURN
(
RC_FAIL
);

330 if(((c⁄° 
uöt8_t
 *)
±r
)[0] == 0) {

331 if(
LEFT
 < 2) {

332 if(
SIZE_VIOLATION
)

333 
	`RETURN
(
RC_FAIL
);

335 
	`RETURN
(
RC_WMORE
);

336 } if(((c⁄° 
uöt8_t
 *)
±r
)[1] == 0) {

340 
	`ADVANCE
(2);

341 
˘x
->
À·
++;

345 
	`ASN_DEBUG
("Unexpected continuation in %s",

346 
td
->
«me
);

347 
	`RETURN
(
RC_FAIL
);

353 
	`NEXT_PHASE
(
˘x
);

359 
	`RETURN
(
RC_OK
);

360 
	}
}

362 
a¢_íc_rvÆ_t


363 
	$CHOICE_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

364 
èg_mode
, 
bî_év_èg_t
 
èg
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

365 *
≠p_key
) {

366 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

367 
a¢_TYPE_membî_t
 *
ñm
;

368 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

369 c⁄° *
memb_±r
;

370 
size_t
 
compuãd_size
 = 0;

371 
¥e£¡
;

373 if(!
•å
Ë
ASN__ENCODE_FAILED
;

375 
	`ASN_DEBUG
("%s %sás CHOICE",

376 
cb
?"Encodög":"E°im©ög", 
td
->
«me
);

378 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
,

379 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

385 if(
¥e£¡
 =0 ||Öª£¡ > 
td
->
ñemíts_cou¡
) {

386 if(
¥e£¡
 =0 && 
td
->
ñemíts_cou¡
 == 0) {

388 
îvÆ
.
ícoded
 = 0;

389 
	`ASN__ENCODED_OK
(
îvÆ
);

391 
ASN__ENCODE_FAILED
;

397 
ñm
 = &
td
->
ñemíts
[
¥e£¡
-1];

398 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

399 
memb_±r
 =

400 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

401 if(
memb_±r
 == 0) {

402 if(
ñm
->
›ti⁄Æ
) {

403 
îvÆ
.
ícoded
 = 0;

404 
	`ASN__ENCODED_OK
(
îvÆ
);

407 
ASN__ENCODE_FAILED
;

410 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

418 if(
èg_mode
 =1 || 
td
->
ègs_cou¡
) {

422 
ssize_t
 
ªt
;

425 
îvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, 
memb_±r
,

426 
ñm
->
èg_mode
,Élm->
èg
, 0, 0);

427 if(
îvÆ
.
ícoded
 == -1)

428  
îvÆ
;

431 
ªt
 = 
	`dî_wrôe_ègs
(
td
, 
îvÆ
.
ícoded
, 
èg_mode
, 1, 
èg
,

432 
cb
, 
≠p_key
);

433 if(
ªt
 == -1)

434 
ASN__ENCODE_FAILED
;

435 
compuãd_size
 +
ªt
;

441 
îvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, 
memb_±r
,

442 
ñm
->
èg_mode
,Élm->
èg
, 
cb
, 
≠p_key
);

443 if(
îvÆ
.
ícoded
 == -1)

444  
îvÆ
;

446 
	`ASN_DEBUG
("Encoded CHOICE member in %ld bytes (+%ld)",

447 ()
îvÆ
.
ícoded
, ()
compuãd_size
);

449 
îvÆ
.
ícoded
 +
compuãd_size
;

451  
îvÆ
;

452 
	}
}

454 
bî_év_èg_t


455 
	$CHOICE_outmo°_èg
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
±r
, 
èg_mode
, 
bî_év_èg_t
 
èg
) {

456 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

457 
¥e£¡
;

459 
	`as£π
(
èg_mode
 == 0); ()tag_mode;

460 
	`as£π
(
èg
 == 0); ()tag;

465 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
±r
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

467 if(
¥e£¡
 > 0 &&Öª£¡ <
td
->
ñemíts_cou¡
) {

468 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
¥e£¡
-1];

469 c⁄° *
memb_±r
;

471 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

472 
memb_±r
 = *(const * const *)

473 ((c⁄° *)
±r
 + 
ñm
->
memb_off£t
);

475 
memb_±r
 = (const *)

476 ((c⁄° *)
±r
 + 
ñm
->
memb_off£t
);

479  
	`a¢_TYPE_outmo°_èg
(
ñm
->
ty≥
, 
memb_±r
,

480 
ñm
->
èg_mode
,Élm->
èg
);

482  (
bî_év_èg_t
)-1;

484 
	}
}

487 
	$CHOICE_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

488 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

489 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

490 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

491 
¥e£¡
;

493 if(!
•å
) {

494 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

496 
td
->
«me
, 
__FILE__
, 
__LINE__
);

503 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
,•ecs->
¥es_size
);

504 if(
¥e£¡
 > 0 &&Öª£¡ <
td
->
ñemíts_cou¡
) {

505 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
¥e£¡
-1];

506 c⁄° *
memb_±r
;

508 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

509 
memb_±r
 = *(c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

510 if(!
memb_±r
) {

511 if(
ñm
->
›ti⁄Æ
)

513 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

515 
td
->
«me
, 
ñm
->«me, 
__FILE__
, 
__LINE__
);

519 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

522 if(
ñm
->
ícodög_c⁄°øöts
.
gíîÆ_c⁄°øöts
) {

523  
ñm
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
”lm->
ty≥
, 
memb_±r
,

524 
˘Áûcb
, 
≠p_key
);

526  
ñm
->
ty≥
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
(elm->type,

527 
memb_±r
, 
˘Áûcb
, 
≠p_key
);

530 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

532 
td
->
«me
, 
__FILE__
, 
__LINE__
);

535 
	}
}

537 #unde‡
XER_ADVANCE


538 
	#XER_ADVANCE
(
num_byãs
) do { \

539 
size_t
 
num
 = 
num_byãs
; \

540 
buf_±r
 = (c⁄° *)(((c⁄° *)buf_±rË+ 
num
); \

541 
size
 -
num
; \

542 
c⁄sumed_my£lf
 +
num
; \

543 } 0)

	)

548 
a¢_dec_rvÆ_t


549 
	$CHOICE_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

550 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

551 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

555 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

556 c⁄° *
xml_èg
 = 
›t_m«me
 ? o±_m«mê: 
td
->xml_tag;

561 *
°
 = *
°ru˘_±r
;

562 
a¢_°ru˘_˘x_t
 *
˘x
;

564 
a¢_dec_rvÆ_t
 
rvÆ
;

565 
ssize_t
 
c⁄sumed_my£lf
 = 0;

566 
size_t
 
edx
;

571 if(
°
 == 0) {

572 
°
 = *
°ru˘_±r
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

573 if(
°
 =0Ë
	`RETURN
(
RC_FAIL
);

579 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

580 if(
˘x
->
pha£
 =0 && !*
xml_èg
)

581 
˘x
->
pha£
 = 1;

592 
edx
 = 
˘x
->
°ï
; ctx->
pha£
 <= 4;) {

593 
pxî_chunk_ty≥_e
 
ch_ty≥
;

594 
ssize_t
 
ch_size
;

595 
xî_check_èg_e
 
tcv
;

596 
a¢_TYPE_membî_t
 *
ñm
;

601 if(
˘x
->
pha£
 == 2) {

602 
a¢_dec_rvÆ_t
 
tm¥vÆ
;

603 *
memb_±r
;

604 **
memb_±r2
;

605 
ﬁd_¥e£¡
;

607 
ñm
 = &
td
->
ñemíts
[
edx
];

609 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

611 
memb_±r2
 = (**)((*)
°


612 + 
ñm
->
memb_off£t
);

614 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

615 
memb_±r2
 = &
memb_±r
;

619 
tm¥vÆ
 = 
ñm
->
ty≥
->
›
->
	`xî_decodî
(
›t_codec_˘x
,

620 
ñm
->
ty≥
, 
memb_±r2
,Élm->
«me
,

621 
buf_±r
, 
size
);

622 
	`XER_ADVANCE
(
tm¥vÆ
.
c⁄sumed
);

623 
	`ASN_DEBUG
("XER/CHOICE: itdf: [%s] code=%d",

624 
ñm
->
ty≥
->
«me
, 
tm¥vÆ
.
code
);

625 
ﬁd_¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
°
,

626 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

627 
	`as£π
(
ﬁd_¥e£¡
 =0 || old_¥e£¡ =
edx
 + 1);

629 
	`_£t_¥e£¡_idx
(
°
,

630 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
, 
edx
 + 1);

631 if(
tm¥vÆ
.
code
 !
RC_OK
)

632 
	`RETURN
(
tm¥vÆ
.
code
);

633 
˘x
->
pha£
 = 3;

638 if(
˘x
->
pha£
 =3 && !*
xml_èg
) {

639 
˘x
->
pha£
 = 5;

640 
	`RETURN
(
RC_OK
);

646 
ch_size
 = 
	`xî_√xt_tokí
(&
˘x
->
c⁄ãxt
, 
buf_±r
, 
size
, &
ch_ty≥
);

647 if(
ch_size
 == -1) {

648 
	`RETURN
(
RC_FAIL
);

650 
ch_ty≥
) {

651 
PXER_WMORE
:

652 
	`RETURN
(
RC_WMORE
);

653 
PXER_COMMENT
:

654 
PXER_TEXT
:

655 
	`XER_ADVANCE
(
ch_size
);

657 
PXER_TAG
:

662 
tcv
 = 
	`xî_check_èg
(
buf_±r
, 
ch_size
, 
xml_èg
);

663 
	`ASN_DEBUG
("XER/CHOICE checked [%c%c%c%c] vs [%s],Åcv=%d",

664 
ch_size
>0?((c⁄° 
uöt8_t
 *)
buf_±r
)[0]:'?',

665 
ch_size
>1?((c⁄° 
uöt8_t
 *)
buf_±r
)[1]:'?',

666 
ch_size
>2?((c⁄° 
uöt8_t
 *)
buf_±r
)[2]:'?',

667 
ch_size
>3?((c⁄° 
uöt8_t
 *)
buf_±r
)[3]:'?',

668 
xml_èg
, 
tcv
);

671 if(
˘x
->
pha£
 == 4) {

672 
	`ASN_DEBUG
("skip_unknown(%d, %ld)",

673 
tcv
, ()
˘x
->
À·
);

674 
	`xî_skù_unknown
(
tcv
, &
˘x
->
À·
)) {

676 
˘x
->
pha£
 = 5;

677 
	`RETURN
(
RC_FAIL
);

679 
˘x
->
pha£
 = 3;

682 
	`XER_ADVANCE
(
ch_size
);

685 
˘x
->
pha£
 = 3;

690 
tcv
) {

691 
XCT_BOTH
:

693 
XCT_CLOSING
:

694 if(
˘x
->
pha£
 != 3)

696 
	`XER_ADVANCE
(
ch_size
);

697 
˘x
->
pha£
 = 5;

698 
	`RETURN
(
RC_OK
);

699 
XCT_OPENING
:

700 if(
˘x
->
pha£
 == 0) {

701 
	`XER_ADVANCE
(
ch_size
);

702 
˘x
->
pha£
 = 1;

706 
XCT_UNKNOWN_OP
:

707 
XCT_UNKNOWN_BO
:

709 if(
˘x
->
pha£
 != 1)

715 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

716 
ñm
 = &
td
->
ñemíts
[
edx
];

717 
tcv
 = 
	`xî_check_èg
(
buf_±r
,
ch_size
,
ñm
->
«me
);

718 
tcv
) {

719 
XCT_BOTH
:

720 
XCT_OPENING
:

724 
˘x
->
°ï
 = 
edx
;

725 
˘x
->
pha£
 = 2;

727 
XCT_UNKNOWN_OP
:

728 
XCT_UNKNOWN_BO
:

731 
edx
 = 
td
->
ñemíts_cou¡
;

736 if(
edx
 !
td
->
ñemíts_cou¡
)

740 if(
•ecs
->
ext_°¨t
 != -1) {

741 
	`ASN_DEBUG
("GotánticipatedÉxtension");

747 if(
tcv
 & 
XCT_CLOSING
) {

749 
˘x
->
pha£
 = 3;

751 
˘x
->
À·
 = 1;

752 
˘x
->
pha£
 = 4;

754 
	`XER_ADVANCE
(
ch_size
);

763 
	`ASN_DEBUG
("Unexpected XMLÅag [%c%c%c%c] in CHOICE [%s]"

765 
ch_size
>0?((c⁄° 
uöt8_t
 *)
buf_±r
)[0]:'?',

766 
ch_size
>1?((c⁄° 
uöt8_t
 *)
buf_±r
)[1]:'?',

767 
ch_size
>2?((c⁄° 
uöt8_t
 *)
buf_±r
)[2]:'?',

768 
ch_size
>3?((c⁄° 
uöt8_t
 *)
buf_±r
)[3]:'?',

769 
td
->
«me
, 
˘x
->
pha£
, 
xml_èg
);

773 
˘x
->
pha£
 = 5;

774 
	`RETURN
(
RC_FAIL
);

775 
	}
}

778 
a¢_íc_rvÆ_t


779 
	$CHOICE_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

780 
xî_ícodî_Êags_e
 
Êags
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

781 *
≠p_key
) {

782 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

783 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

784 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

785 
¥e£¡
 = 0;

787 if(!
•å
)

788 
ASN__ENCODE_FAILED
;

793 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
,•ecs->
¥es_size
);

795 if(
¥e£¡
 =0 ||Öª£¡ > 
td
->
ñemíts_cou¡
) {

796 
ASN__ENCODE_FAILED
;

798 
a¢_íc_rvÆ_t
 
tm≥r
 = {0,0,0};

799 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
¥e£¡
-1];

800 c⁄° *
memb_±r
 = 
NULL
;

801 c⁄° *
m«me
 = 
ñm
->
«me
;

802 
mÀn
 = 
	`°æí
(
m«me
);

804 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

805 
memb_±r
 =

806 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

807 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

809 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

812 
î
.
ícoded
 = 0;

814 if(!(
Êags
 & 
XER_F_CANONICAL
)Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

815 
	`ASN__CALLBACK3
("<", 1, 
m«me
, 
mÀn
, ">", 1);

817 
tm≥r
 = 
ñm
->
ty≥
->
›
->
	`xî_ícodî
”lm->ty≥, 
memb_±r
,

818 
ûevñ
 + 1, 
Êags
, 
cb
, 
≠p_key
);

819 if(
tm≥r
.
ícoded
 == -1) Åmper;

820 
î
.
ícoded
 +
tm≥r
.encoded;

822 
	`ASN__CALLBACK3
("</", 2, 
m«me
, 
mÀn
, ">", 1);

825 if(!(
Êags
 & 
XER_F_CANONICAL
)Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
 - 1);

827 
	`ASN__ENCODED_OK
(
î
);

828 
cb_Áûed
:

829 
ASN__ENCODE_FAILED
;

830 
	}
}

832 
a¢_dec_rvÆ_t


833 
	$CHOICE_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

834 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

835 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

836 
a¢_≥r_d©a_t
 *
pd
) {

837 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

838 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

839 
a¢_dec_rvÆ_t
 
rv
;

840 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

841 
a¢_TYPE_membî_t
 *
ñm
;

842 *
memb_±r
;

843 **
memb_±r2
;

844 *
°
 = *
•å
;

845 
vÆue
;

847 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

848 
ASN__DECODE_FAILED
;

853 if(!
°
) {

854 
°
 = *
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

855 if(!
°
Ë
ASN__DECODE_FAILED
;

858 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

859 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
Ë
˘
 = &td->ícodög_c⁄°øöts.≥r_c⁄°øöts->
vÆue
;

860 
˘
 = 0;

862 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

863 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

864 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

865 if(
vÆue
Ë
˘
 = 0;

868 if(
˘
 && ct->
ønge_bôs
 >= 0) {

869 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ønge_bôs
);

870 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

871 
	`ASN_DEBUG
("CHOICE %s got index %d inÑange %d",

872 
td
->
«me
, 
vÆue
, 
˘
->
ønge_bôs
);

873 if(
vÆue
 > 
˘
->
uµî_bound
)

874 
ASN__DECODE_FAILED
;

876 if(
•ecs
->
ext_°¨t
 == -1)

877 
ASN__DECODE_FAILED
;

878 
vÆue
 = 
	`u≥r_gë_n¢nwn
(
pd
);

879 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

880 
vÆue
 +
•ecs
->
ext_°¨t
;

881 if(()
vÆue
 >
td
->
ñemíts_cou¡
)

882 
ASN__DECODE_FAILED
;

886 if(
•ecs
->
‰om_ˇn⁄iˇl_‹dî
) {

887 
	`ASN_DEBUG
("CHOICEÖª£n˚ from wúê%d", 
vÆue
);

888 
vÆue
 = 
•ecs
->
‰om_ˇn⁄iˇl_‹dî
[value];

889 
	`ASN_DEBUG
("CHOICEÖª£n˚ indexÉf„˘ivê%d", 
vÆue
);

893 
	`_£t_¥e£¡_idx
(
°
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
, 
vÆue
 + 1);

895 
ñm
 = &
td
->
ñemíts
[
vÆue
];

896 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

898 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

900 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

901 
memb_±r2
 = &
memb_±r
;

903 
	`ASN_DEBUG
("Discovîed CHOICE %†ícode†%s", 
td
->
«me
, 
ñm
->name);

905 if(
˘
 && ct->
ønge_bôs
 >= 0) {

906 
rv
 = 
ñm
->
ty≥
->
›
->
	`u≥r_decodî
(
›t_codec_˘x
,Élm->type,

907 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

909 
rv
 = 
	`u≥r_›í_ty≥_gë
(
›t_codec_˘x
, 
ñm
->
ty≥
,

910 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

913 if(
rv
.
code
 !
RC_OK
)

914 
	`ASN_DEBUG
("FailedÅo decode %s in %s (CHOICE) %d",

915 
ñm
->
«me
, 
td
->«me, 
rv
.
code
);

916  
rv
;

917 
	}
}

919 
a¢_íc_rvÆ_t


920 
	$CHOICE_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

921 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

922 
a¢_≥r_ouç_t
 *
po
) {

923 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

924 
a¢_TYPE_membî_t
 *
ñm
;

925 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

926 c⁄° *
memb_±r
;

927 
¥e£¡
;

928 
¥e£¡_íc
;

930 if(!
•å
Ë
ASN__ENCODE_FAILED
;

932 
	`ASN_DEBUG
("Encodög %†a†CHOICE", 
td
->
«me
);

934 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

935 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

936 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

937 
˘
 = 0;

939 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

945 if(
¥e£¡
 =0 ||Öª£¡ > 
td
->
ñemíts_cou¡
)

946 
ASN__ENCODE_FAILED
;

948 
¥e£¡
--;

950 
	`ASN_DEBUG
("Encodög %†CHOICEÉÀmíà%d", 
td
->
«me
, 
¥e£¡
);

953 if(
•ecs
->
to_ˇn⁄iˇl_‹dî
)

954 
¥e£¡_íc
 = 
•ecs
->
to_ˇn⁄iˇl_‹dî
[
¥e£¡
];

956 
¥e£¡_íc
 = 
¥e£¡
;

958 if(
˘
 && ct->
ønge_bôs
 >= 0) {

959 if(
¥e£¡_íc
 < 
˘
->
lowî_bound


960 || 
¥e£¡_íc
 > 
˘
->
uµî_bound
) {

961 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

962 
	`ASN_DEBUG
(

964 
¥e£¡
, 
¥e£¡_íc
, 
˘
->
lowî_bound
, ct->
uµî_bound
);

965 if(
	`≥r_put_„w_bôs
(
po
, 1, 1))

966 
ASN__ENCODE_FAILED
;

968 
ASN__ENCODE_FAILED
;

970 
˘
 = 0;

973 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

974 
	`ASN_DEBUG
("CHOICE member %d (enc %d) isÇotánÉxtension (%ld..%ld)",

975 
¥e£¡
, 
¥e£¡_íc
, 
˘
->
lowî_bound
, ct->
uµî_bound
);

976 if(
	`≥r_put_„w_bôs
(
po
, 0, 1))

977 
ASN__ENCODE_FAILED
;

981 
ñm
 = &
td
->
ñemíts
[
¥e£¡
];

982 
	`ASN_DEBUG
("CHOICE membî \"%s\" %d (a†%d)", 
ñm
->
«me
, 
¥e£¡
,

983 
¥e£¡_íc
);

984 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

986 
memb_±r
 =

987 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

988 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

990 
memb_±r
 = (c⁄° *)
•å
 + 
ñm
->
memb_off£t
;

993 if(
˘
 && ct->
ønge_bôs
 >= 0) {

994 if(
	`≥r_put_„w_bôs
(
po
, 
¥e£¡_íc
, 
˘
->
ønge_bôs
))

995 
ASN__ENCODE_FAILED
;

997  
ñm
->
ty≥
->
›
->
	`u≥r_ícodî
(

998 
ñm
->
ty≥
,Élm->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r
, 
po
);

1000 
a¢_íc_rvÆ_t
 
rvÆ
 = {0,0,0};

1001 if(
•ecs
->
ext_°¨t
 =-1Ë
ASN__ENCODE_FAILED
;

1002 if(
	`u≥r_put_n¢nwn
(
po
, 
¥e£¡_íc
 - 
•ecs
->
ext_°¨t
))

1003 
ASN__ENCODE_FAILED
;

1004 if(
	`u≥r_›í_ty≥_put
(
ñm
->
ty≥
,

1005 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

1006 
memb_±r
, 
po
))

1007 
ASN__ENCODE_FAILED
;

1008 
rvÆ
.
ícoded
 = 0;

1009 
	`ASN__ENCODED_OK
(
rvÆ
);

1011 
	}
}

1013 
a¢_dec_rvÆ_t


1014 
	$CHOICE_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1015 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1016 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

1017 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

1018 
a¢_dec_rvÆ_t
 
rv
;

1019 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

1020 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
ext_˘
 = 
NULL
;

1021 
a¢_TYPE_membî_t
 *
ñm
;

1022 *
memb_±r
;

1023 **
memb_±r2
;

1024 *
°
 = *
•å
;

1025 
vÆue
;

1027 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

1028 
ASN__DECODE_FAILED
;

1033 if(!
°
) {

1034 
°
 = *
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

1035 if(!
°
Ë
ASN__DECODE_FAILED
;

1038 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

1039 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

1040 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

1041 
˘
 = 0;

1043 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

1044 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

1045 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

1046 if(
vÆue
) {

1047 
ext_˘
 = 
˘
;

1048 
˘
 = 0;

1053 if(
˘
 && ct->
ønge_bôs
 >= 0) {

1054 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ønge_bôs
);

1055 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

1056 
	`ASN_DEBUG
("CHOICE %s got index %d inÑange %d",

1057 
td
->
«me
, 
vÆue
, 
˘
->
ønge_bôs
);

1058 if(
vÆue
 > 
˘
->
uµî_bound
)

1059 
ASN__DECODE_FAILED
;

1061 if(
•ecs
->
ext_°¨t
 == -1)

1062 
ASN__DECODE_FAILED
;

1063 
vÆue
 = 
	`≠î_gë_n¢nwn
(
pd
, 
ext_˘
->
ønge_bôs
);

1064 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

1065 
vÆue
 +
•ecs
->
ext_°¨t
;

1066 if(()
vÆue
 >
td
->
ñemíts_cou¡
)

1067 
ASN__DECODE_FAILED
;

1071 if(
•ecs
->
‰om_ˇn⁄iˇl_‹dî
)

1072 
vÆue
 = 
•ecs
->
‰om_ˇn⁄iˇl_‹dî
[value];

1075 
	`_£t_¥e£¡_idx
(
°
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
, 
vÆue
 + 1);

1077 
ñm
 = &
td
->
ñemíts
[
vÆue
];

1078 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1080 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1082 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

1083 
memb_±r2
 = &
memb_±r
;

1085 
	`ASN_DEBUG
("Discovîed CHOICE %†ícode†%s", 
td
->
«me
, 
ñm
->name);

1087 if(
˘
 && ct->
ønge_bôs
 >= 0) {

1088 
rv
 = 
ñm
->
ty≥
->
›
->
	`≠î_decodî
(
›t_codec_˘x
,Élm->type,

1089 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

1091 
rv
 = 
	`≠î_›í_ty≥_gë
(
›t_codec_˘x
, 
ñm
->
ty≥
,

1092 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

1095 if(
rv
.
code
 !
RC_OK
)

1096 
	`ASN_DEBUG
("FailedÅo decode %s in %s (CHOICE) %d",

1097 
ñm
->
«me
, 
td
->«me, 
rv
.
code
);

1098  
rv
;

1099 
	}
}

1101 
a¢_íc_rvÆ_t


1102 
	$CHOICE_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1103 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

1104 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

1105 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

1106 c⁄° 
a¢_TYPE_membî_t
 *
ñm
;

1107 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
 = 
NULL
;

1108 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
ext_˘
 = 
NULL
;

1109 c⁄° *
memb_±r
;

1110 
¥e£¡
;

1111 
¥e£¡_íc
;

1113 if(!
•å
Ë
ASN__ENCODE_FAILED
;

1115 
	`ASN_DEBUG
("Encodög %†a†CHOICE usög ALIGNED PER", 
td
->
«me
);

1117 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
vÆue
;

1118 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

1119 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
vÆue
;

1120 
˘
 = 
NULL
;

1122 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
,

1123 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

1129 if(
¥e£¡
 <0 || (Ìª£¡ > 
td
->
ñemíts_cou¡
)

1130 
ASN__ENCODE_FAILED
;

1132 
¥e£¡
--;

1135 if(
•ecs
->
to_ˇn⁄iˇl_‹dî
)

1136 
¥e£¡_íc
 = 
•ecs
->
to_ˇn⁄iˇl_‹dî
[
¥e£¡
];

1138 
¥e£¡_íc
 = 
¥e£¡
;

1140 
	`ASN_DEBUG
("Encodög %†CHOICEÉÀmíà%d", 
td
->
«me
, 
¥e£¡
);

1142 if(
˘
 && (˘->
ønge_bôs
 >= 0)) {

1144 if(
¥e£¡
 < 
˘
->
lowî_bound
 ||Öª£¡ > ct->
uµî_bound
) {

1145 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

1146 
	`ASN_DEBUG
("CHOICE member %d (enc %d) isánÉxtension (%ld..%ld)",

1147 
¥e£¡
, 
¥e£¡_íc
, 
˘
->
lowî_bound
, ct->
uµî_bound
);

1149 if(
	`≥r_put_„w_bôs
(
po
, 1, 1)) {

1150 
ASN__ENCODE_FAILED
;

1153 
ASN__ENCODE_FAILED
;

1156 
ext_˘
 = 
˘
;

1157 
˘
 = 
NULL
;

1161 if(
˘
 && (˘->
Êags
 & 
APC_EXTENSIBLE
)) {

1162 
	`ASN_DEBUG
("CHOICE member %d (enc %d) isÇotánÉxtension (%ld..%ld)",

1163 
¥e£¡
,Öª£¡, 
˘
->
lowî_bound
, ct->
uµî_bound
);

1165 if(
	`≥r_put_„w_bôs
(
po
, 0, 1)) {

1166 
ASN__ENCODE_FAILED
;

1170 
ñm
 = &
td
->
ñemíts
[
¥e£¡
];

1171 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1173 
memb_±r
 = *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1174 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

1176 
memb_±r
 = (c⁄° *)
•å
 + 
ñm
->
memb_off£t
;

1179 if(
˘
 && (˘->
ønge_bôs
 >= 0)) {

1182 if(
	`≥r_put_„w_bôs
(
po
, 
¥e£¡_íc
, 
˘
->
ønge_bôs
))

1183 
ASN__ENCODE_FAILED
;

1185  
ñm
->
ty≥
->
›
->
	`≠î_ícodî
”lm->ty≥,Élm->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

1186 
memb_±r
, 
po
);

1188 
a¢_íc_rvÆ_t
 
rvÆ
 = {0,0,0};

1189 if(
•ecs
->
ext_°¨t
 == -1)

1190 
ASN__ENCODE_FAILED
;

1193 if(
ext_˘
 && 
	`≠î_put_n¢nwn
(
po
,Éxt_˘->
ønge_bôs
, 
¥e£¡_íc
 - 
•ecs
->
ext_°¨t
))

1194 
ASN__ENCODE_FAILED
;

1195 if(
	`≠î_›í_ty≥_put
(
ñm
->
ty≥
,Élm->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

1196 
memb_±r
, 
po
))

1197 
ASN__ENCODE_FAILED
;

1198 
rvÆ
.
ícoded
 = 0;

1199 
	`ASN__ENCODED_OK
(
rvÆ
);

1201 
	}
}

1204 
	$CHOICE_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

1205 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

1206 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_CHOICE_•ecifics_à*)
td
->
•ecifics
;

1207 
¥e£¡
;

1209 if(!
•å
Ë (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

1214 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
,•ecs->
¥es_size
);

1219 if(
¥e£¡
 > 0 &&Öª£¡ <
td
->
ñemíts_cou¡
) {

1220 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
¥e£¡
-1];

1221 c⁄° *
memb_±r
;

1223 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1224 
memb_±r
 = *(c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1225 if(!
memb_±r
Ë (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

1227 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1232 if(
	`cb
(
ñm
->
«me
, 
	`°æí
”lm->«me), 
≠p_key
) < 0

1233 || 
	`cb
(": ", 2, 
≠p_key
) < 0)

1237  
ñm
->
ty≥
->
›
->
	`¥öt_°ru˘
”lm->ty≥, 
memb_±r
, 
ûevñ
,

1238 
cb
, 
≠p_key
);

1240  (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

1242 
	}
}

1245 
	$CHOICE_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
±r
,

1246 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

1247 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

1248 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

1249 
¥e£¡
;

1251 if(!
td
 || !
±r
)

1254 
	`ASN_DEBUG
("Fªeög %†a†CHOICE", 
td
->
«me
);

1259 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
±r
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

1264 if(
¥e£¡
 > 0 &&Öª£¡ <
td
->
ñemíts_cou¡
) {

1265 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
¥e£¡
-1];

1266 *
memb_±r
;

1268 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1269 
memb_±r
 = *(**)((*)
±r
 + 
ñm
->
memb_off£t
);

1270 if(
memb_±r
)

1271 
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
, 
memb_±r
);

1273 
memb_±r
 = (*)((*)
±r
 + 
ñm
->
memb_off£t
);

1274 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(*
ñm
->
ty≥
, 
memb_±r
);

1278 
mëhod
) {

1279 
ASFM_FREE_EVERYTHING
:

1280 
	`FREEMEM
(
±r
);

1282 
ASFM_FREE_UNDERLYING
:

1284 
ASFM_FREE_UNDERLYING_AND_RESET
:

1285 
	`mem£t
(
±r
, 0, 
•ecs
->
°ru˘_size
);

1288 
	}
}

1301 
	$_„tch_¥e£¡_idx
(c⁄° *
°ru˘_±r
, 
¥es_off£t
,

1302 
¥es_size
) {

1303 c⁄° *
¥e£¡_±r
;

1304 
¥e£¡
;

1306 
¥e£¡_±r
 = ((c⁄° *)
°ru˘_±r
Ë+ 
¥es_off£t
;

1308 
¥es_size
) {

1309 (): 
¥e£¡
 = *(c⁄° *)
¥e£¡_±r
; ;

1310 (): 
¥e£¡
 = *(c⁄° *)
¥e£¡_±r
; ;

1311 (): 
¥e£¡
 = *(c⁄° *)
¥e£¡_±r
; ;

1314 
	`as£π
(
¥es_size
 != ());

1318  
¥e£¡
;

1319 
	}
}

1322 
	$_£t_¥e£¡_idx
(*
°ru˘_±r
, 
¥es_off£t
, 
¥es_size
,

1323 
¥e£¡
) {

1324 *
¥e£¡_±r
;

1325 
¥e£¡_±r
 = ((*)
°ru˘_±r
Ë+ 
¥es_off£t
;

1327 
¥es_size
) {

1328 (): *(*)
¥e£¡_±r
 = 
¥e£¡
; ;

1329 (): *(*)
¥e£¡_±r
 = 
¥e£¡
; ;

1330 (): *(*)
¥e£¡_±r
 = 
¥e£¡
; ;

1333 
	`as£π
(
¥es_size
 != ());

1335 
	}
}

1338 
	$_gë_membî_±r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

1339 
a¢_TYPE_membî_t
 **
ñm_±r
, *
¥e£¡_out
) {

1340 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

1341 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

1342 
¥e£¡
;

1344 if(!
•å
) {

1345 *
ñm_±r
 = 
NULL
;

1346 *
¥e£¡_out
 = 0;

1347  
NULL
;

1353 
¥e£¡
 = 
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

1354 *
¥e£¡_out
 = 
¥e£¡
;

1360 if(
¥e£¡
 > 0 &&Öª£¡ <
td
->
ñemíts_cou¡
) {

1361 
a¢_TYPE_membî_t
 *c⁄° 
ñm
 = &
td
->
ñemíts
[
¥e£¡
 - 1];

1362 c⁄° *
memb_±r
;

1364 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1365 
memb_±r
 =

1366 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1368 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1370 *
ñm_±r
 = 
ñm
;

1371  
memb_±r
;

1373 *
ñm_±r
 = 
NULL
;

1374  
NULL
;

1377 
	}
}

1380 
	$CHOICE_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
, c⁄° *
b±r
) {

1381 
a¢_TYPE_membî_t
 *
´lm
;

1382 
a¢_TYPE_membî_t
 *
bñm
;

1383 
≠ª£¡
 = 0;

1384 
b¥e£¡
 = 0;

1385 c⁄° *
amembî
 = 
	`_gë_membî_±r
(
td
, 
≠å
, &
´lm
, &
≠ª£¡
);

1386 c⁄° *
bmembî
 = 
	`_gë_membî_±r
(
td
, 
b±r
, &
bñm
, &
b¥e£¡
);

1388 if(
amembî
 && 
bmembî
) {

1389 if(
≠ª£¡
 =
b¥e£¡
) {

1390 
	`as£π
(
´lm
 =
bñm
);

1391  
´lm
->
ty≥
->
›
->
	`com∑ª_°ru˘
◊ñm->ty≥, 
amembî
, 
bmembî
);

1392 } if(
≠ª£¡
 < 
b¥e£¡
) {

1397 } if(!
amembî
) {

1402 
	}
}

1409 
	$CHOICE_v¨ü¡_gë_¥e£n˚
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
) {

1410 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

1411 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

1412  
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

1413 
	}
}

1422 
	$CHOICE_v¨ü¡_£t_¥e£n˚
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

1423 
¥e£¡
) {

1424 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

1425 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

1426 
ﬁd_¥e£¡
;

1428 if(!
•å
) {

1432 if(
¥e£¡
 > 
td
->
ñemíts_cou¡
)

1435 
ﬁd_¥e£¡
 =

1436 
	`_„tch_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
);

1437 if(
¥e£¡
 =
ﬁd_¥e£¡
)

1440 if(
ﬁd_¥e£¡
 != 0) {

1441 
	`as£π
(
ﬁd_¥e£¡
 <
td
->
ñemíts_cou¡
);

1442 
	`ASN_STRUCT_RESET
(*
td
, 
•å
);

1445 
	`_£t_¥e£¡_idx
(
•å
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
, 
¥e£¡
);

1448 
	}
}

1451 
a¢_øndom_fûl_ªsu…_t


1452 
	$CHOICE_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1453 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°r
,

1454 
size_t
 
max_Àngth
) {

1455 c⁄° 
a¢_CHOICE_•ecifics_t
 *
•ecs
 =

1456 (c⁄° 
a¢_CHOICE_•ecifics_t
 *)
td
->
•ecifics
;

1457 
a¢_øndom_fûl_ªsu…_t
 
ªs
;

1458 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

1459 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

1460 c⁄° 
a¢_TYPE_membî_t
 *
ñm
;

1461 
¥e£¡
;

1462 *
memb_±r
;

1463 **
memb_±r2
;

1464 *
°
 = *
•å
;

1466 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

1468 ()
c⁄°r
;

1470 if(
°
 =
NULL
) {

1471 
°
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

1472 if(
°
 =
NULL
) {

1473  
ªsu…_Áûed
;

1477 
¥e£¡
 = 
	`a¢_øndom_bëwìn
(1, 
td
->
ñemíts_cou¡
);

1478 
ñm
 = &
td
->
ñemíts
[
¥e£¡
 - 1];

1480 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1482 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1484 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

1485 
memb_±r2
 = &
memb_±r
;

1488 
ªs
 = 
ñm
->
ty≥
->
›
->
	`øndom_fûl
”lm->ty≥, 
memb_±r2
,

1489 &
ñm
->
ícodög_c⁄°øöts
, 
max_Àngth
);

1490 
	`_£t_¥e£¡_idx
(
°
, 
•ecs
->
¥es_off£t
, s≥cs->
¥es_size
, 
¥e£¡
);

1491 if(
ªs
.
code
 =
ARFILL_OK
) {

1492 *
•å
 = 
°
;

1494 if(
°
 =*
•å
) {

1495 
	`ASN_STRUCT_RESET
(*
td
, 
°
);

1497 
	`ASN_STRUCT_FREE
(*
td
, 
°
);

1501  
ªs
;

1502 
	}
}

1505 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_CHOICE
 = {

1506 
CHOICE_‰ì
,

1507 
CHOICE_¥öt
,

1508 
CHOICE_com∑ª
,

1509 
CHOICE_decode_bî
,

1510 
CHOICE_ícode_dî
,

1511 
CHOICE_decode_xî
,

1512 
CHOICE_ícode_xî
,

1513 #ifdef 
ASN_DISABLE_OER_SUPPORT


1517 
CHOICE_decode_€r
,

1518 
CHOICE_ícode_€r
,

1520 #ifde‡
ASN_DISABLE_PER_SUPPORT


1526 
CHOICE_decode_u≥r
,

1527 
CHOICE_ícode_u≥r
,

1528 
CHOICE_decode_≠î
,

1529 
CHOICE_ícode_≠î
,

1531 
CHOICE_øndom_fûl
,

1532 
CHOICE_outmo°_èg


	@constr_SEQUENCE.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<c⁄°r_SEQUENCE.h
>

8 
	~<OPEN_TYPE.h
>

9 
	~<≥r_›íty≥.h
>

16 
	#LEFT
 ((
size
<(
size_t
)
˘x
->
À·
)?size:(size_t)˘x->À·)

	)

29 
	#SIZE_VIOLATION
 (
˘x
->
À·
 >0 && (
size_t
)˘x->À· <
size
)

	)

35 #unde‡
ADVANCE


36 
	#ADVANCE
(
num_byãs
) do { \

37 
size_t
 
num
 = 
num_byãs
; \

38 
±r
 = ((c⁄° *ÌåË+ 
num
; \

39 
size
 -
num
; \

40 if(
˘x
->
À·
 >= 0) \

41 
˘x
->
À·
 -
num
; \

42 
c⁄sumed_my£lf
 +
num
; \

43 } 0)

	)

48 #unde‡
NEXT_PHASE


49 #unde‡
PHASE_OUT


50 
	#NEXT_PHASE
(
˘x
) do { \

51 
˘x
->
pha£
++; \

52 
˘x
->
°ï
 = 0; \

53 } 0)

	)

54 
	#PHASE_OUT
(
˘x
Ëdÿ{ ctx->
pha£
 = 10; } 0)

	)

59 #unde‡
RETURN


60 
	#RETURN
(
_code
) do { \

61 
rvÆ
.
code
 = 
_code
; \

62 
rvÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
;\

63  
rvÆ
; \

64 } 0)

	)

69 
	#IN_EXTENSION_GROUP
(
•ecs
, 
memb_idx
) \

70 ((
•ecs
)->
fú°_exãnsi⁄
 >= 0 \

71 && ()(
•ecs
)->
fú°_exãnsi⁄
 <(
memb_idx
))

	)

77 
	$_t2e_cmp
(c⁄° *
≠
, c⁄° *
bp
) {

78 c⁄° 
a¢_TYPE_èg2membî_t
 *
a
 = (c⁄°á¢_TYPE_èg2membî_à*)
≠
;

79 c⁄° 
a¢_TYPE_èg2membî_t
 *
b
 = (c⁄°á¢_TYPE_èg2membî_à*)
bp
;

81 
a_˛ass
 = 
	`BER_TAG_CLASS
(
a
->
ñ_èg
);

82 
b_˛ass
 = 
	`BER_TAG_CLASS
(
b
->
ñ_èg
);

84 if(
a_˛ass
 =
b_˛ass
) {

85 
bî_év_èg_t
 
a_vÆue
 = 
	`BER_TAG_VALUE
(
a
->
ñ_èg
);

86 
bî_év_èg_t
 
b_vÆue
 = 
	`BER_TAG_VALUE
(
b
->
ñ_èg
);

88 if(
a_vÆue
 =
b_vÆue
) {

89 if(
a
->
ñ_no
 > 
b
->el_no)

96 } if(
a_vÆue
 < 
b_vÆue
)

100 } if(
a_˛ass
 < 
b_˛ass
) {

105 
	}
}

111 
a¢_dec_rvÆ_t


112 
	$SEQUENCE_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

113 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

114 c⁄° *
±r
, 
size_t
 
size
, 
èg_mode
) {

118 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SEQUENCE_•ecifics_à*)
td
->
•ecifics
;

119 c⁄° 
a¢_TYPE_membî_t
 *
ñemíts
 = 
td
->elements;

124 *
°
 = *
°ru˘_±r
;

125 
a¢_°ru˘_˘x_t
 *
˘x
;

127 
bî_év_èg_t
 
év_èg
;

128 
a¢_dec_rvÆ_t
 
rvÆ
;

130 
ssize_t
 
c⁄sumed_my£lf
 = 0;

131 
size_t
 
edx
;

133 
	`ASN_DEBUG
("Decodög %†a†SEQUENCE", 
td
->
«me
);

138 if(
°
 == 0) {

139 
°
 = *
°ru˘_±r
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

140 if(
°
 == 0) {

141 
	`RETURN
(
RC_FAIL
);

148 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

153 
˘x
->
pha£
) {

161 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 
˘x
, 
±r
, 
size
,

162 
èg_mode
, 1, &
˘x
->
À·
, 0);

163 if(
rvÆ
.
code
 !
RC_OK
) {

164 
	`ASN_DEBUG
("%sÅagging check failed: %d",

165 
td
->
«me
, 
rvÆ
.
code
);

166  
rvÆ
;

169 if(
˘x
->
À·
 >= 0)

170 
˘x
->
À·
 +
rvÆ
.
c⁄sumed
;

171 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

173 
	`NEXT_PHASE
(
˘x
);

175 
	`ASN_DEBUG
("Structure consumes %ld bytes, buffer %ld",

176 ()
˘x
->
À·
, ()
size
);

190 
edx
 = ((
size_t
)
˘x
->
°ï
 >> 1);Édx < 
td
->
ñemíts_cou¡
;

191 
edx
++, 
˘x
->
°ï
 = (ctx->step & ~1) + 2) {

192 *
memb_±r
;

193 **
memb_±r2
;

194 
ssize_t
 
èg_Àn
;

195 
size_t
 
›t_edx_íd
;

196 
size_t
 
n
;

197 
u£_b£¨ch
;

199 if(
˘x
->
°ï
 & 1)

200 
mi¸›ha£2
;

205 
	`ASN_DEBUG
("I¿%†SEQUENCEÜe· %d,Édx=%" 
ASN_PRI_SIZE
 " flags=%d"

207 
td
->
«me
, ()
˘x
->
À·
, 
edx
,

208 
ñemíts
[
edx
].
Êags
,ÉÀmíts[edx].
›ti⁄Æ
,

209 
td
->
ñemíts_cou¡
);

211 if(
˘x
->
À·
 == 0

214 (
edx
 + 
ñemíts
[edx].
›ti⁄Æ
 =
td
->
ñemíts_cou¡
) ||

216 
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
))) {

217 
	`ASN_DEBUG
("End o‡SEQUENCE %s", 
td
->
«me
);

221 
	`PHASE_OUT
(
˘x
);

222 
	`RETURN
(
RC_OK
);

228 
èg_Àn
 = 
	`bî_„tch_èg
(
±r
, 
LEFT
, &
év_èg
);

229 
	`ASN_DEBUG
("Cuºíàèg i¿%†SEQUENCE f‹ÉÀmíà%" 
ASN_PRI_SIZE
 " "

231 
td
->
«me
, 
edx
, 
ñemíts
[edx].name,

232 
	`bî_év_èg_°rög
(
év_èg
), ()
èg_Àn
, ()
LEFT
);

233 
èg_Àn
) {

234 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

236 -1: 
	`RETURN
(
RC_FAIL
);

239 if(
˘x
->
À·
 < 0 && ((c⁄° 
uöt8_t
 *)
±r
)[0] == 0) {

240 if(
LEFT
 < 2) {

241 if(
SIZE_VIOLATION
) {

242 
	`RETURN
(
RC_FAIL
);

244 
	`RETURN
(
RC_WMORE
);

246 } if(((c⁄° 
uöt8_t
 *)
±r
)[1] == 0) {

247 
	`ASN_DEBUG
("edx = %" 
ASN_PRI_SIZE
 ", o± = %d,Éc=%d", 
edx
,

248 
ñemíts
[
edx
].
›ti⁄Æ
, 
td
->
ñemíts_cou¡
);

249 if((
edx
 + 
ñemíts
[edx].
›ti⁄Æ
 =
td
->
ñemíts_cou¡
)

250 || 
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
)) {

260 
pha£3
;

268 
u£_b£¨ch
 = 0;

269 
›t_edx_íd
 = 
edx
 + 
ñemíts
[edx].
›ti⁄Æ
 + 1;

270 if(
›t_edx_íd
 > 
td
->
ñemíts_cou¡
)

271 
›t_edx_íd
 = 
td
->
ñemíts_cou¡
;

272 if(
›t_edx_íd
 - 
edx
 > 8) {

274 
›t_edx_íd
 = 
edx
 + 8;

275 
u£_b£¨ch
 = 1;

278 
n
 = 
edx
;Ç < 
›t_edx_íd
;Ç++) {

279 if(
	`BER_TAGS_EQUAL
(
év_èg
, 
ñemíts
[
n
].
èg
)) {

285 
edx
 = 
n
;

286 
˘x
->
°ï
 = 1 + 2 * 
edx
;

287 
mi¸›ha£2
;

288 } if(
ñemíts
[
n
].
Êags
 & 
ATF_ANY_TYPE
) {

293 
edx
 = 
n
;

294 
˘x
->
°ï
 = 1 + 2 * 
edx
;

295 
mi¸›ha£2
;

296 } if(
ñemíts
[
n
].
èg
 =(
bî_év_èg_t
)-1) {

297 
u£_b£¨ch
 = 1;

301 if(
u£_b£¨ch
) {

306 c⁄° 
a¢_TYPE_èg2membî_t
 *
t2m
;

307 
a¢_TYPE_èg2membî_t
 
key
 = {0, 0, 0, 0};

308 
key
.
ñ_èg
 = 
év_èg
;

309 
key
.
ñ_no
 = 
edx
;

310 
t2m
 = (c⁄° 
a¢_TYPE_èg2membî_t
 *)
	`b£¨ch
(&
key
,

311 
•ecs
->
èg2ñ
, s≥cs->
èg2ñ_cou¡
,

312 (
•ecs
->
èg2ñ
[0]), 
_t2e_cmp
);

313 if(
t2m
) {

314 c⁄° 
a¢_TYPE_èg2membî_t
 *
be°
 = 0;

315 c⁄° 
a¢_TYPE_èg2membî_t
 *
t2m_f
, *
t2m_l
;

316 
size_t
 
edx_max
 = 
edx
 + 
ñemíts
[edx].
›ti⁄Æ
;

321 
t2m_f
 = 
t2m
 +Å2m->
toff_fú°
;

322 
t2m_l
 = 
t2m
 +Å2m->
toff_œ°
;

323 
t2m
 = 
t2m_f
;Å2m <
t2m_l
;Å2m++) {

324 if(
t2m
->
ñ_no
 > 
edx_max
) ;

325 if(
t2m
->
ñ_no
 < 
edx
) ;

326 
be°
 = 
t2m
;

328 if(
be°
) {

329 
edx
 = 
be°
->
ñ_no
;

330 
˘x
->
°ï
 = 1 + 2 * 
edx
;

331 
mi¸›ha£2
;

334 
n
 = 
›t_edx_íd
;

336 if(
n
 =
›t_edx_íd
) {

343 if(!
	`IN_EXTENSION_GROUP
(
•ecs
,

344 
edx
 + 
ñemíts
[edx].
›ti⁄Æ
)) {

345 
	`ASN_DEBUG
("U√x≥˘edÅag %†◊à%" 
ASN_PRI_SIZE
 ")",

346 
	`bî_év_èg_°rög
(
év_èg
), 
edx
);

347 
	`ASN_DEBUG
("ExpectedÅag %s (%s)%s",

348 
	`bî_év_èg_°rög
(
ñemíts
[
edx
].
èg
),

349 
ñemíts
[
edx
].
«me
,

350 
ñemíts
[
edx
].
›ti⁄Æ


352 
	`RETURN
(
RC_FAIL
);

355 
ssize_t
 
skù
;

356 
edx
 +
ñemíts
[edx].
›ti⁄Æ
;

358 
	`ASN_DEBUG
("Skùpög u√x≥˘ed %†◊à%" 
ASN_PRI_SIZE
 ")",

359 
	`bî_év_èg_°rög
(
év_èg
), 
edx
);

360 
skù
 = 
	`bî_skù_Àngth
(
›t_codec_˘x
,

361 
	`BER_TLV_CONSTRUCTED
(
±r
),

362 (c⁄° *)
±r
 + 
èg_Àn
,

363 
LEFT
 - 
èg_Àn
);

364 
	`ASN_DEBUG
("SkipÜength %d in %s",

365 ()
skù
, 
td
->
«me
);

366 
skù
) {

367 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

369 -1: 
	`RETURN
(
RC_FAIL
);

372 
	`ADVANCE
(
skù
 + 
èg_Àn
);

373 
˘x
->
°ï
 -= 2;

374 
edx
--;

382 
˘x
->
°ï
 |= 1;

383 
mi¸›ha£2
:

384 
	`ASN_DEBUG
("InsidêSEQUENCE %†MF2", 
td
->
«me
);

391 if(
ñemíts
[
edx
].
Êags
 & 
ATF_POINTER
) {

393 
memb_±r2
 = (**)((*)
°
 + 
ñemíts
[
edx
].
memb_off£t
);

399 
memb_±r
 = (*)
°
 + 
ñemíts
[
edx
].
memb_off£t
;

400 
memb_±r2
 = &
memb_±r
;

405 if(
ñemíts
[
edx
].
Êags
 & 
ATF_OPEN_TYPE
) {

406 
rvÆ
 = 
	`OPEN_TYPE_bî_gë
(
›t_codec_˘x
, 
td
, 
°
, &
ñemíts
[
edx
], 
±r
, 
LEFT
);

408 
rvÆ
 = 
ñemíts
[
edx
].
ty≥
->
›
->
	`bî_decodî
(
›t_codec_˘x
,

409 
ñemíts
[
edx
].
ty≥
,

410 
memb_±r2
, 
±r
, 
LEFT
,

411 
ñemíts
[
edx
].
èg_mode
);

413 
	`ASN_DEBUG
("I¿%†SEQUENCE decoded %" 
ASN_PRI_SIZE
 " %s of %d "

415 
td
->
«me
, 
edx
, 
ñemíts
[edx].
ty≥
->name,

416 ()
LEFT
, ()
rvÆ
.
c⁄sumed
,ÑvÆ.
code
, ()
size
);

417 
rvÆ
.
code
) {

418 
RC_OK
:

420 
RC_WMORE
:

421 if(!
SIZE_VIOLATION
) {

422 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

423 
	`RETURN
(
RC_WMORE
);

425 
	`ASN_DEBUG
("Size violation (c->l=%ld <= s=%ld)",

426 ()
˘x
->
À·
, ()
size
);

428 
RC_FAIL
:

429 
	`RETURN
(
RC_FAIL
);

432 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

435 
pha£3
:

436 
˘x
->
pha£
 = 3;

441 
	`ASN_DEBUG
("SEQUENCE %s Leftover: %ld, size = %ld",

442 
td
->
«me
, ()
˘x
->
À·
, ()
size
);

447 
˘x
->
À·
) {

448 
ssize_t
 
é
, 
Œ
;

450 
é
 = 
	`bî_„tch_èg
(
±r
, 
LEFT
, &
év_èg
);

451 
é
) {

452 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

454 -1: 
	`RETURN
(
RC_FAIL
);

460 if(
˘x
->
À·
 < 0

461 && ((c⁄° 
uöt8_t
 *)
±r
)[0] == 0) {

462 if(
LEFT
 < 2) {

463 if(
SIZE_VIOLATION
)

464 
	`RETURN
(
RC_FAIL
);

466 
	`RETURN
(
RC_WMORE
);

467 } if(((c⁄° 
uöt8_t
 *)
±r
)[1] == 0) {

471 
	`ADVANCE
(2);

472 
˘x
->
À·
++;

473 
˘x
->
pha£
 = 4;

478 if(!
	`IN_EXTENSION_GROUP
(
•ecs
, 
td
->
ñemíts_cou¡
)

479 || 
˘x
->
pha£
 == 4) {

480 
	`ASN_DEBUG
("Unexpected continuation "

483 
td
->
«me
,

484 
	`bî_év_èg_°rög
(
év_èg
));

485 
	`RETURN
(
RC_FAIL
);

488 
Œ
 = 
	`bî_skù_Àngth
(
›t_codec_˘x
,

489 
	`BER_TLV_CONSTRUCTED
(
±r
),

490 (c⁄° *)
±r
 + 
é
, 
LEFT
 -Ål);

491 
Œ
) {

492 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

494 -1: 
	`RETURN
(
RC_FAIL
);

497 
	`ADVANCE
(
é
 + 
Œ
);

500 
	`PHASE_OUT
(
˘x
);

503 
	`RETURN
(
RC_OK
);

504 
	}
}

510 
a¢_íc_rvÆ_t


511 
	$SEQUENCE_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

512 
èg_mode
, 
bî_év_èg_t
 
èg
,

513 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

514 
size_t
 
compuãd_size
 = 0;

515 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

516 
ssize_t
 
ªt
;

517 
size_t
 
edx
;

519 
	`ASN_DEBUG
("%s %sás SEQUENCE",

520 
cb
?"Encodög":"E°im©ög", 
td
->
«me
);

525 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

526 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

528 c⁄° *
memb_±r
;

529 c⁄° *c⁄° *
memb_±r2
;

531 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

532 
memb_±r2
 =

533 (c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

534 if(!*
memb_±r2
) {

535 
	`ASN_DEBUG
("EÀmíà%†%" 
ASN_PRI_SIZE
 "ÇotÖresent",

536 
ñm
->
«me
, 
edx
);

537 if(
ñm
->
›ti⁄Æ
)

540 
ASN__ENCODE_FAILED
;

543 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

544 
memb_±r2
 = &
memb_±r
;

548 if(
ñm
->
deÁu…_vÆue_cmp
 &&Élm->
	`deÁu…_vÆue_cmp
(*
memb_±r2
) == 0)

551 
îvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, *
memb_±r2
,

552 
ñm
->
èg_mode
,Élm->
èg
,

554 if(
îvÆ
.
ícoded
 == -1)

555  
îvÆ
;

556 
compuãd_size
 +
îvÆ
.
ícoded
;

557 
	`ASN_DEBUG
("Membî %" 
ASN_PRI_SIZE
 " %sÉstimated %ld bytes",

558 
edx
, 
ñm
->
«me
, ()
îvÆ
.
ícoded
);

564 
ªt
 = 
	`dî_wrôe_ègs
(
td
, 
compuãd_size
, 
èg_mode
, 1, 
èg
, 
cb
, 
≠p_key
);

565 
	`ASN_DEBUG
("WrŸêègs: %ld (+%ld)", ()
ªt
, ()
compuãd_size
);

566 if(
ªt
 == -1)

567 
ASN__ENCODE_FAILED
;

568 
îvÆ
.
ícoded
 = 
compuãd_size
 + 
ªt
;

570 if(!
cb
Ë
	`ASN__ENCODED_OK
(
îvÆ
);

575 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

576 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

577 
a¢_íc_rvÆ_t
 
tm≥rvÆ
 = {0,0,0};

578 c⁄° *
memb_±r
;

579 c⁄° *c⁄° *
memb_±r2
;

581 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

582 
memb_±r2
 =

583 (c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

584 if(!*
memb_±r2
) ;

586 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

587 
memb_±r2
 = &
memb_±r
;

591 if(
ñm
->
deÁu…_vÆue_cmp
 &&Élm->
	`deÁu…_vÆue_cmp
(*
memb_±r2
) == 0)

594 
tm≥rvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, *
memb_±r2
,

595 
ñm
->
èg_mode
,Élm->
èg
, 
cb
, 
≠p_key
);

596 if(
tm≥rvÆ
.
ícoded
 == -1)

597  
tm≥rvÆ
;

598 
compuãd_size
 -
tm≥rvÆ
.
ícoded
;

599 
	`ASN_DEBUG
("Membî %" 
ASN_PRI_SIZE
 " %s of SEQUENCE %sÉncoded in %ld bytes",

600 
edx
, 
ñm
->
«me
, 
td
->«me, ()
tm≥rvÆ
.
ícoded
);

603 if(
compuãd_size
 != 0)

607 
ASN__ENCODE_FAILED
;

609 
	`ASN__ENCODED_OK
(
îvÆ
);

610 
	}
}

613 #unde‡
XER_ADVANCE


614 
	#XER_ADVANCE
(
num_byãs
) \

616 
size_t
 
num
 = (
num_byãs
); \

617 
±r
 = ((c⁄° *ÌåË+ 
num
; \

618 
size
 -
num
; \

619 
c⁄sumed_my£lf
 +
num
; \

620 } 0)

	)

625 
a¢_dec_rvÆ_t


626 
	$SEQUENCE_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

627 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

628 c⁄° *
›t_m«me
, c⁄° *
±r
, 
size_t
 
size
) {

632 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs


633 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

634 
a¢_TYPE_membî_t
 *
ñemíts
 = 
td
->elements;

635 c⁄° *
xml_èg
 = 
›t_m«me
 ? o±_m«mê: 
td
->xml_tag;

640 *
°
 = *
°ru˘_±r
;

641 
a¢_°ru˘_˘x_t
 *
˘x
;

643 
a¢_dec_rvÆ_t
 
rvÆ
;

644 
ssize_t
 
c⁄sumed_my£lf
 = 0;

645 
size_t
 
edx
;

650 if(
°
 == 0) {

651 
°
 = *
°ru˘_±r
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

652 if(
°
 =0Ë
	`RETURN
(
RC_FAIL
);

658 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

669 
edx
 = 
˘x
->
°ï
; ctx->
pha£
 <= 3;) {

670 
pxî_chunk_ty≥_e
 
ch_ty≥
;

671 
ssize_t
 
ch_size
;

672 
xî_check_èg_e
 
tcv
;

673 
a¢_TYPE_membî_t
 *
ñm
;

678 if(
˘x
->
pha£
 == 2) {

679 
a¢_dec_rvÆ_t
 
tm¥vÆ
;

680 *
memb_±r_d⁄tu£
;

681 **
memb_±r2
;

683 
ñm
 = &
td
->
ñemíts
[
edx
];

685 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

687 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

689 
memb_±r_d⁄tu£
 = (*)
°
 + 
ñm
->
memb_off£t
;

690 
memb_±r2
 = &
memb_±r_d⁄tu£
;

693 if(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
) {

694 
tm¥vÆ
 = 
	`OPEN_TYPE_xî_gë
(
›t_codec_˘x
, 
td
, 
°
, 
ñm
, 
±r
, 
size
);

697 
tm¥vÆ
 = 
ñm
->
ty≥
->
›
->
	`xî_decodî
(
›t_codec_˘x
,

698 
ñm
->
ty≥
, 
memb_±r2
,Élm->
«me
,

699 
±r
, 
size
);

701 
	`XER_ADVANCE
(
tm¥vÆ
.
c⁄sumed
);

702 if(
tm¥vÆ
.
code
 !
RC_OK
)

703 
	`RETURN
(
tm¥vÆ
.
code
);

704 
˘x
->
pha£
 = 1;

705 
˘x
->
°ï
 = ++
edx
;

706 
	`ASN_DEBUG
("XER/SEQUENCEÖhase => %d, step => %d",

707 
˘x
->
pha£
, ctx->
°ï
);

714 
ch_size
 = 
	`xî_√xt_tokí
(&
˘x
->
c⁄ãxt
, 
±r
, 
size
,

715 &
ch_ty≥
);

716 if(
ch_size
 == -1) {

717 
	`RETURN
(
RC_FAIL
);

719 
ch_ty≥
) {

720 
PXER_WMORE
:

721 
	`RETURN
(
RC_WMORE
);

722 
PXER_COMMENT
:

723 
PXER_TEXT
:

724 
	`XER_ADVANCE
(
ch_size
);

726 
PXER_TAG
:

731 
tcv
 = 
	`xî_check_èg
(
±r
, 
ch_size
, 
xml_èg
);

732 
	`ASN_DEBUG
("XER/SEQUENCE:Åcv = %d,Öh=%d [%s]",

733 
tcv
, 
˘x
->
pha£
, 
xml_èg
);

736 if(
˘x
->
pha£
 == 3) {

737 
	`xî_skù_unknown
(
tcv
, &
˘x
->
À·
)) {

739 
˘x
->
pha£
 = 4;

740 
	`RETURN
(
RC_FAIL
);

742 
	`XER_ADVANCE
(
ch_size
);

745 
	`XER_ADVANCE
(
ch_size
);

746 
˘x
->
pha£
 = 1;

749 
˘x
->
pha£
 = 1;

754 
tcv
) {

755 
XCT_CLOSING
:

756 if(
˘x
->
pha£
 == 0) ;

757 
˘x
->
pha£
 = 0;

759 
XCT_BOTH
:

760 if(
˘x
->
pha£
 == 0) {

761 if(
edx
 >
td
->
ñemíts_cou¡
 ||

763 (
edx
 + 
ñemíts
[edx].
›ti⁄Æ
 =
td
->
ñemíts_cou¡
) ||

765 
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
)) {

766 
	`XER_ADVANCE
(
ch_size
);

767 
˘x
->
pha£
 = 4;

768 
	`RETURN
(
RC_OK
);

770 
	`ASN_DEBUG
("PrematureÉnd of XER SEQUENCE");

771 
	`RETURN
(
RC_FAIL
);

775 
XCT_OPENING
:

776 if(
˘x
->
pha£
 == 0) {

777 
	`XER_ADVANCE
(
ch_size
);

778 
˘x
->
pha£
 = 1;

782 
XCT_UNKNOWN_OP
:

783 
XCT_UNKNOWN_BO
:

785 
	`ASN_DEBUG
("XER/SEQUENCE:Åcv=%d,Öh=%d,Édx=%" 
ASN_PRI_SIZE
 "",

786 
tcv
, 
˘x
->
pha£
, 
edx
);

787 if(
˘x
->
pha£
 != 1) {

791 if(
edx
 < 
td
->
ñemíts_cou¡
) {

795 
size_t
 
n
;

796 
size_t
 
edx_íd
 = 
edx
 + 
ñemíts
[edx].
›ti⁄Æ
 + 1;

797 if(
edx_íd
 > 
td
->
ñemíts_cou¡
)

798 
edx_íd
 = 
td
->
ñemíts_cou¡
;

799 
n
 = 
edx
;Ç < 
edx_íd
;Ç++) {

800 
ñm
 = &
td
->
ñemíts
[
n
];

801 
tcv
 = 
	`xî_check_èg
(
±r
, 
ch_size
, 
ñm
->
«me
);

802 
tcv
) {

803 
XCT_BOTH
:

804 
XCT_OPENING
:

808 
˘x
->
°ï
 = 
edx
 = 
n
;

809 
˘x
->
pha£
 = 2;

811 
XCT_UNKNOWN_OP
:

812 
XCT_UNKNOWN_BO
:

815 
n
 = 
edx_íd
;

820 if(
n
 !
edx_íd
)

823 
	`ASN_DEBUG
("Ouào‡deföed membîs: %" 
ASN_PRI_SIZE
 "/%u",

824 
edx
, 
td
->
ñemíts_cou¡
);

828 if(
	`IN_EXTENSION_GROUP
(
•ecs
,

829 
edx
 + (edx < 
td
->
ñemíts_cou¡


830 ? 
ñemíts
[
edx
].
›ti⁄Æ
 : 0))) {

831 
	`ASN_DEBUG
("GŸá¡icù©edÉxãnsi⁄áà%" 
ASN_PRI_SIZE
 "",

832 
edx
);

838 if(
tcv
 & 
XCT_CLOSING
) {

841 
˘x
->
À·
 = 1;

842 
˘x
->
pha£
 = 3;

844 
	`XER_ADVANCE
(
ch_size
);

853 
	`ASN_DEBUG
("Unexpected XMLÅag in SEQUENCE [%c%c%c%c%c%c]",

854 
size
>0?((c⁄° *)
±r
)[0]:'.',

855 
size
>1?((c⁄° *)
±r
)[1]:'.',

856 
size
>2?((c⁄° *)
±r
)[2]:'.',

857 
size
>3?((c⁄° *)
±r
)[3]:'.',

858 
size
>4?((c⁄° *)
±r
)[4]:'.',

859 
size
>5?((c⁄° *)
±r
)[5]:'.');

863 
˘x
->
pha£
 = 4;

864 
	`RETURN
(
RC_FAIL
);

865 
	}
}

867 
a¢_íc_rvÆ_t


868 
	$SEQUENCE_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

869 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

870 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

871 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

872 
xˇn
 = (
Êags
 & 
XER_F_CANONICAL
);

873 
a¢_TYPE_des¸ùt‹_t
 *
tmp_def_vÆ_td
 = 0;

874 *
tmp_def_vÆ
 = 0;

875 
size_t
 
edx
;

877 if(!
•å
Ë
ASN__ENCODE_FAILED
;

879 
î
.
ícoded
 = 0;

881 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

882 
a¢_íc_rvÆ_t
 
tm≥r
 = {0,0,0};

883 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

884 c⁄° *
memb_±r
;

885 c⁄° *
m«me
 = 
ñm
->
«me
;

886 
mÀn
 = 
	`°æí
(
m«me
);

888 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

889 
memb_±r
 =

890 *(c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

891 if(!
memb_±r
) {

892 
	`as£π
(
tmp_def_vÆ
 == 0);

893 if(
ñm
->
deÁu…_vÆue_£t
) {

894 if(
ñm
->
	`deÁu…_vÆue_£t
(&
tmp_def_vÆ
)) {

895 
ASN__ENCODE_FAILED
;

897 
memb_±r
 = 
tmp_def_vÆ
;

898 
tmp_def_vÆ_td
 = 
ñm
->
ty≥
;

900 } if(
ñm
->
›ti⁄Æ
) {

904 
ASN__ENCODE_FAILED
;

908 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

911 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

912 
	`ASN__CALLBACK3
("<", 1, 
m«me
, 
mÀn
, ">", 1);

915 
tm≥r
 = 
ñm
->
ty≥
->
›
->
	`xî_ícodî
”lm->ty≥, 
memb_±r
, 
ûevñ
 + 1,

916 
Êags
, 
cb
, 
≠p_key
);

917 if(
tmp_def_vÆ
) {

918 
	`ASN_STRUCT_FREE
(*
tmp_def_vÆ_td
, 
tmp_def_vÆ
);

919 
tmp_def_vÆ
 = 0;

921 if(
tm≥r
.
ícoded
 == -1) Åmper;

922 
î
.
ícoded
 +
tm≥r
.encoded;

924 
	`ASN__CALLBACK3
("</", 2, 
m«me
, 
mÀn
, ">", 1);

927 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
 - 1);

929 
	`ASN__ENCODED_OK
(
î
);

930 
cb_Áûed
:

931 if(
tmp_def_vÆ
Ë
	`ASN_STRUCT_FREE
(*
tmp_def_vÆ_td
,Åmp_def_val);

932 
ASN__ENCODE_FAILED
;

933 
	}
}

936 
	$SEQUENCE_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

937 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

938 
size_t
 
edx
;

939 
ªt
;

941 if(!
•å
Ë (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

944 if(
	`cb
(
td
->
«me
, 
	`°æí
—d->«me), 
≠p_key
) < 0

945 || 
	`cb
(" ::{", 6, 
≠p_key
) < 0)

948 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

949 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

950 c⁄° *
memb_±r
;

952 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

953 
memb_±r
 = *(c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

954 if(!
memb_±r
) {

955 if(
ñm
->
›ti⁄Æ
) ;

960 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

964 
	`_i_INDENT
(1);

967 if(
	`cb
(
ñm
->
«me
, 
	`°æí
”lm->«me), 
≠p_key
) < 0

968 || 
	`cb
(": ", 2, 
≠p_key
) < 0)

972 
ªt
 = 
ñm
->
ty≥
->
›
->
	`¥öt_°ru˘
”lm->ty≥, 
memb_±r
, 
ûevñ
 + 1,

973 
cb
, 
≠p_key
);

974 if(
ªt
) Ñet;

977 
ûevñ
--;

978 
	`_i_INDENT
(1);

980  (
	`cb
("}", 1, 
≠p_key
) < 0) ? -1 : 0;

981 
	}
}

984 
	$SEQUENCE_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
•å
,

985 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

986 
size_t
 
edx
;

987 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs
 =

988 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

989 
a¢_°ru˘_˘x_t
 *
˘x
;

991 if(!
td
 || !
•å
)

994 
	`ASN_DEBUG
("Fªeög %†a†SEQUENCE", 
td
->
«me
);

996 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

997 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

998 *
memb_±r
;

999 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1000 
memb_±r
 = *(**)((*)
•å
 + 
ñm
->
memb_off£t
);

1001 if(
memb_±r
)

1002 
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
, 
memb_±r
);

1004 
memb_±r
 = (*)((*)
•å
 + 
ñm
->
memb_off£t
);

1005 
	`ASN_STRUCT_FREE_CONTENTS_ONLY
(*
ñm
->
ty≥
, 
memb_±r
);

1010 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
•å
 + 
•ecs
->
˘x_off£t
);

1011 
	`FREEMEM
(
˘x
->
±r
);

1013 
mëhod
) {

1014 
ASFM_FREE_EVERYTHING
:

1015 
	`FREEMEM
(
•å
);

1017 
ASFM_FREE_UNDERLYING
:

1019 
ASFM_FREE_UNDERLYING_AND_RESET
:

1020 
	`mem£t
(

1021 
•å
, 0,

1022 ((c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)(
td
->
•ecifics
))->
°ru˘_size
);

1025 
	}
}

1028 
	$SEQUENCE_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

1029 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

1030 
size_t
 
edx
;

1032 if(!
•å
) {

1033 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

1035 
td
->
«me
, 
__FILE__
, 
__LINE__
);

1042 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1043 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1044 c⁄° *
memb_±r
;

1046 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1047 
memb_±r
 = *(c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1048 if(!
memb_±r
) {

1049 if(
ñm
->
›ti⁄Æ
)

1051 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

1053 
td
->
«me
, 
ñm
->«me, 
__FILE__
, 
__LINE__
);

1057 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1060 if(
ñm
->
ícodög_c⁄°øöts
.
gíîÆ_c⁄°øöts
) {

1061 
ªt
 = 
ñm
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
”lm->
ty≥
, 
memb_±r
,

1062 
˘Áûcb
, 
≠p_key
);

1063 if(
ªt
) Ñet;

1065  
ñm
->
ty≥
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
(elm->type,

1066 
memb_±r
, 
˘Áûcb
, 
≠p_key
);

1071 
	}
}

1073 #i‚de‡
ASN_DISABLE_PER_SUPPORT


1075 
a¢_dec_rvÆ_t


1076 
	$SEQUENCE_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1077 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1078 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

1079 
a¢_≥r_d©a_t
 *
pd
) {

1080 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SEQUENCE_•ecifics_à*)
td
->
•ecifics
;

1081 *
°
 = *
•å
;

1082 
exçª£¡
;

1083 
uöt8_t
 *
›ªs
;

1084 
a¢_≥r_d©a_t
 
›md
;

1085 
a¢_dec_rvÆ_t
 
rv
;

1086 
size_t
 
edx
;

1088 ()
c⁄°øöts
;

1090 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

1091 
ASN__DECODE_FAILED
;

1093 if(!
°
) {

1094 
°
 = *
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

1095 if(!
°
Ë
ASN__DECODE_FAILED
;

1098 
	`ASN_DEBUG
("Decodög %†a†SEQUENCE (UPER)", 
td
->
«me
);

1101 if(
•ecs
->
fú°_exãnsi⁄
 < 0) {

1102 
exçª£¡
 = 0;

1104 
exçª£¡
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

1105 if(
exçª£¡
 < 0Ë
ASN__DECODE_STARVED
;

1109 
	`mem£t
(&
›md
, 0, (opmd));

1110 if(
•ecs
->
roms_cou¡
) {

1111 
›ªs
 = (
uöt8_t
 *)
	`MALLOC
(((
•ecs
->
roms_cou¡
 + 7) >> 3) + 1);

1112 if(!
›ªs
Ë
ASN__DECODE_FAILED
;

1114 if(
	`≥r_gë_m™y_bôs
(
pd
, 
›ªs
, 0, 
•ecs
->
roms_cou¡
)) {

1115 
	`FREEMEM
(
›ªs
);

1116 
ASN__DECODE_STARVED
;

1118 
›md
.
buf„r
 = 
›ªs
;

1119 
›md
.
nbôs
 = 
•ecs
->
roms_cou¡
;

1120 
	`ASN_DEBUG
("Read inÖresence bitmap for %s of %d bits (%x..)",

1121 
td
->
«me
, 
•ecs
->
roms_cou¡
, *
›ªs
);

1123 
›ªs
 = 0;

1129 
edx
 = 0;

1130 
edx
 < (
•ecs
->
fú°_exãnsi⁄
 < 0 ? 
td
->
ñemíts_cou¡


1131 : (
size_t
)
•ecs
->
fú°_exãnsi⁄
);

1132 
edx
++) {

1133 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1134 *
memb_±r
;

1135 **
memb_±r2
;

1137 
	`as£π
(!
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
));

1140 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1141 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1143 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

1144 
memb_±r2
 = &
memb_±r
;

1148 if(
ñm
->
›ti⁄Æ
) {

1149 
¥e£¡
 = 
	`≥r_gë_„w_bôs
(&
›md
, 1);

1150 
	`ASN_DEBUG
("Member %s->%s is optional,Ö=%d (%d->%d)",

1151 
td
->
«me
, 
ñm
->«me, 
¥e£¡
,

1152 ()
›md
.
nboff
, ()›md.
nbôs
);

1153 if(
¥e£¡
 == 0) {

1155 if(
ñm
->
deÁu…_vÆue_£t
) {

1157 if(
ñm
->
	`deÁu…_vÆue_£t
(
memb_±r2
)) {

1158 
	`FREEMEM
(
›ªs
);

1159 
ASN__DECODE_FAILED
;

1161 
	`ASN_DEBUG
("Filled-in default");

1170 
	`ASN_DEBUG
("Decodög membî \"%s\" i¿%s", 
ñm
->
«me
, 
td
->name);

1172 if(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
) {

1173 
rv
 = 
	`OPEN_TYPE_u≥r_gë
(
›t_codec_˘x
, 
td
, 
°
, 
ñm
, 
pd
);

1175 
rv
 = 
ñm
->
ty≥
->
›
->
	`u≥r_decodî
(
›t_codec_˘x
,Élm->type,

1176 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

1178 if(
rv
.
code
 !
RC_OK
) {

1179 
	`ASN_DEBUG
("Failed decode %s in %s",

1180 
ñm
->
«me
, 
td
->name);

1181 
	`FREEMEM
(
›ªs
);

1182  
rv
;

1187 
	`FREEMEM
(
›ªs
);

1192 if(
exçª£¡
) {

1193 
ssize_t
 
bmÀngth
;

1194 
uöt8_t
 *
ïªs
;

1195 
a¢_≥r_d©a_t
 
ïmd
;

1197 
bmÀngth
 = 
	`u≥r_gë_n¶ígth
(
pd
);

1198 if(
bmÀngth
 < 0Ë
ASN__DECODE_STARVED
;

1200 
	`ASN_DEBUG
("Exãnsi⁄†%" 
ASN_PRI_SSIZE
 "Öª£¡ i¿%s", 
bmÀngth
, 
td
->
«me
);

1202 
ïªs
 = (
uöt8_t
 *)
	`MALLOC
((
bmÀngth
 + 15) >> 3);

1203 if(!
ïªs
Ë
ASN__DECODE_STARVED
;

1206 if(
	`≥r_gë_m™y_bôs
(
pd
, 
ïªs
, 0, 
bmÀngth
)) {

1207 
	`FREEMEM
(
ïªs
);

1208 
ASN__DECODE_STARVED
;

1211 
	`mem£t
(&
ïmd
, 0, (epmd));

1212 
ïmd
.
buf„r
 = 
ïªs
;

1213 
ïmd
.
nbôs
 = 
bmÀngth
;

1214 
	`ASN_DEBUG
("Read inÉxtensions bitmap for %s of %ld bits (%x..)",

1215 
td
->
«me
, ()
bmÀngth
, *
ïªs
);

1218 
edx
 = 
•ecs
->
fú°_exãnsi⁄
;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1219 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1220 *
memb_±r
;

1221 **
memb_±r2
;

1222 
¥e£¡
;

1225 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1226 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1228 
memb_±r
 = (*)((*)
°
 + 
ñm
->
memb_off£t
);

1229 
memb_±r2
 = &
memb_±r
;

1232 
¥e£¡
 = 
	`≥r_gë_„w_bôs
(&
ïmd
, 1);

1233 if(
¥e£¡
 <= 0) {

1234 if(
¥e£¡
 < 0) ;

1238 
	`ASN_DEBUG
("Decodög membî %†ö %†%p", 
ñm
->
«me
, 
td
->name,

1239 *
memb_±r2
);

1240 
rv
 = 
	`u≥r_›í_ty≥_gë
(
›t_codec_˘x
, 
ñm
->
ty≥
,

1241 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

1242 
memb_±r2
, 
pd
);

1243 if(
rv
.
code
 !
RC_OK
) {

1244 
	`FREEMEM
(
ïªs
);

1245  
rv
;

1252 
	`ASN_DEBUG
("Getting overflowÉxtensions");

1253 
	`≥r_gë_„w_bôs
(&
ïmd
, 1)) {

1257 if(
	`u≥r_›í_ty≥_skù
(
›t_codec_˘x
, 
pd
)) {

1258 
	`FREEMEM
(
ïªs
);

1259 
ASN__DECODE_STARVED
;

1261 
	`ASN_DEBUG
("Skipped overflowÉxtension");

1267 
	`FREEMEM
(
ïªs
);

1270 if(
•ecs
->
fú°_exãnsi⁄
 >= 0) {

1271 
i
;

1273 
i
 = 
•ecs
->
roms_cou¡
; i < s≥cs->roms_cou¡ + s≥cs->
aoms_cou¡
;

1274 
i
++) {

1275 
a¢_TYPE_membî_t
 *
ñm
;

1276 **
memb_±r2
;

1278 
edx
 = 
•ecs
->
oms
[
i
];

1279 
ñm
 = &
td
->
ñemíts
[
edx
];

1281 if(!
ñm
->
deÁu…_vÆue_£t
) ;

1284 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1285 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1286 if(*
memb_±r2
) ;

1292 if(
ñm
->
	`deÁu…_vÆue_£t
(
memb_±r2
)) {

1293 
ASN__DECODE_FAILED
;

1298 
rv
.
c⁄sumed
 = 0;

1299 
rv
.
code
 = 
RC_OK
;

1300  
rv
;

1301 
	}
}

1304 
	$SEQUENCE__h™dÀ_exãnsi⁄s
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

1305 
a¢_≥r_ouç_t
 *
po1
,á¢_≥r_ouç_à*
po2
) {

1306 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs
 =

1307 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

1308 
exts_¥e£¡
 = 0;

1309 
exts_cou¡
 = 0;

1310 
size_t
 
edx
;

1312 if(
•ecs
->
fú°_exãnsi⁄
 < 0) {

1317 
edx
 = 
•ecs
->
fú°_exãnsi⁄
;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1318 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1319 c⁄° *
memb_±r
;

1320 c⁄° *c⁄° *
memb_±r2
;

1321 
¥e£¡
;

1324 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1325 
memb_±r2
 =

1326 (c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1327 
¥e£¡
 = (*
memb_±r2
 != 0);

1329 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1330 
memb_±r2
 = &
memb_±r
;

1331 
¥e£¡
 = 1;

1334 
	`ASN_DEBUG
("checkög %s:%†(@%" 
ASN_PRI_SIZE
 "Ë¥e£¡ => %d", 
ñm
->
«me
,

1335 
ñm
->
ty≥
->
«me
, 
edx
, 
¥e£¡
);

1336 
exts_cou¡
++;

1337 
exts_¥e£¡
 +
¥e£¡
;

1340 if(
po1
 && 
	`≥r_put_„w_bôs
’o1, 
¥e£¡
, 1)) {

1344 if(
po2
 && 
¥e£¡


1345 && 
	`u≥r_›í_ty≥_put
(
ñm
->
ty≥
,

1346 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

1347 *
memb_±r2
, 
po2
))

1351  
exts_¥e£¡
 ? 
exts_cou¡
 : 0;

1352 
	}
}

1354 
a¢_íc_rvÆ_t


1355 
	$SEQUENCE_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1356 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

1357 
a¢_≥r_ouç_t
 *
po
) {

1358 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs


1359 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

1360 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

1361 
n_exãnsi⁄s
;

1362 
size_t
 
edx
;

1363 
size_t
 
i
;

1365 ()
c⁄°øöts
;

1367 if(!
•å
)

1368 
ASN__ENCODE_FAILED
;

1370 
î
.
ícoded
 = 0;

1372 
	`ASN_DEBUG
("Encodög %†a†SEQUENCE (UPER)", 
td
->
«me
);

1378 if(
•ecs
->
fú°_exãnsi⁄
 < 0) {

1379 
n_exãnsi⁄s
 = 0;

1381 
n_exãnsi⁄s
 = 
	`SEQUENCE__h™dÀ_exãnsi⁄s
(
td
, 
•å
, 0, 0);

1382 if(
n_exãnsi⁄s
 < 0Ë
ASN__ENCODE_FAILED
;

1383 if(
	`≥r_put_„w_bôs
(
po
, 
n_exãnsi⁄s
 ? 1 : 0, 1)) {

1384 
ASN__ENCODE_FAILED
;

1389 
i
 = 0; i < 
•ecs
->
roms_cou¡
; i++) {

1390 
a¢_TYPE_membî_t
 *
ñm
;

1391 c⁄° *
memb_±r
;

1392 c⁄° *c⁄° *
memb_±r2
;

1393 
¥e£¡
;

1395 
edx
 = 
•ecs
->
oms
[
i
];

1396 
ñm
 = &
td
->
ñemíts
[
edx
];

1399 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1400 
memb_±r2
 =

1401 (c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1402 
¥e£¡
 = (*
memb_±r2
 != 0);

1404 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1405 
memb_±r2
 = &
memb_±r
;

1406 
¥e£¡
 = 1;

1410 if(
¥e£¡
 && 
ñm
->
deÁu…_vÆue_cmp


1411 && 
ñm
->
	`deÁu…_vÆue_cmp
(*
memb_±r2
) == 0)

1412 
¥e£¡
 = 0;

1414 
	`ASN_DEBUG
("Element %s %s %s->%s is %s",

1415 
ñm
->
Êags
 & 
ATF_POINTER
 ? "ptr" : "inline",

1416 
ñm
->
deÁu…_vÆue_cmp
 ? "def" : "wtv",

1417 
td
->
«me
, 
ñm
->«me, 
¥e£¡
 ? "present" : "absent");

1418 if(
	`≥r_put_„w_bôs
(
po
, 
¥e£¡
, 1))

1419 
ASN__ENCODE_FAILED
;

1425 
	`ASN_DEBUG
("fú°_exãnsi⁄ = %d,ÉÀmít†%d", 
•ecs
->
fú°_exãnsi⁄
,

1426 
td
->
ñemíts_cou¡
);

1427 
edx
 = 0;

1428 
edx
 < ((
•ecs
->
fú°_exãnsi⁄
 < 0Ë? 
td
->
ñemíts_cou¡


1429 : (
size_t
)
•ecs
->
fú°_exãnsi⁄
);

1430 
edx
++) {

1431 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1432 c⁄° *
memb_±r
;

1433 c⁄° *c⁄° *
memb_±r2
;

1435 
	`ASN_DEBUG
("Abouàtÿícodê%s", 
ñm
->
ty≥
->
«me
);

1438 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1439 
memb_±r2
 =

1440 (c⁄° *c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1441 if(!*
memb_±r2
) {

1442 
	`ASN_DEBUG
("EÀmíà%†%" 
ASN_PRI_SIZE
 "ÇotÖresent",

1443 
ñm
->
«me
, 
edx
);

1444 if(
ñm
->
›ti⁄Æ
)

1447 
ASN__ENCODE_FAILED
;

1450 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1451 
memb_±r2
 = &
memb_±r
;

1455 if(
ñm
->
deÁu…_vÆue_cmp
 &&Élm->
	`deÁu…_vÆue_cmp
(*
memb_±r2
) == 0)

1458 
	`ASN_DEBUG
("Encodög %s->%s:%s", 
td
->
«me
, 
ñm
->«me,Élm->
ty≥
->name);

1459 
î
 = 
ñm
->
ty≥
->
›
->
	`u≥r_ícodî
(

1460 
ñm
->
ty≥
,Élm->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, *
memb_±r2
,

1461 
po
);

1462 if(
î
.
ícoded
 == -1) Ér;

1466 if(!
n_exãnsi⁄s
Ë
	`ASN__ENCODED_OK
(
î
);

1468 
	`ASN_DEBUG
("Lígth o‡exãnsi⁄†%d bô-m≠", 
n_exãnsi⁄s
);

1470 if(
	`u≥r_put_n¶ígth
(
po
, 
n_exãnsi⁄s
))

1471 
ASN__ENCODE_FAILED
;

1473 
	`ASN_DEBUG
("Bô-m≠ o‡%dÉÀmíts", 
n_exãnsi⁄s
);

1476 if(
	`SEQUENCE__h™dÀ_exãnsi⁄s
(
td
, 
•å
, 
po
, 0Ë!
n_exãnsi⁄s
)

1477 
ASN__ENCODE_FAILED
;

1479 
	`ASN_DEBUG
("Wrôög %dÉxãnsi⁄s", 
n_exãnsi⁄s
);

1481 if(
	`SEQUENCE__h™dÀ_exãnsi⁄s
(
td
, 
•å
, 0, 
po
Ë!
n_exãnsi⁄s
)

1482 
ASN__ENCODE_FAILED
;

1484 
	`ASN__ENCODED_OK
(
î
);

1485 
	}
}

1487 
a¢_dec_rvÆ_t


1488 
	$SEQUENCE_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1489 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1490 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

1491 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SEQUENCE_•ecifics_à*)
td
->
•ecifics
;

1492 *
°
 = *
•å
;

1493 
exçª£¡
;

1494 
uöt8_t
 *
›ªs
;

1495 
a¢_≥r_d©a_t
 
›md
;

1496 
a¢_dec_rvÆ_t
 
rv
;

1497 
size_t
 
edx
;

1499 ()
c⁄°øöts
;

1501 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

1502 
ASN__DECODE_FAILED
;

1504 if(!
°
) {

1505 
°
 = *
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

1506 if(!
°
Ë
ASN__DECODE_FAILED
;

1509 
	`ASN_DEBUG
("Decodög %†a†SEQUENCE (APER)", 
td
->
«me
);

1512 if(
•ecs
->
fú°_exãnsi⁄
 < 0) {

1513 
exçª£¡
 = 0;

1515 
exçª£¡
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

1516 if(
exçª£¡
 < 0Ë
ASN__DECODE_STARVED
;

1520 
	`mem£t
(&
›md
, 0, (opmd));

1521 if(
•ecs
->
roms_cou¡
) {

1522 
›ªs
 = (
uöt8_t
 *)
	`MALLOC
(((
•ecs
->
roms_cou¡
 + 7) >> 3) + 1);

1523 if(!
›ªs
Ë
ASN__DECODE_FAILED
;

1525 if(
	`≥r_gë_m™y_bôs
(
pd
, 
›ªs
, 0, 
•ecs
->
roms_cou¡
)) {

1526 
	`FREEMEM
(
›ªs
);

1527 
ASN__DECODE_STARVED
;

1529 
›md
.
buf„r
 = 
›ªs
;

1530 
›md
.
nbôs
 = 
•ecs
->
roms_cou¡
;

1531 
	`ASN_DEBUG
("Read inÖresence bitmap for %s of %d bits (%x..)",

1532 
td
->
«me
, 
•ecs
->
roms_cou¡
, *
›ªs
);

1534 
›ªs
 = 0;

1540 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1541 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1542 *
memb_±r
;

1543 **
memb_±r2
;

1545 
∑ddög
;

1548 if(
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
))

1552 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1553 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1555 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

1556 
memb_±r2
 = &
memb_±r
;

1560 
∑ddög
 = (8 - (
pd
->
moved
 % 8)) % 8;

1561 if(
∑ddög
 > 0)

1562 
	`ASN_DEBUG
("F‹ÉÀmíà%s,off£t%ld Paddög bô†%d", 
td
->
«me
, 
pd
->
moved
, 
∑ddög
);

1564 
	`≥r_gë_„w_bôs
(
pd
, 
∑ddög
);

1566 if(
edx
 !(
td
->
ñemíts_cou¡
-1))

1567 
	`≥r_gë_„w_bôs
(
pd
, 
∑ddög
);

1569 if(
•ecs
->
roms_cou¡
 && (
∑ddög
 > 0))

1570 
	`ASN_DEBUG
(">>>>>ÇŸ skùpögÖaddög o‡%d bô†f‹ÉÀmít:%ld ouào‡%d", 
∑ddög
, 
edx
, 
td
->
ñemíts_cou¡
);

1572 
	`≥r_gë_„w_bôs
(
pd
, 
∑ddög
);

1577 if(
ñm
->
›ti⁄Æ
) {

1578 
¥e£¡
 = 
	`≥r_gë_„w_bôs
(&
›md
, 1);

1579 
	`ASN_DEBUG
("Member %s->%s is optional,Ö=%d (%d->%d)",

1580 
td
->
«me
, 
ñm
->«me, 
¥e£¡
,

1581 ()
›md
.
nboff
, ()›md.
nbôs
);

1582 if(
¥e£¡
 == 0) {

1584 if(
ñm
->
deÁu…_vÆue_£t
) {

1586 if(
ñm
->
	`deÁu…_vÆue_£t
(
memb_±r2
)) {

1587 
	`FREEMEM
(
›ªs
);

1588 
ASN__DECODE_FAILED
;

1590 
	`ASN_DEBUG
("Filled-in default");

1599 
	`ASN_DEBUG
("Decodög membî \"%s\" i¿%s", 
ñm
->
«me
, 
td
->name);

1601 if(
ñm
->
Êags
 & 
ATF_OPEN_TYPE
) {

1602 
rv
 = 
	`OPEN_TYPE_≠î_gë
(
›t_codec_˘x
, 
td
, 
°
, 
ñm
, 
pd
);

1604 
rv
 = 
ñm
->
ty≥
->
›
->
	`≠î_decodî
(
›t_codec_˘x
,Élm->type,

1605 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

1607 if(
rv
.
code
 !
RC_OK
) {

1608 
	`ASN_DEBUG
("Failed decode %s in %s",

1609 
ñm
->
«me
, 
td
->name);

1610 
	`FREEMEM
(
›ªs
);

1611  
rv
;

1616 
	`FREEMEM
(
›ªs
);

1621 if(
exçª£¡
) {

1622 
ssize_t
 
bmÀngth
;

1623 
uöt8_t
 *
ïªs
;

1624 
a¢_≥r_d©a_t
 
ïmd
;

1626 
bmÀngth
 = 
	`≠î_gë_n¶ígth
(
pd
);

1627 if(
bmÀngth
 < 0Ë
ASN__DECODE_STARVED
;

1629 
	`ASN_DEBUG
("Exãnsi⁄†%" 
ASN_PRI_SSIZE
 "Öª£¡ i¿%s", 
bmÀngth
, 
td
->
«me
);

1631 
ïªs
 = (
uöt8_t
 *)
	`MALLOC
((
bmÀngth
 + 15) >> 3);

1632 if(!
ïªs
Ë
ASN__DECODE_STARVED
;

1635 if(
	`≥r_gë_m™y_bôs
(
pd
, 
ïªs
, 0, 
bmÀngth
))

1636 
ASN__DECODE_STARVED
;

1638 
	`mem£t
(&
ïmd
, 0, (epmd));

1639 
ïmd
.
buf„r
 = 
ïªs
;

1640 
ïmd
.
nbôs
 = 
bmÀngth
;

1641 
	`ASN_DEBUG
("Read inÉxtensions bitmap for %s of %ld bits (%x..)",

1642 
td
->
«me
, 
bmÀngth
, *
ïªs
);

1645 
edx
 = 
•ecs
->
fú°_exãnsi⁄
;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1646 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1647 *
memb_±r
;

1648 **
memb_±r2
;

1649 
¥e£¡
;

1651 if(!
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
)) {

1652 
	`ASN_DEBUG
("%ld i†nŸÉxãnsi⁄", 
edx
);

1657 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1658 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

1660 
memb_±r
 = (*)((*)
°
 + 
ñm
->
memb_off£t
);

1661 
memb_±r2
 = &
memb_±r
;

1664 
¥e£¡
 = 
	`≥r_gë_„w_bôs
(&
ïmd
, 1);

1665 if(
¥e£¡
 <= 0) {

1666 if(
¥e£¡
 < 0) ;

1670 
	`ASN_DEBUG
("Decodög membî %†ö %†%p", 
ñm
->
«me
, 
td
->«me, *
memb_±r2
);

1671 
rv
 = 
	`≠î_›í_ty≥_gë
(
›t_codec_˘x
, 
ñm
->
ty≥
,

1672 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r2
, 
pd
);

1673 if(
rv
.
code
 !
RC_OK
) {

1674 
	`FREEMEM
(
ïªs
);

1675  
rv
;

1682 
	`ASN_DEBUG
("Getting overflowÉxtensions");

1683 
	`≥r_gë_„w_bôs
(&
ïmd
, 1)) {

1689 if(
	`≠î_›í_ty≥_skù
(
›t_codec_˘x
, 
pd
)) {

1690 
	`FREEMEM
(
ïªs
);

1691 
ASN__DECODE_STARVED
;

1697 
	`FREEMEM
(
ïªs
);

1701 
edx
 = 
•ecs
->
roms_cou¡
;Édx < specs->roms_count

1702 + 
•ecs
->
aoms_cou¡
; 
edx
++) {

1703 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1704 **
memb_±r2
;

1706 if(!
ñm
->
deÁu…_vÆue_£t
) ;

1709 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1710 
memb_±r2
 = (**)((*)
°


1711 + 
ñm
->
memb_off£t
);

1712 if(*
memb_±r2
) ;

1718 if(
ñm
->
	`deÁu…_vÆue_£t
(
memb_±r2
)) {

1719 
ASN__DECODE_FAILED
;

1723 
rv
.
c⁄sumed
 = 0;

1724 
rv
.
code
 = 
RC_OK
;

1725  
rv
;

1726 
	}
}

1729 
	$SEQUENCE_h™dÀ_exãnsi⁄s_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1730 c⁄° *
•å
,

1731 
a¢_≥r_ouç_t
 *
po1
,á¢_≥r_ouç_à*
po2
) {

1732 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs


1733 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

1734 
exts_¥e£¡
 = 0;

1735 
exts_cou¡
 = 0;

1736 
size_t
 
edx
;

1738 if(
•ecs
->
fú°_exãnsi⁄
 < 0) {

1743 
edx
 = 
•ecs
->
fú°_exãnsi⁄
;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1744 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1745 c⁄° *
memb_±r
;

1746 c⁄° * c⁄° *
memb_±r2
;

1747 
¥e£¡
;

1749 if(!
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
)) {

1750 
	`ASN_DEBUG
("%†(@%ldËi†nŸÉxãnsi⁄", 
ñm
->
ty≥
->
«me
, 
edx
);

1755 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1756 
memb_±r2
 = (c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1757 
¥e£¡
 = (*
memb_±r2
 != 0);

1759 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1760 
memb_±r2
 = &
memb_±r
;

1761 
¥e£¡
 = 1;

1764 
	`ASN_DEBUG
("checking %s (@%ld)Öresent => %d",

1765 
ñm
->
ty≥
->
«me
, 
edx
, 
¥e£¡
);

1766 
exts_cou¡
++;

1767 
exts_¥e£¡
 +
¥e£¡
;

1770 if(
po1
 && 
	`≥r_put_„w_bôs
’o1, 
¥e£¡
, 1))

1773 if(
po2
 && 
¥e£¡
 && 
	`≠î_›í_ty≥_put
(
ñm
->
ty≥
,

1774 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, *
memb_±r2
, 
po2
))

1779  
exts_¥e£¡
 ? 
exts_cou¡
 : 0;

1780 
	}
}

1782 
a¢_íc_rvÆ_t


1783 
	$SEQUENCE_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1784 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

1785 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

1786 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs


1787 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

1788 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

1789 
n_exãnsi⁄s
;

1790 
size_t
 
edx
;

1791 
size_t
 
i
;

1793 ()
c⁄°øöts
;

1795 if(!
•å
)

1796 
ASN__ENCODE_FAILED
;

1798 
î
.
ícoded
 = 0;

1800 
	`ASN_DEBUG
("Encodög %†a†SEQUENCE (APER)", 
td
->
«me
);

1806 if(
•ecs
->
fú°_exãnsi⁄
 < 0) {

1807 
n_exãnsi⁄s
 = 0;

1809 
n_exãnsi⁄s
 = 
	`SEQUENCE_h™dÀ_exãnsi⁄s_≠î
(
td
, 
•å
, 0, 0);

1810 if(
n_exãnsi⁄s
 < 0Ë
ASN__ENCODE_FAILED
;

1811 if(
	`≥r_put_„w_bôs
(
po
, 
n_exãnsi⁄s
 ? 1 : 0, 1)) {

1812 
ASN__ENCODE_FAILED
;

1817 
i
 = 0; i < 
•ecs
->
roms_cou¡
; i++) {

1818 
a¢_TYPE_membî_t
 *
ñm
;

1819 c⁄° *
memb_±r
;

1820 c⁄° * c⁄° *
memb_±r2
;

1821 
¥e£¡
;

1823 
edx
 = 
•ecs
->
oms
[
i
];

1824 
ñm
 = &
td
->
ñemíts
[
edx
];

1827 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1828 
memb_±r2
 = (c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1829 
¥e£¡
 = (*
memb_±r2
 != 0);

1831 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1832 
memb_±r2
 = &
memb_±r
;

1833 
¥e£¡
 = 1;

1837 if(
¥e£¡
 && 
ñm
->
deÁu…_vÆue_cmp


1838 && 
ñm
->
	`deÁu…_vÆue_cmp
(
memb_±r2
) == 1)

1839 
¥e£¡
 = 0;

1841 
	`ASN_DEBUG
("Element %s %s %s->%s is %s",

1842 
ñm
->
Êags
 & 
ATF_POINTER
 ? "ptr" : "inline",

1843 
ñm
->
deÁu…_vÆue_cmp
 ? "def" : "wtv",

1844 
td
->
«me
, 
ñm
->«me, 
¥e£¡
 ? "present" : "absent");

1845 if(
	`≥r_put_„w_bôs
(
po
, 
¥e£¡
, 1))

1846 
ASN__ENCODE_FAILED
;

1852 
	`ASN_DEBUG
("fú°_exãnsi⁄ = %d,ÉÀmít†%d", 
•ecs
->
fú°_exãnsi⁄
,

1853 
td
->
ñemíts_cou¡
);

1854 
edx
 = 0;

1855 
edx
 < ((
•ecs
->
fú°_exãnsi⁄
 < 0Ë? 
td
->
ñemíts_cou¡


1856 : (
size_t
)
•ecs
->
fú°_exãnsi⁄
);

1857 
edx
++) {

1858 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1859 c⁄° *
memb_±r
;

1860 c⁄° * c⁄° *
memb_±r2
;

1862 if(
	`IN_EXTENSION_GROUP
(
•ecs
, 
edx
))

1865 
	`ASN_DEBUG
("Abouàtÿícodê%s", 
ñm
->
ty≥
->
«me
);

1868 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1869 
memb_±r2
 = (c⁄° * c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1870 if(!*
memb_±r2
) {

1871 
	`ASN_DEBUG
("Element %s %ldÇotÖresent",

1872 
ñm
->
«me
, 
edx
);

1873 if(
ñm
->
›ti⁄Æ
)

1876 
ASN__ENCODE_FAILED
;

1879 
memb_±r
 = (c⁄° *)((c⁄° *)
•å
 + 
ñm
->
memb_off£t
);

1880 
memb_±r2
 = &
memb_±r
;

1884 if(
ñm
->
deÁu…_vÆue_cmp
 &&Élm->
	`deÁu…_vÆue_cmp
(
memb_±r2
) == 1)

1887 
	`ASN_DEBUG
("Encodög %s->%s", 
td
->
«me
, 
ñm
->name);

1888 
î
 = 
ñm
->
ty≥
->
›
->
	`≠î_ícodî
”lm->ty≥,Élm->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

1889 *
memb_±r2
, 
po
);

1890 if(
î
.
ícoded
 == -1)

1891  
î
;

1895 if(!
n_exãnsi⁄s
Ë
	`ASN__ENCODED_OK
(
î
);

1897 
	`ASN_DEBUG
("Lígth o‡%d bô-m≠", 
n_exãnsi⁄s
);

1899 if(
	`≠î_put_n¶ígth
(
po
, 
n_exãnsi⁄s
))

1900 
ASN__ENCODE_FAILED
;

1902 
	`ASN_DEBUG
("Bô-m≠ o‡%dÉÀmíts", 
n_exãnsi⁄s
);

1905 if(
	`SEQUENCE_h™dÀ_exãnsi⁄s_≠î
(
td
, 
•å
, 
po
, 0Ë!
n_exãnsi⁄s
)

1906 
ASN__ENCODE_FAILED
;

1908 
	`ASN_DEBUG
("Wrôög %dÉxãnsi⁄s", 
n_exãnsi⁄s
);

1910 if(
	`SEQUENCE_h™dÀ_exãnsi⁄s_≠î
(
td
, 
•å
, 0, 
po
Ë!
n_exãnsi⁄s
)

1911 
ASN__ENCODE_FAILED
;

1913 
	`ASN__ENCODED_OK
(
î
);

1914 
	}
}

1919 
	$SEQUENCE_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

1920 c⁄° *
b±r
) {

1921 
size_t
 
edx
;

1923 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

1924 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

1925 c⁄° *
amemb
;

1926 c⁄° *
bmemb
;

1927 
ªt
;

1929 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

1930 
amemb
 =

1931 *(c⁄° *c⁄° *)((c⁄° *)
≠å
 + 
ñm
->
memb_off£t
);

1932 
bmemb
 =

1933 *(c⁄° *c⁄° *)((c⁄° *)
b±r
 + 
ñm
->
memb_off£t
);

1934 if(!
amemb
) {

1935 if(!
bmemb
) ;

1936 if(
ñm
->
deÁu…_vÆue_cmp


1937 && 
ñm
->
	`deÁu…_vÆue_cmp
(
bmemb
) == 0) {

1942 } if(!
bmemb
) {

1943 if(
ñm
->
deÁu…_vÆue_cmp


1944 && 
ñm
->
	`deÁu…_vÆue_cmp
(
amemb
) == 0) {

1951 
amemb
 = (c⁄° *)((c⁄° *)
≠å
 + 
ñm
->
memb_off£t
);

1952 
bmemb
 = (c⁄° *)((c⁄° *)
b±r
 + 
ñm
->
memb_off£t
);

1955 
ªt
 = 
ñm
->
ty≥
->
›
->
	`com∑ª_°ru˘
”lm->ty≥, 
amemb
, 
bmemb
);

1956 if(
ªt
 != 0) Ñet;

1960 
	}
}

1962 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_SEQUENCE
 = {

1963 
SEQUENCE_‰ì
,

1964 
SEQUENCE_¥öt
,

1965 
SEQUENCE_com∑ª
,

1966 
SEQUENCE_decode_bî
,

1967 
SEQUENCE_ícode_dî
,

1968 
SEQUENCE_decode_xî
,

1969 
SEQUENCE_ícode_xî
,

1970 #ifdef 
ASN_DISABLE_OER_SUPPORT


1974 
SEQUENCE_decode_€r
,

1975 
SEQUENCE_ícode_€r
,

1977 #ifde‡
ASN_DISABLE_PER_SUPPORT


1983 
SEQUENCE_decode_u≥r
,

1984 
SEQUENCE_ícode_u≥r
,

1985 
SEQUENCE_decode_≠î
,

1986 
SEQUENCE_ícode_≠î
,

1988 
SEQUENCE_øndom_fûl
,

1993 
a¢_øndom_fûl_ªsu…_t


1994 
	$SEQUENCE_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1995 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°r
,

1996 
size_t
 
max_Àngth
) {

1997 c⁄° 
a¢_SEQUENCE_•ecifics_t
 *
•ecs
 =

1998 (c⁄° 
a¢_SEQUENCE_•ecifics_t
 *)
td
->
•ecifics
;

1999 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_ok
 = {
ARFILL_OK
, 0};

2000 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

2001 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

2002 *
°
 = *
•å
;

2003 
size_t
 
edx
;

2005 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

2007 ()
c⁄°r
;

2009 if(
°
 =
NULL
) {

2010 
°
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

2011 if(
°
 =
NULL
) {

2012  
ªsu…_Áûed
;

2016 
edx
 = 0;Édx < 
td
->
ñemíts_cou¡
;Édx++) {

2017 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = &
td
->
ñemíts
[
edx
];

2018 *
memb_±r
;

2019 **
memb_±r2
;

2020 
a¢_øndom_fûl_ªsu…_t
 
tm¥es
;

2022 if(
ñm
->
›ti⁄Æ
 && 
	`a¢_øndom_bëwìn
(0, 4) == 2) {

2027 if(
ñm
->
Êags
 & 
ATF_POINTER
) {

2029 
memb_±r2
 = (**)((*)
°
 + 
ñm
->
memb_off£t
);

2031 
memb_±r
 = (*)
°
 + 
ñm
->
memb_off£t
;

2032 
memb_±r2
 = &
memb_±r
;

2035 
tm¥es
 = 
ñm
->
ty≥
->
›
->
	`øndom_fûl
(

2036 
ñm
->
ty≥
, 
memb_±r2
, &ñm->
ícodög_c⁄°øöts
,

2037 
max_Àngth
 > 
ªsu…_ok
.
Àngth
 ? max_length -Ñesult_ok.length : 0);

2038 
tm¥es
.
code
) {

2039 
ARFILL_OK
:

2040 
ªsu…_ok
.
Àngth
 +
tm¥es
.length;

2042 
ARFILL_SKIPPED
:

2043 
	`as£π
(!(
ñm
->
Êags
 & 
ATF_POINTER
Ë|| *
memb_±r2
 =
NULL
);

2045 
ARFILL_FAILED
:

2046 if(
°
 =*
•å
) {

2047 
	`ASN_STRUCT_RESET
(*
td
, 
°
);

2049 
	`ASN_STRUCT_FREE
(*
td
, 
°
);

2051  
tm¥es
;

2055 *
•å
 = 
°
;

2057  
ªsu…_ok
;

2058 
	}
}

	@constr_SEQUENCE_OF.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<c⁄°r_SEQUENCE_OF.h
>

8 
	~<a¢_SEQUENCE_OF.h
>

13 
a¢_íc_rvÆ_t


14 
	$SEQUENCE_OF_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
±r
,

15 
èg_mode
, 
bî_év_èg_t
 
èg
,

16 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

17 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

18 c⁄° 
a¢_™⁄ymous_£quí˚_
 *
li°
 = 
	`_A_CSEQUENCE_FROM_VOID
(
±r
);

19 
size_t
 
compuãd_size
 = 0;

20 
ssize_t
 
ícodög_size
 = 0;

21 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

22 
edx
;

24 
	`ASN_DEBUG
("E°im©ög sizêo‡SEQUENCE OF %s", 
td
->
«me
);

29 
edx
 = 0;Édx < 
li°
->
cou¡
;Édx++) {

30 *
memb_±r
 = 
li°
->
¨øy
[
edx
];

31 if(!
memb_±r
) ;

32 
îvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, 
memb_±r
,

33 0, 
ñm
->
èg
,

35 if(
îvÆ
.
ícoded
 == -1)

36  
îvÆ
;

37 
compuãd_size
 +
îvÆ
.
ícoded
;

43 
ícodög_size
 = 
	`dî_wrôe_ègs
(
td
, 
compuãd_size
, 
èg_mode
, 1, 
èg
,

44 
cb
, 
≠p_key
);

45 if(
ícodög_size
 == -1) {

46 
îvÆ
.
ícoded
 = -1;

47 
îvÆ
.
Áûed_ty≥
 = 
td
;

48 
îvÆ
.
°ru˘uª_±r
 = 
±r
;

49  
îvÆ
;

52 
compuãd_size
 +
ícodög_size
;

53 if(!
cb
) {

54 
îvÆ
.
ícoded
 = 
compuãd_size
;

55 
	`ASN__ENCODED_OK
(
îvÆ
);

58 
	`ASN_DEBUG
("Encodög membî†o‡SEQUENCE OF %s", 
td
->
«me
);

63 
edx
 = 0;Édx < 
li°
->
cou¡
;Édx++) {

64 *
memb_±r
 = 
li°
->
¨øy
[
edx
];

65 if(!
memb_±r
) ;

66 
îvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, 
memb_±r
,

67 0, 
ñm
->
èg
,

68 
cb
, 
≠p_key
);

69 if(
îvÆ
.
ícoded
 == -1)

70  
îvÆ
;

71 
ícodög_size
 +
îvÆ
.
ícoded
;

74 if(
compuãd_size
 !(
size_t
)
ícodög_size
) {

78 
îvÆ
.
ícoded
 = -1;

79 
îvÆ
.
Áûed_ty≥
 = 
td
;

80 
îvÆ
.
°ru˘uª_±r
 = 
±r
;

82 
îvÆ
.
ícoded
 = 
compuãd_size
;

83 
îvÆ
.
°ru˘uª_±r
 = 0;

84 
îvÆ
.
Áûed_ty≥
 = 0;

87  
îvÆ
;

88 
	}
}

90 
a¢_íc_rvÆ_t


91 
	$SEQUENCE_OF_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

92 
ûevñ
, 
xî_ícodî_Êags_e
 
Êags
,

93 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

94 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

95 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SET_OF_•ecifics_à*)
td
->
•ecifics
;

96 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

97 c⁄° 
a¢_™⁄ymous_£quí˚_
 *
li°
 = 
	`_A_CSEQUENCE_FROM_VOID
(
•å
);

98 c⁄° *
m«me
 = 
•ecs
->
as_XMLVÆueLi°


100 : ((*
ñm
->
«me
Ë?Élm->«mê:Élm->
ty≥
->
xml_èg
);

101 
size_t
 
mÀn
 = 
m«me
 ? 
	`°æí
(mname) : 0;

102 
xˇn
 = (
Êags
 & 
XER_F_CANONICAL
);

103 
i
;

105 if(!
•å
Ë
ASN__ENCODE_FAILED
;

107 
î
.
ícoded
 = 0;

109 
i
 = 0; i < 
li°
->
cou¡
; i++) {

110 
a¢_íc_rvÆ_t
 
tm≥r
 = {0,0,0};

111 *
memb_±r
 = 
li°
->
¨øy
[
i
];

112 if(!
memb_±r
) ;

114 if(
m«me
) {

115 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

116 
	`ASN__CALLBACK3
("<", 1, 
m«me
, 
mÀn
, ">", 1);

119 
tm≥r
 = 
ñm
->
ty≥
->
›
->
	`xî_ícodî
”lm->ty≥, 
memb_±r
, 
ûevñ
 + 1,

120 
Êags
, 
cb
, 
≠p_key
);

121 if(
tm≥r
.
ícoded
 == -1) Åmper;

122 
î
.
ícoded
 +
tm≥r
.encoded;

123 if(
tm≥r
.
ícoded
 =0 && 
•ecs
->
as_XMLVÆueLi°
) {

124 c⁄° *
«me
 = 
ñm
->
ty≥
->
xml_èg
;

125 
size_t
 
Àn
 = 
	`°æí
(
«me
);

126 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
 + 1);

127 
	`ASN__CALLBACK3
("<", 1, 
«me
, 
Àn
, "/>", 2);

130 if(
m«me
) {

131 
	`ASN__CALLBACK3
("</", 2, 
m«me
, 
mÀn
, ">", 1);

135 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
 - 1);

137 
	`ASN__ENCODED_OK
(
î
);

138 
cb_Áûed
:

139 
ASN__ENCODE_FAILED
;

140 
	}
}

142 #i‚de‡
ASN_DISABLE_PER_SUPPORT


144 
a¢_íc_rvÆ_t


145 
	$SEQUENCE_OF_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

146 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

147 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

148 c⁄° 
a¢_™⁄ymous_£quí˚_
 *
li°
;

149 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

150 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

151 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

152 
size_t
 
ícoded_edx
;

154 if(!
•å
Ë
ASN__ENCODE_FAILED
;

155 
li°
 = 
	`_A_CSEQUENCE_FROM_VOID
(
•å
);

157 
î
.
ícoded
 = 0;

159 
	`ASN_DEBUG
("Encodög %†a†SEQUENCE OF (%d)", 
td
->
«me
, 
li°
->
cou¡
);

161 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
size
;

162 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

163 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
size
;

164 
˘
 = 0;

167 if(
˘
) {

168 
nŸ_ö_roŸ
 =

169 (
li°
->
cou¡
 < 
˘
->
lowî_bound
 ||Üi°->cou¡ > ct->
uµî_bound
);

170 
	`ASN_DEBUG
("lb %ld ub %ld %s", 
˘
->
lowî_bound
, ct->
uµî_bound
,

171 
˘
->
Êags
 & 
APC_EXTENSIBLE
 ? "ext" : "fix");

172 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

174 if(
	`≥r_put_„w_bôs
(
po
, 
nŸ_ö_roŸ
, 1)Ë
ASN__ENCODE_FAILED
;

175 if(
nŸ_ö_roŸ
Ë
˘
 = 0;

176 } if(
nŸ_ö_roŸ
 && 
˘
->
ef„˘ive_bôs
 >= 0) {

177 
ASN__ENCODE_FAILED
;

182 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

184 if(
	`≥r_put_„w_bôs
(
po
, 
li°
->
cou¡
 - 
˘
->
lowî_bound
,

185 
˘
->
ef„˘ive_bôs
))

186 
ASN__ENCODE_FAILED
;

187 } if(
li°
->
cou¡
 == 0) {

191 i‡(
	`u≥r_put_Àngth
(
po
, 0, 0)) {

192 
ASN__ENCODE_FAILED
;

194 
	`ASN__ENCODED_OK
(
î
);

197 
ícoded_edx
 = 0; (
ssize_t
Încoded_edx < 
li°
->
cou¡
;) {

198 
ssize_t
 
may_ícode
;

199 
size_t
 
edx
;

200 
√ed_eom
 = 0;

202 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

203 
may_ícode
 = 
li°
->
cou¡
;

205 
may_ícode
 =

206 
	`u≥r_put_Àngth
(
po
, 
li°
->
cou¡
 - 
ícoded_edx
, &
√ed_eom
);

207 if(
may_ícode
 < 0Ë
ASN__ENCODE_FAILED
;

210 
edx
 = 
ícoded_edx
;Édx <Éncoded_edx + 
may_ícode
;Édx++) {

211 *
memb_±r
 = 
li°
->
¨øy
[
edx
];

212 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

213 
î
 = 
ñm
->
ty≥
->
›
->
	`u≥r_ícodî
(

214 
ñm
->
ty≥
,Élm->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r
,

215 
po
);

216 if(
î
.
ícoded
 =-1Ë
ASN__ENCODE_FAILED
;

219 if(
√ed_eom
 && 
	`u≥r_put_Àngth
(
po
, 0, 0))

220 
ASN__ENCODE_FAILED
;

222 
ícoded_edx
 +
may_ícode
;

225 
	`ASN__ENCODED_OK
(
î
);

226 
	}
}

228 
a¢_íc_rvÆ_t


229 
	$SEQUENCE_OF_ícode_≠î
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

230 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

231 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

232 c⁄° 
a¢_™⁄ymous_£quí˚_
 *
li°
;

233 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

234 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

235 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

236 
£q
;

238 if(!
•å
Ë
ASN__ENCODE_FAILED
;

239 
li°
 = 
	`_A_CSEQUENCE_FROM_VOID
(
•å
);

241 
î
.
ícoded
 = 0;

243 
	`ASN_DEBUG
("Encodög %†a†SEQUENCE OF sizê(%dËusög ALIGNED PER", 
td
->
«me
, 
li°
->
cou¡
);

245 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
size
;

246 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

247 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
size
;

248 
˘
 = 0;

251 if(
˘
) {

252 
nŸ_ö_roŸ
 = (
li°
->
cou¡
 < 
˘
->
lowî_bound


253 || 
li°
->
cou¡
 > 
˘
->
uµî_bound
);

254 
	`ASN_DEBUG
("lb %ld ub %ld %s",

255 
˘
->
lowî_bound
, ct->
uµî_bound
,

256 
˘
->
Êags
 & 
APC_EXTENSIBLE
 ? "ext" : "fix");

257 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

259 if(
	`≥r_put_„w_bôs
(
po
, 
nŸ_ö_roŸ
, 1))

260 
ASN__ENCODE_FAILED
;

261 if(
nŸ_ö_roŸ
Ë
˘
 = 0;

262 } if(
nŸ_ö_roŸ
 && 
˘
->
ef„˘ive_bôs
 >= 0)

263 
ASN__ENCODE_FAILED
;

266 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

272 i‡(
	`≠î_put_Àngth
(
po
, 
˘
->
uµî_bound
 - ct->
lowî_bound
 + 1, 
li°
->
cou¡
 - ct->lower_bound) < 0)

273 
ASN__ENCODE_FAILED
;

276 
£q
 = -1; seq < 
li°
->
cou¡
;) {

277 
ssize_t
 
mayEncode
;

278 if(
£q
 < 0) seq = 0;

279 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

280 
mayEncode
 = 
li°
->
cou¡
;

282 
mayEncode
 = 
	`≠î_put_Àngth
(
po
, -1, 
li°
->
cou¡
 - 
£q
);

283 if(
mayEncode
 < 0Ë
ASN__ENCODE_FAILED
;

286 
mayEncode
--) {

287 *
memb_±r
 = 
li°
->
¨øy
[
£q
++];

288 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

289 
î
 = 
ñm
->
ty≥
->
›
->
	`≠î_ícodî
(elm->type,

290 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, 
memb_±r
, 
po
);

291 if(
î
.
ícoded
 == -1)

292 
ASN__ENCODE_FAILED
;

296 
	`ASN__ENCODED_OK
(
î
);

297 
	}
}

301 
	$SEQUENCE_OF_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

302 c⁄° *
b±r
) {

303 c⁄° 
a¢_™⁄ymous_£quí˚_
 *
a
 = 
	`_A_CSEQUENCE_FROM_VOID
(
≠å
);

304 c⁄° 
a¢_™⁄ymous_£quí˚_
 *
b
 = 
	`_A_CSEQUENCE_FROM_VOID
(
b±r
);

305 
ssize_t
 
idx
;

307 if(
a
 && 
b
) {

308 
ssize_t
 
comm⁄_Àngth
 = (
a
->
cou¡
 < 
b
->count ?á->count : b->count);

309 
idx
 = 0; idx < 
comm⁄_Àngth
; idx++) {

310 
ªt
 = 
td
->
ñemíts
->
ty≥
->
›
->
	`com∑ª_°ru˘
(

311 
td
->
ñemíts
->
ty≥
, 
a
->
¨øy
[
idx
], 
b
->array[idx]);

312 if(
ªt
) Ñet;

315 if(
idx
 < 
b
->
cou¡
)

317 if(
idx
 < 
a
->
cou¡
)  1;

319 } if(!
a
) {

321 } if(!
b
) {

326 
	}
}

329 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_SEQUENCE_OF
 = {

330 
SEQUENCE_OF_‰ì
,

331 
SEQUENCE_OF_¥öt
,

332 
SEQUENCE_OF_com∑ª
,

333 
SEQUENCE_OF_decode_bî
,

334 
SEQUENCE_OF_ícode_dî
,

335 
SEQUENCE_OF_decode_xî
,

336 
SEQUENCE_OF_ícode_xî
,

337 #ifdef 
ASN_DISABLE_OER_SUPPORT


341 
SEQUENCE_OF_decode_€r
,

342 
SEQUENCE_OF_ícode_€r
,

344 #ifde‡
ASN_DISABLE_PER_SUPPORT


350 
SEQUENCE_OF_decode_u≥r
,

351 
SEQUENCE_OF_ícode_u≥r
,

352 
SEQUENCE_OF_decode_≠î
,

353 
SEQUENCE_OF_ícode_≠î
,

355 
SEQUENCE_OF_øndom_fûl
,

	@constr_SET_OF.c

6 
	~<a¢_öã∫Æ.h
>

7 
	~<c⁄°r_SET_OF.h
>

8 
	~<a¢_SET_OF.h
>

15 
	#LEFT
 ((
size
<(
size_t
)
˘x
->
À·
)?size:(size_t)˘x->À·)

	)

28 
	#SIZE_VIOLATION
 (
˘x
->
À·
 >0 && (
size_t
)˘x->À· <
size
)

	)

34 #unde‡
ADVANCE


35 
	#ADVANCE
(
num_byãs
) do { \

36 
size_t
 
num
 = 
num_byãs
; \

37 
±r
 = ((c⁄° *ÌåË+ 
num
;\

38 
size
 -
num
; \

39 if(
˘x
->
À·
 >= 0) \

40 
˘x
->
À·
 -
num
; \

41 
c⁄sumed_my£lf
 +
num
; \

42 } 0)

	)

47 #unde‡
NEXT_PHASE


48 #unde‡
PHASE_OUT


49 
	#NEXT_PHASE
(
˘x
) do { \

50 
˘x
->
pha£
++; \

51 
˘x
->
°ï
 = 0; \

52 } 0)

	)

53 
	#PHASE_OUT
(
˘x
Ëdÿ{ ctx->
pha£
 = 10; } 0)

	)

58 #unde‡
RETURN


59 
	#RETURN
(
_code
) do { \

60 
rvÆ
.
code
 = 
_code
; \

61 
rvÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
;\

62  
rvÆ
; \

63 } 0)

	)

68 
a¢_dec_rvÆ_t


69 
	$SET_OF_decode_bî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

70 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

71 c⁄° *
±r
, 
size_t
 
size
, 
èg_mode
) {

75 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SET_OF_•ecifics_à*)
td
->
•ecifics
;

76 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

81 *
°
 = *
°ru˘_±r
;

82 
a¢_°ru˘_˘x_t
 *
˘x
;

84 
bî_év_èg_t
 
év_èg
;

85 
a¢_dec_rvÆ_t
 
rvÆ
;

87 
ssize_t
 
c⁄sumed_my£lf
 = 0;

89 
	`ASN_DEBUG
("Decodög %†a†SET OF", 
td
->
«me
);

94 if(
°
 == 0) {

95 
°
 = *
°ru˘_±r
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

96 if(
°
 == 0) {

97 
	`RETURN
(
RC_FAIL
);

104 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

109 
˘x
->
pha£
) {

117 
rvÆ
 = 
	`bî_check_ègs
(
›t_codec_˘x
, 
td
, 
˘x
, 
±r
, 
size
,

118 
èg_mode
, 1, &
˘x
->
À·
, 0);

119 if(
rvÆ
.
code
 !
RC_OK
) {

120 
	`ASN_DEBUG
("%sÅagging check failed: %d",

121 
td
->
«me
, 
rvÆ
.
code
);

122  
rvÆ
;

125 if(
˘x
->
À·
 >= 0)

126 
˘x
->
À·
 +
rvÆ
.
c⁄sumed
;

127 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

129 
	`ASN_DEBUG
("Structure consumes %ld bytes, "

130 "buf„∏%ld", ()
˘x
->
À·
, ()
size
);

132 
	`NEXT_PHASE
(
˘x
);

140 ;; 
˘x
->
°ï
 = 0) {

141 
ssize_t
 
èg_Àn
;

143 if(
˘x
->
°ï
 & 1)

144 
mi¸›ha£2
;

150 if(
˘x
->
À·
 == 0) {

151 
	`ASN_DEBUG
("End o‡SET OF %s", 
td
->
«me
);

156 
	`PHASE_OUT
(
˘x
);

157 
	`RETURN
(
RC_OK
);

163 
èg_Àn
 = 
	`bî_„tch_èg
(
±r
, 
LEFT
, &
év_èg
);

164 
èg_Àn
) {

165 0: if(!
SIZE_VIOLATION
Ë
	`RETURN
(
RC_WMORE
);

167 -1: 
	`RETURN
(
RC_FAIL
);

170 if(
˘x
->
À·
 < 0 && ((c⁄° 
uöt8_t
 *)
±r
)[0] == 0) {

171 if(
LEFT
 < 2) {

172 if(
SIZE_VIOLATION
)

173 
	`RETURN
(
RC_FAIL
);

175 
	`RETURN
(
RC_WMORE
);

176 } if(((c⁄° 
uöt8_t
 *)
±r
)[1] == 0) {

186 if(
ñm
->
èg
 !(
bî_év_èg_t
)-1) {

187 if(
	`BER_TAGS_EQUAL
(
év_èg
, 
ñm
->
èg
)) {

192 
	`ASN_DEBUG
("UnexpectedÅag %s fixed SET OF %s",

193 
	`bî_év_èg_°rög
(
év_èg
), 
td
->
«me
);

194 
	`ASN_DEBUG
("%s SET OF hasÅag %s",

195 
td
->
«me
, 
	`bî_év_èg_°rög
(
ñm
->
èg
));

196 
	`RETURN
(
RC_FAIL
);

203 
˘x
->
°ï
 |= 1;

204 
mi¸›ha£2
:

209 
rvÆ
 = 
ñm
->
ty≥
->
›
->
	`bî_decodî
(
›t_codec_˘x
,

210 
ñm
->
ty≥
, &
˘x
->
±r
,Öå, 
LEFT
, 0);

211 
	`ASN_DEBUG
("In %s SET OF %s code %d consumed %d",

212 
td
->
«me
, 
ñm
->
ty≥
->name,

213 
rvÆ
.
code
, (ÏvÆ.
c⁄sumed
);

214 
rvÆ
.
code
) {

215 
RC_OK
:

217 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_SET_FROM_VOID
(
°
);

218 if(
	`ASN_SET_ADD
(
li°
, 
˘x
->
±r
) != 0)

219 
	`RETURN
(
RC_FAIL
);

221 
˘x
->
±r
 = 0;

224 
RC_WMORE
:

225 if(!
SIZE_VIOLATION
) {

226 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

227 
	`RETURN
(
RC_WMORE
);

230 
RC_FAIL
:

231 
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
, 
˘x
->
±r
);

232 
˘x
->
±r
 = 0;

233 
	`RETURN
(
RC_FAIL
);

236 
	`ADVANCE
(
rvÆ
.
c⁄sumed
);

239 
	`NEXT_PHASE
(
˘x
);

244 
˘x
->
À·
 < 0) {

245 if(
LEFT
 < 2) {

246 if(
LEFT
 > 0 && ((c⁄° *)
±r
)[0] != 0) {

248 
	`RETURN
(
RC_FAIL
);

250 
	`RETURN
(
RC_WMORE
);

253 if(((c⁄° *)
±r
)[0] == 0

254 && ((c⁄° *)
±r
)[1] == 0) {

255 
	`ADVANCE
(2);

256 
˘x
->
À·
++;

258 
	`RETURN
(
RC_FAIL
);

262 
	`PHASE_OUT
(
˘x
);

265 
	`RETURN
(
RC_OK
);

266 
	}
}

271 
	s_ñ_buf„r
 {

272 
uöt8_t
 *
	mbuf
;

273 
size_t
 
	mÀngth
;

274 
size_t
 
	mÆloˇãd_size
;

275 
	mbôs_unu£d
;

278 
	$_ñ_addbyãs
(c⁄° *
buf„r
, 
size_t
 
size
, *
ñ_buf_±r
) {

279 
_ñ_buf„r
 *
ñ_buf
 = (_ñ_buf„∏*)
ñ_buf_±r
;

281 if(
ñ_buf
->
Àngth
 + 
size
 >Él_buf->
Æloˇãd_size
) {

282 
size_t
 
√w_size
 = 
ñ_buf
->
Æloˇãd_size
 ?Él_buf->allocated_size : 8;

283 *
p
;

286 
√w_size
 <<= 2;

287 } 
ñ_buf
->
Àngth
 + 
size
 > 
√w_size
);

289 
p
 = 
	`REALLOC
(
ñ_buf
->
buf
, 
√w_size
);

290 if(
p
) {

291 
ñ_buf
->
buf
 = 
p
;

292 
ñ_buf
->
Æloˇãd_size
 = 
√w_size
;

298 
	`mem˝y
(
ñ_buf
->
buf
 +Él_buf->
Àngth
, 
buf„r
, 
size
);

300 
ñ_buf
->
Àngth
 +
size
;

302 
	}
}

304 
	$as£π_unu£d_bôs
(c⁄° 
_ñ_buf„r
* 
p
) {

305 if(
p
->
Àngth
) {

306 
	`as£π
((
p
->
buf
[p->
Àngth
-1] & ~(0xf‡<<Ö->
bôs_unu£d
)) == 0);

308 
	`as£π
(
p
->
bôs_unu£d
 == 0);

310 
	}
}

312 
	$_ñ_buf_cmp
(c⁄° *
≠
, c⁄° *
bp
) {

313 c⁄° 
_ñ_buf„r
 *
a
 = (c⁄° _ñ_buf„∏*)
≠
;

314 c⁄° 
_ñ_buf„r
 *
b
 = (c⁄° _ñ_buf„∏*)
bp
;

315 
size_t
 
comm⁄_Àn
;

316 
ªt
 = 0;

318 if(
a
->
Àngth
 < 
b
->length)

319 
comm⁄_Àn
 = 
a
->
Àngth
;

321 
comm⁄_Àn
 = 
b
->
Àngth
;

323 i‡(
a
->
buf
 && 
b
->buf) {

324 
ªt
 = 
	`memcmp
(
a
->
buf
, 
b
->buf, 
comm⁄_Àn
);

326 if(
ªt
 == 0) {

327 if(
a
->
Àngth
 < 
b
->length)

328 
ªt
 = -1;

329 if(
a
->
Àngth
 > 
b
->length)

330 
ªt
 = 1;

332 
	`as£π_unu£d_bôs
(
a
);

333 
	`as£π_unu£d_bôs
(
b
);

336  
ªt
;

337 
	}
}

340 
	$SET_OF__ícode_s‹ãd_‰ì
(
_ñ_buf„r
 *
ñ_buf
, 
size_t
 
cou¡
) {

341 
size_t
 
i
;

343 
i
 = 0; i < 
cou¡
; i++) {

344 
	`FREEMEM
(
ñ_buf
[
i
].
buf
);

347 
	`FREEMEM
(
ñ_buf
);

348 
	}
}

350 
	eSET_OF__ícode_mëhod
 {

351 
	mSOES_DER
,

352 
	mSOES_CUPER


355 
_ñ_buf„r
 *

356 
	$SET_OF__ícode_s‹ãd
(c⁄° 
a¢_TYPE_membî_t
 *
ñm
,

357 c⁄° 
a¢_™⁄ymous_£t_
 *
li°
,

358 
SET_OF__ícode_mëhod
 
mëhod
) {

359 
_ñ_buf„r
 *
ícoded_ñs
;

360 
edx
;

362 
ícoded_ñs
 =

363 (
_ñ_buf„r
 *)
	`CALLOC
(
li°
->
cou¡
, (
ícoded_ñs
[0]));

364 if(
ícoded_ñs
 =
NULL
) {

365  
NULL
;

371 
edx
 = 0;Édx < 
li°
->
cou¡
;Édx++) {

372 c⁄° *
memb_±r
 = 
li°
->
¨øy
[
edx
];

373 
_ñ_buf„r
 *
ícodög_ñ
 = &
ícoded_ñs
[
edx
];

374 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

376 if(!
memb_±r
) ;

381 
mëhod
) {

382 
SOES_DER
:

383 
îvÆ
 = 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, 
memb_±r
, 0,Élm->
èg
,

384 
_ñ_addbyãs
, 
ícodög_ñ
);

386 
SOES_CUPER
:

387 
îvÆ
 = 
	`u≥r_ícode
(
ñm
->
ty≥
,

388 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
,

389 
memb_±r
, 
_ñ_addbyãs
, 
ícodög_ñ
);

390 if(
îvÆ
.
ícoded
 != -1) {

391 
size_t
 
exåa_bôs
 = 
îvÆ
.
ícoded
 % 8;

392 
	`as£π
(
ícodög_ñ
->
Àngth
 =(
size_t
)(
îvÆ
.
ícoded
 + 7) / 8);

393 
ícodög_ñ
->
bôs_unu£d
 = (8 - 
exåa_bôs
) & 0x7;

397 
	`as£π
(!"Unreachable");

400 if(
îvÆ
.
ícoded
 < 0) ;

403 if(
edx
 =
li°
->
cou¡
) {

407 
	`qs‹t
(
ícoded_ñs
, 
li°
->
cou¡
, ”ncoded_ñs[0]), 
_ñ_buf_cmp
);

409  
ícoded_ñs
;

411 
	`SET_OF__ícode_s‹ãd_‰ì
(
ícoded_ñs
, 
edx
);

412  
NULL
;

414 
	}
}

420 
a¢_íc_rvÆ_t


421 
	$SET_OF_ícode_dî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

422 
èg_mode
, 
bî_év_èg_t
 
èg
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

423 *
≠p_key
) {

424 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

425 c⁄° 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_CSET_FROM_VOID
(
•å
);

426 
size_t
 
compuãd_size
 = 0;

427 
ssize_t
 
ícodög_size
 = 0;

428 
_ñ_buf„r
 *
ícoded_ñs
;

429 
edx
;

431 
	`ASN_DEBUG
("E°im©ög sizêf‹ SET OF %s", 
td
->
«me
);

436 
edx
 = 0;Édx < 
li°
->
cou¡
;Édx++) {

437 *
memb_±r
 = 
li°
->
¨øy
[
edx
];

438 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

440 if(!
memb_±r
Ë
ASN__ENCODE_FAILED
;

442 
îvÆ
 =

443 
ñm
->
ty≥
->
›
->
	`dî_ícodî
”lm->ty≥, 
memb_±r
, 0,Élm->
èg
, 0, 0);

444 if(
îvÆ
.
ícoded
 == -1) Érval;

445 
compuãd_size
 +
îvÆ
.
ícoded
;

452 
ícodög_size
 =

453 
	`dî_wrôe_ègs
(
td
, 
compuãd_size
, 
èg_mode
, 1, 
èg
, 
cb
, 
≠p_key
);

454 if(
ícodög_size
 < 0) {

455 
ASN__ENCODE_FAILED
;

457 
compuãd_size
 +
ícodög_size
;

459 if(!
cb
 || 
li°
->
cou¡
 == 0) {

460 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

461 
îvÆ
.
ícoded
 = 
compuãd_size
;

462 
	`ASN__ENCODED_OK
(
îvÆ
);

465 
	`ASN_DEBUG
("Encodög membî†o‡%†SET OF", 
td
->
«me
);

472 
ícoded_ñs
 = 
	`SET_OF__ícode_s‹ãd
(
ñm
, 
li°
, 
SOES_DER
);

478 
edx
 = 0;Édx < 
li°
->
cou¡
;Édx++) {

479 
_ñ_buf„r
 *
ícoded_ñ
 = &
ícoded_ñs
[
edx
];

481 if(
	`cb
(
ícoded_ñ
->
buf
,Éncoded_ñ->
Àngth
, 
≠p_key
) < 0) {

484 
ícodög_size
 +
ícoded_ñ
->
Àngth
;

488 
	`SET_OF__ícode_s‹ãd_‰ì
(
ícoded_ñs
, 
li°
->
cou¡
);

490 if(
edx
 =
li°
->
cou¡
) {

491 
a¢_íc_rvÆ_t
 
îvÆ
 = {0,0,0};

492 
	`as£π
(
compuãd_size
 =(
size_t
)
ícodög_size
);

493 
îvÆ
.
ícoded
 = 
compuãd_size
;

494 
	`ASN__ENCODED_OK
(
îvÆ
);

496 
ASN__ENCODE_FAILED
;

498 
	}
}

500 #unde‡
XER_ADVANCE


501 
	#XER_ADVANCE
(
num_byãs
) do { \

502 
size_t
 
num
 = 
num_byãs
; \

503 
buf_±r
 = ((c⁄° *)buf_±rË+ 
num
;\

504 
size
 -
num
; \

505 
c⁄sumed_my£lf
 +
num
; \

506 } 0)

	)

511 
a¢_dec_rvÆ_t


512 
	$SET_OF_decode_xî
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

513 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

514 c⁄° *
›t_m«me
, c⁄° *
buf_±r
, 
size_t
 
size
) {

518 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SET_OF_•ecifics_à*)
td
->
•ecifics
;

519 c⁄° 
a¢_TYPE_membî_t
 *
ñemít
 = 
td
->
ñemíts
;

520 c⁄° *
ñm_èg
;

521 c⁄° *
xml_èg
 = 
›t_m«me
 ? o±_m«mê: 
td
->xml_tag;

526 *
°
 = *
°ru˘_±r
;

527 
a¢_°ru˘_˘x_t
 *
˘x
;

529 
a¢_dec_rvÆ_t
 
rvÆ
 = {
RC_OK
, 0};

530 
ssize_t
 
c⁄sumed_my£lf
 = 0;

535 if(
°
 == 0) {

536 
°
 = *
°ru˘_±r
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

537 if(
°
 =0Ë
	`RETURN
(
RC_FAIL
);

541 if(
•ecs
->
as_XMLVÆueLi°
) {

542 
ñm_èg
 = (
•ecs
->
as_XMLVÆueLi°
 == 1) ? 0 : "";

544 
ñm_èg
 = (*
ñemít
->
«me
)

545 ? 
ñemít
->
«me
 :ÉÀmít->
ty≥
->
xml_èg
;

551 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
°
 + 
•ecs
->
˘x_off£t
);

559 ; 
˘x
->
pha£
 <= 2;) {

560 
pxî_chunk_ty≥_e
 
ch_ty≥
;

561 
ssize_t
 
ch_size
;

562 
xî_check_èg_e
 
tcv
;

567 if(
˘x
->
pha£
 == 2) {

568 
a¢_dec_rvÆ_t
 
tm¥vÆ
 = {
RC_OK
, 0};

571 
	`ASN_DEBUG
("XER/SET OFÉÀmíà[%s]", 
ñm_èg
);

572 
tm¥vÆ
 = 
ñemít
->
ty≥
->
›
->
	`xî_decodî
(
›t_codec_˘x
,

573 
ñemít
->
ty≥
, &
˘x
->
±r
, 
ñm_èg
,

574 
buf_±r
, 
size
);

575 if(
tm¥vÆ
.
code
 =
RC_OK
) {

576 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_SET_FROM_VOID
(
°
);

577 if(
	`ASN_SET_ADD
(
li°
, 
˘x
->
±r
) != 0)

578 
	`RETURN
(
RC_FAIL
);

579 
˘x
->
±r
 = 0;

580 
	`XER_ADVANCE
(
tm¥vÆ
.
c⁄sumed
);

582 
	`XER_ADVANCE
(
tm¥vÆ
.
c⁄sumed
);

583 
	`RETURN
(
tm¥vÆ
.
code
);

585 
˘x
->
pha£
 = 1;

586 
	`ASN_DEBUG
("XER/SET OFÖha£ => %d", 
˘x
->
pha£
);

593 
ch_size
 = 
	`xî_√xt_tokí
(&
˘x
->
c⁄ãxt
,

594 
buf_±r
, 
size
, &
ch_ty≥
);

595 if(
ch_size
 == -1) {

596 
	`RETURN
(
RC_FAIL
);

598 
ch_ty≥
) {

599 
PXER_WMORE
:

600 
	`RETURN
(
RC_WMORE
);

601 
PXER_COMMENT
:

602 
PXER_TEXT
:

603 
	`XER_ADVANCE
(
ch_size
);

605 
PXER_TAG
:

610 
tcv
 = 
	`xî_check_èg
(
buf_±r
, 
ch_size
, 
xml_èg
);

611 
	`ASN_DEBUG
("XER/SET OF:Åcv = %d,Öh=%dÅ=%s",

612 
tcv
, 
˘x
->
pha£
, 
xml_èg
);

613 
tcv
) {

614 
XCT_CLOSING
:

615 if(
˘x
->
pha£
 == 0) ;

616 
˘x
->
pha£
 = 0;

618 
XCT_BOTH
:

619 if(
˘x
->
pha£
 == 0) {

621 
	`XER_ADVANCE
(
ch_size
);

622 
˘x
->
pha£
 = 3;

623 
	`RETURN
(
RC_OK
);

626 
XCT_OPENING
:

627 if(
˘x
->
pha£
 == 0) {

628 
	`XER_ADVANCE
(
ch_size
);

629 
˘x
->
pha£
 = 1;

633 
XCT_UNKNOWN_OP
:

634 
XCT_UNKNOWN_BO
:

636 
	`ASN_DEBUG
("XER/SET OF:Åcv=%d,Öh=%d", 
tcv
, 
˘x
->
pha£
);

637 if(
˘x
->
pha£
 == 1) {

641 
˘x
->
pha£
 = 2;

649 
	`ASN_DEBUG
("Unexpected XMLÅag in SET OF");

653 
˘x
->
pha£
 = 3;

654 
	`RETURN
(
RC_FAIL
);

655 
	}
}

659 
	sxî_tmp_íc_s
 {

660 *
	mbuf„r
;

661 
size_t
 
	moff£t
;

662 
size_t
 
	msize
;

663 } 
	txî_tmp_íc_t
;

665 
	$SET_OF_ícode_xî_ˇŒback
(c⁄° *
buf„r
, 
size_t
 
size
, *
key
) {

666 
xî_tmp_íc_t
 *
t
 = (xî_tmp_íc_à*)
key
;

667 if(
t
->
off£t
 + 
size
 >=Å->size) {

668 
size_t
 
√wsize
 = (
t
->
size
 << 2) + size;

669 *
p
 = 
	`REALLOC
(
t
->
buf„r
, 
√wsize
);

670 if(!
p
)  -1;

671 
t
->
buf„r
 = 
p
;

672 
t
->
size
 = 
√wsize
;

674 
	`mem˝y
((*)
t
->
buf„r
 +Å->
off£t
, buf„r, 
size
);

675 
t
->
off£t
 +
size
;

677 
	}
}

679 
	$SET_OF_xî_‹dî
(c⁄° *
≠å
, c⁄° *
b±r
) {

680 c⁄° 
xî_tmp_íc_t
 *
a
 = (c⁄° xî_tmp_íc_à*)
≠å
;

681 c⁄° 
xî_tmp_íc_t
 *
b
 = (c⁄° xî_tmp_íc_à*)
b±r
;

682 
size_t
 
möÀn
 = 
a
->
off£t
;

683 
ªt
;

684 if(
b
->
off£t
 < 
möÀn
) minlen = b->offset;

686 
ªt
 = 
	`memcmp
(
a
->
buf„r
, 
b
->buf„r, 
möÀn
);

687 if(
ªt
 != 0) Ñet;

688 if(
a
->
off£t
 =
b
->offset)

690 if(
a
->
off£t
 =
möÀn
)

693 
	}
}

696 
a¢_íc_rvÆ_t


697 
	$SET_OF_ícode_xî
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

698 
xî_ícodî_Êags_e
 
Êags
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

699 *
≠p_key
) {

700 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

701 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SET_OF_•ecifics_à*)
td
->
•ecifics
;

702 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

703 c⁄° 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_CSET_FROM_VOID
(
•å
);

704 c⁄° *
m«me
 = 
•ecs
->
as_XMLVÆueLi°


705 ? 0 : ((*
ñm
->
«me
Ë?Élm->«mê:Élm->
ty≥
->
xml_èg
);

706 
size_t
 
mÀn
 = 
m«me
 ? 
	`°æí
(mname) : 0;

707 
xˇn
 = (
Êags
 & 
XER_F_CANONICAL
);

708 
xî_tmp_íc_t
 *
ícs
 = 0;

709 
size_t
 
ícs_cou¡
 = 0;

710 *
‹igöÆ_≠p_key
 = 
≠p_key
;

711 
a¢_≠p_c⁄sume_byãs_f
 *
‹igöÆ_cb
 = 
cb
;

712 
i
;

714 if(!
•å
Ë
ASN__ENCODE_FAILED
;

716 if(
xˇn
) {

717 
ícs
 = (
xî_tmp_íc_t
 *)
	`MALLOC
(
li°
->
cou¡
 * (encs[0]));

718 if(!
ícs
Ë
ASN__ENCODE_FAILED
;

719 
cb
 = 
SET_OF_ícode_xî_ˇŒback
;

722 
î
.
ícoded
 = 0;

724 
i
 = 0; i < 
li°
->
cou¡
; i++) {

725 
a¢_íc_rvÆ_t
 
tm≥r
 = {0,0,0};

727 *
memb_±r
 = 
li°
->
¨øy
[
i
];

728 if(!
memb_±r
) ;

730 if(
ícs
) {

731 
	`mem£t
(&
ícs
[
ícs_cou¡
], 0, (encs[0]));

732 
≠p_key
 = &
ícs
[
ícs_cou¡
];

733 
ícs_cou¡
++;

736 if(
m«me
) {

737 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
);

738 
	`ASN__CALLBACK3
("<", 1, 
m«me
, 
mÀn
, ">", 1);

741 if(!
xˇn
 && 
•ecs
->
as_XMLVÆueLi°
 == 1)

742 
	`ASN__TEXT_INDENT
(1, 
ûevñ
 + 1);

743 
tm≥r
 = 
ñm
->
ty≥
->
›
->
	`xî_ícodî
”lm->ty≥, 
memb_±r
,

744 
ûevñ
 + (
•ecs
->
as_XMLVÆueLi°
 != 2),

745 
Êags
, 
cb
, 
≠p_key
);

746 if(
tm≥r
.
ícoded
 == -1) Åmper;

747 
î
.
ícoded
 +
tm≥r
.encoded;

748 if(
tm≥r
.
ícoded
 =0 && 
•ecs
->
as_XMLVÆueLi°
) {

749 c⁄° *
«me
 = 
ñm
->
ty≥
->
xml_èg
;

750 
size_t
 
Àn
 = 
	`°æí
(
«me
);

751 
	`ASN__CALLBACK3
("<", 1, 
«me
, 
Àn
, "/>", 2);

754 if(
m«me
) {

755 
	`ASN__CALLBACK3
("</", 2, 
m«me
, 
mÀn
, ">", 1);

760 if(!
xˇn
Ë
	`ASN__TEXT_INDENT
(1, 
ûevñ
 - 1);

762 if(
ícs
) {

763 
xî_tmp_íc_t
 *
íc
 = 
ícs
;

764 
xî_tmp_íc_t
 *
íd
 = 
ícs
 + 
ícs_cou¡
;

765 
ssize_t
 
c⁄åﬁ_size
 = 0;

767 
î
.
ícoded
 = 0;

768 
cb
 = 
‹igöÆ_cb
;

769 
≠p_key
 = 
‹igöÆ_≠p_key
;

770 
	`qs‹t
(
ícs
, 
ícs_cou¡
, ”ncs[0]), 
SET_OF_xî_‹dî
);

772 ; 
íc
 < 
íd
;Énc++) {

773 
	`ASN__CALLBACK
(
íc
->
buf„r
,Énc->
off£t
);

774 
	`FREEMEM
(
íc
->
buf„r
);

775 
íc
->
buf„r
 = 0;

776 
c⁄åﬁ_size
 +
íc
->
off£t
;

778 
	`as£π
(
c⁄åﬁ_size
 =
î
.
ícoded
);

781 
˛ónup
;

782 
cb_Áûed
:

783 
ASN__ENCODE_FAILED
;

784 
˛ónup
:

785 if(
ícs
) {

786 
size_t
 
n
;

787 
n
 = 0;Ç < 
ícs_cou¡
;Ç++) {

788 
	`FREEMEM
(
ícs
[
n
].
buf„r
);

790 
	`FREEMEM
(
ícs
);

792 
	`ASN__ENCODED_OK
(
î
);

793 
	}
}

796 
	$SET_OF_¥öt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
, 
ûevñ
,

797 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

798 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

799 c⁄° 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_CSET_FROM_VOID
(
•å
);

800 
ªt
;

801 
i
;

803 if(!
•å
Ë (
	`cb
("<ab£¡>", 8, 
≠p_key
) < 0) ? -1 : 0;

806 if(
	`cb
(
td
->
«me
, 
	`°æí
—d->«me), 
≠p_key
) < 0

807 || 
	`cb
(" ::{", 6, 
≠p_key
) < 0)

810 
i
 = 0; i < 
li°
->
cou¡
; i++) {

811 c⁄° *
memb_±r
 = 
li°
->
¨øy
[
i
];

812 if(!
memb_±r
) ;

814 
	`_i_INDENT
(1);

816 
ªt
 = 
ñm
->
ty≥
->
›
->
	`¥öt_°ru˘
”lm->ty≥, 
memb_±r
,

817 
ûevñ
 + 1, 
cb
, 
≠p_key
);

818 if(
ªt
) Ñet;

821 
ûevñ
--;

822 
	`_i_INDENT
(1);

824  (
	`cb
("}", 1, 
≠p_key
) < 0) ? -1 : 0;

825 
	}
}

828 
	$SET_OF_‰ì
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, *
±r
,

829 
a¢_°ru˘_‰ì_mëhod
 
mëhod
) {

830 if(
td
 && 
±r
) {

831 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
;

832 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

833 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_SET_FROM_VOID
(
±r
);

834 
a¢_°ru˘_˘x_t
 *
˘x
;

835 
i
;

841 
i
 = 0; i < 
li°
->
cou¡
; i++) {

842 *
memb_±r
 = 
li°
->
¨øy
[
i
];

843 if(
memb_±r
)

844 
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
, 
memb_±r
);

846 
li°
->
cou¡
 = 0;

848 
	`a¢_£t_em±y
(
li°
);

850 
•ecs
 = (c⁄° 
a¢_SET_OF_•ecifics_t
 *)
td
->
•ecifics
;

851 
˘x
 = (
a¢_°ru˘_˘x_t
 *)((*)
±r
 + 
•ecs
->
˘x_off£t
);

852 if(
˘x
->
±r
) {

853 
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
, 
˘x
->
±r
);

854 
˘x
->
±r
 = 0;

857 
mëhod
) {

858 
ASFM_FREE_EVERYTHING
:

859 
	`FREEMEM
(
±r
);

861 
ASFM_FREE_UNDERLYING
:

863 
ASFM_FREE_UNDERLYING_AND_RESET
:

864 
	`mem£t
(
±r
, 0, 
•ecs
->
°ru˘_size
);

868 
	}
}

871 
	$SET_OF_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

872 
a¢_≠p_c⁄°øöt_Áûed_f
 *
˘Áûcb
, *
≠p_key
) {

873 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

874 
a¢_c⁄°r_check_f
 *
c⁄°r
;

875 c⁄° 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_CSET_FROM_VOID
(
•å
);

876 
i
;

878 if(!
•å
) {

879 
	`ASN__CTFAIL
(
≠p_key
, 
td
, 
•å
,

881 
td
->
«me
, 
__FILE__
, 
__LINE__
);

885 
c⁄°r
 = 
ñm
->
ícodög_c⁄°øöts
.
gíîÆ_c⁄°øöts
;

886 if(!
c⁄°r
Ëc⁄°∏
ñm
->
ty≥
->
ícodög_c⁄°øöts
.
gíîÆ_c⁄°øöts
;

892 
i
 = 0; i < 
li°
->
cou¡
; i++) {

893 c⁄° *
memb_±r
 = 
li°
->
¨øy
[
i
];

894 
ªt
;

896 if(!
memb_±r
) ;

898 
ªt
 = 
	`c⁄°r
(
ñm
->
ty≥
, 
memb_±r
, 
˘Áûcb
, 
≠p_key
);

899 if(
ªt
) Ñet;

903 
	}
}

905 #i‚de‡
ASN_DISABLE_PER_SUPPORT


907 
a¢_dec_rvÆ_t


908 
	$SET_OF_decode_u≥r
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

909 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

910 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

911 
a¢_≥r_d©a_t
 *
pd
) {

912 
a¢_dec_rvÆ_t
 
rv
 = {
RC_OK
, 0};

913 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SET_OF_•ecifics_à*)
td
->
•ecifics
;

914 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

915 *
°
 = *
•å
;

916 
a¢_™⁄ymous_£t_
 *
li°
;

917 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

918 
ª≥©
 = 0;

919 
ssize_t
 
√Àms
;

921 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

922 
ASN__DECODE_FAILED
;

927 if(!
°
) {

928 
°
 = *
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

929 if(!
°
Ë
ASN__DECODE_FAILED
;

931 
li°
 = 
	`_A_SET_FROM_VOID
(
°
);

934 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
size
;

935 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

936 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
size
;

937 
˘
 = 0;

939 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

940 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

941 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

942 if(
vÆue
Ë
˘
 = 0;

945 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

947 
√Àms
 = 
	`≥r_gë_„w_bôs
(
pd
, 
˘
->
ef„˘ive_bôs
);

948 
	`ASN_DEBUG
("PreparingÅo fetch %ld+%ldÉlements from %s",

949 ()
√Àms
, 
˘
->
lowî_bound
, 
td
->
«me
);

950 if(
√Àms
 < 0Ë
ASN__DECODE_STARVED
;

951 
√Àms
 +
˘
->
lowî_bound
;

953 
√Àms
 = -1;

957 
i
;

958 if(
√Àms
 < 0) {

959 
√Àms
 = 
	`u≥r_gë_Àngth
(
pd
, -1, 0, &
ª≥©
);

960 
	`ASN_DEBUG
("GŸÅÿdecodê%" 
ASN_PRI_SSIZE
 "Élements (eff %d)",

961 
√Àms
, ()(
˘
 ? ct->
ef„˘ive_bôs
 : -1));

962 if(
√Àms
 < 0Ë
ASN__DECODE_STARVED
;

965 
i
 = 0; i < 
√Àms
; i++) {

966 *
±r
 = 0;

967 
	`ASN_DEBUG
("SET OF %†decodög", 
ñm
->
ty≥
->
«me
);

968 
rv
 = 
ñm
->
ty≥
->
›
->
	`u≥r_decodî
(
›t_codec_˘x
,Élm->type,

969 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, &
±r
, 
pd
);

970 
	`ASN_DEBUG
("%s SET OF %s decoded %d, %p",

971 
td
->
«me
, 
ñm
->
ty≥
->«me, 
rv
.
code
, 
±r
);

972 if(
rv
.
code
 =
RC_OK
) {

973 if(
	`ASN_SET_ADD
(
li°
, 
±r
) == 0) {

974 if(
rv
.
c⁄sumed
 =0 && 
√Àms
 > 200) {

976 
ASN__DECODE_FAILED
;

980 
	`ASN_DEBUG
("FailedÅoáddÉlement into %s",

981 
td
->
«me
);

983 
rv
.
code
 = 
RC_FAIL
;

985 
	`ASN_DEBUG
("Failed decoding %s of %s (SET OF)",

986 
ñm
->
ty≥
->
«me
, 
td
->name);

988 if(
±r
Ë
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
,Ötr);

989  
rv
;

992 
√Àms
 = -1;

993 } 
ª≥©
);

995 
	`ASN_DEBUG
("Decoded %†a†SET OF", 
td
->
«me
);

997 
rv
.
code
 = 
RC_OK
;

998 
rv
.
c⁄sumed
 = 0;

999  
rv
;

1000 
	}
}

1002 
a¢_íc_rvÆ_t


1003 
	$SET_OF_ícode_u≥r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1004 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

1005 
a¢_≥r_ouç_t
 *
po
) {

1006 c⁄° 
a¢_™⁄ymous_£t_
 *
li°
;

1007 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

1008 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

1009 
_ñ_buf„r
 *
ícoded_ñs
;

1010 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

1011 
size_t
 
ícoded_edx
;

1013 if(!
•å
Ë
ASN__ENCODE_FAILED
;

1015 
li°
 = 
	`_A_CSET_FROM_VOID
(
•å
);

1017 
î
.
ícoded
 = 0;

1019 
	`ASN_DEBUG
("Encodög %†a†SEQUENCE OF (%d)", 
td
->
«me
, 
li°
->
cou¡
);

1021 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
size
;

1022 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

1023 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
size
;

1024 
˘
 = 0;

1027 if(
˘
) {

1028 
nŸ_ö_roŸ
 =

1029 (
li°
->
cou¡
 < 
˘
->
lowî_bound
 ||Üi°->cou¡ > ct->
uµî_bound
);

1030 
	`ASN_DEBUG
("lb %ld ub %ld %s", 
˘
->
lowî_bound
, ct->
uµî_bound
,

1031 
˘
->
Êags
 & 
APC_EXTENSIBLE
 ? "ext" : "fix");

1032 if(
˘
->
Êags
 & 
APC_EXTENSIBLE
) {

1034 if(
	`≥r_put_„w_bôs
(
po
, 
nŸ_ö_roŸ
, 1)Ë
ASN__ENCODE_FAILED
;

1035 if(
nŸ_ö_roŸ
Ë
˘
 = 0;

1036 } if(
nŸ_ö_roŸ
 && 
˘
->
ef„˘ive_bôs
 >= 0) {

1037 
ASN__ENCODE_FAILED
;

1042 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

1044 if(
	`≥r_put_„w_bôs
(
po
, 
li°
->
cou¡
 - 
˘
->
lowî_bound
,

1045 
˘
->
ef„˘ive_bôs
))

1046 
ASN__ENCODE_FAILED
;

1047 } if(
li°
->
cou¡
 == 0) {

1051 i‡(
	`u≥r_put_Àngth
(
po
, 0, 0)) {

1052 
ASN__ENCODE_FAILED
;

1054 
	`ASN__ENCODED_OK
(
î
);

1062 
ícoded_ñs
 = 
	`SET_OF__ícode_s‹ãd
(
ñm
, 
li°
, 
SOES_CUPER
);

1064 
ícoded_edx
 = 0; (
ssize_t
Încoded_edx < 
li°
->
cou¡
;) {

1065 
ssize_t
 
may_ícode
;

1066 
size_t
 
edx
;

1067 
√ed_eom
 = 0;

1069 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

1070 
may_ícode
 = 
li°
->
cou¡
;

1072 
may_ícode
 =

1073 
	`u≥r_put_Àngth
(
po
, 
li°
->
cou¡
 - 
ícoded_edx
, &
√ed_eom
);

1074 if(
may_ícode
 < 0Ë
ASN__ENCODE_FAILED
;

1077 
edx
 = 
ícoded_edx
;Édx <Éncoded_edx + 
may_ícode
;Édx++) {

1078 c⁄° 
_ñ_buf„r
 *
ñ
 = &
ícoded_ñs
[
edx
];

1079 if(
	`a¢_put_m™y_bôs
(
po
, 
ñ
->
buf
,

1080 (8 * 
ñ
->
Àngth
Ë-Él->
bôs_unu£d
) < 0) {

1085 if(
√ed_eom
 && 
	`u≥r_put_Àngth
(
po
, 0, 0))

1086 
ASN__ENCODE_FAILED
;

1088 
ícoded_edx
 +
may_ícode
;

1091 
	`SET_OF__ícode_s‹ãd_‰ì
(
ícoded_ñs
, 
li°
->
cou¡
);

1093 if((
ssize_t
)
ícoded_edx
 =
li°
->
cou¡
) {

1094 
	`ASN__ENCODED_OK
(
î
);

1096 
ASN__ENCODE_FAILED
;

1098 
	}
}

1100 
a¢_dec_rvÆ_t


1101 
	$SET_OF_decode_≠î
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

1102 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

1103 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

1104 
a¢_dec_rvÆ_t
 
rv
 = {
RC_OK
, 0};

1105 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 = (c⁄°á¢_SET_OF_•ecifics_à*)
td
->
•ecifics
;

1106 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

1107 *
°
 = *
•å
;

1108 
a¢_™⁄ymous_£t_
 *
li°
;

1109 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
˘
;

1110 
ª≥©
 = 0;

1111 
ssize_t
 
√Àms
;

1113 if(
	`ASN__STACK_OVERFLOW_CHECK
(
›t_codec_˘x
))

1114 
ASN__DECODE_FAILED
;

1119 if(!
°
) {

1120 
°
 = *
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
);

1121 if(!
°
Ë
ASN__DECODE_FAILED
;

1123 
li°
 = 
	`_A_SET_FROM_VOID
(
°
);

1126 if(
c⁄°øöts
Ë
˘
 = &c⁄°øöts->
size
;

1127 if(
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
)

1128 
˘
 = &
td
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
->
size
;

1129 
˘
 = 0;

1131 if(
˘
 && ct->
Êags
 & 
APC_EXTENSIBLE
) {

1132 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 1);

1133 if(
vÆue
 < 0Ë
ASN__DECODE_STARVED
;

1134 if(
vÆue
Ë
˘
 = 0;

1137 if(
˘
 && ct->
ef„˘ive_bôs
 >= 0) {

1139 
√Àms
 = 
	`≠î_gë_n¢nwn
(
pd
, 
˘
->
uµî_bound
 - ct->
lowî_bound
 + 1);

1140 
	`ASN_DEBUG
("PreparingÅo fetch %ld+%ldÉlements from %s",

1141 ()
√Àms
, 
˘
->
lowî_bound
, 
td
->
«me
);

1142 if(
√Àms
 < 0Ë
ASN__DECODE_STARVED
;

1143 
√Àms
 +
˘
->
lowî_bound
;

1145 
√Àms
 = -1;

1149 
i
;

1150 if(
√Àms
 < 0) {

1151 
√Àms
 = 
	`≠î_gë_Àngth
(
pd
, 
˘
 ? ct->
uµî_bound
 - ct->
lowî_bound
 + 1 : -1,

1152 
˘
 ? ct->
ef„˘ive_bôs
 : -1, &
ª≥©
);

1153 
	`ASN_DEBUG
("GotÅo decode %dÉlements (eff %d)",

1154 ()
√Àms
, ()(
˘
 ? ct->
ef„˘ive_bôs
 : -1));

1155 if(
√Àms
 < 0Ë
ASN__DECODE_STARVED
;

1158 
i
 = 0; i < 
√Àms
; i++) {

1159 *
±r
 = 0;

1160 
	`ASN_DEBUG
("SET OF %†decodög", 
ñm
->
ty≥
->
«me
);

1161 
rv
 = 
ñm
->
ty≥
->
›
->
	`≠î_decodî
(
›t_codec_˘x
,Élm->type,

1162 
ñm
->
ícodög_c⁄°øöts
.
≥r_c⁄°øöts
, &
±r
, 
pd
);

1163 
	`ASN_DEBUG
("%s SET OF %s decoded %d, %p",

1164 
td
->
«me
, 
ñm
->
ty≥
->«me, 
rv
.
code
, 
±r
);

1165 if(
rv
.
code
 =
RC_OK
) {

1166 if(
	`ASN_SET_ADD
(
li°
, 
±r
) == 0)

1168 
	`ASN_DEBUG
("FailedÅoáddÉlement into %s",

1169 
td
->
«me
);

1171 
rv
.
code
 = 
RC_FAIL
;

1173 
	`ASN_DEBUG
("Failed decoding %s of %s (SET OF)",

1174 
ñm
->
ty≥
->
«me
, 
td
->name);

1176 if(
±r
Ë
	`ASN_STRUCT_FREE
(*
ñm
->
ty≥
,Ötr);

1177  
rv
;

1180 
√Àms
 = -1;

1181 } 
ª≥©
);

1183 
	`ASN_DEBUG
("Decoded %†a†SET OF", 
td
->
«me
);

1185 
rv
.
code
 = 
RC_OK
;

1186 
rv
.
c⁄sumed
 = 0;

1187  
rv
;

1188 
	}
}

1192 
	scom∑øbÀ_±r
 {

1193 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
	mtd
;

1194 c⁄° *
	m•å
;

1198 
	$SET_OF__com∑ª_cb
(c⁄° *
≠å
, c⁄° *
b±r
) {

1199 c⁄° 
com∑øbÀ_±r
 *
a
 = 
≠å
;

1200 c⁄° 
com∑øbÀ_±r
 *
b
 = 
b±r
;

1201 
	`as£π
(
a
->
td
 =
b
->td);

1202  
a
->
td
->
›
->
	`com∑ª_°ru˘
◊->td,á->
•å
, 
b
->sptr);

1203 
	}
}

1206 
	$SET_OF_com∑ª
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
≠å
,

1207 c⁄° *
b±r
) {

1208 c⁄° 
a¢_™⁄ymous_£t_
 *
a
 = 
	`_A_CSET_FROM_VOID
(
≠å
);

1209 c⁄° 
a¢_™⁄ymous_£t_
 *
b
 = 
	`_A_CSET_FROM_VOID
(
b±r
);

1211 if(
a
 && 
b
) {

1212 
com∑øbÀ_±r
 *
as‹ãd
;

1213 
com∑øbÀ_±r
 *
bs‹ãd
;

1214 
ssize_t
 
comm⁄_Àngth
;

1215 
ssize_t
 
idx
;

1217 if(
a
->
cou¡
 == 0) {

1218 if(
b
->
cou¡
)  -1;

1220 } if(
b
->
cou¡
 == 0) {

1224 
as‹ãd
 = 
	`MALLOC
(
a
->
cou¡
 * (asorted[0]));

1225 
bs‹ãd
 = 
	`MALLOC
(
b
->
cou¡
 * (bsorted[0]));

1226 if(!
as‹ãd
 || !
bs‹ãd
) {

1227 
	`FREEMEM
(
as‹ãd
);

1228 
	`FREEMEM
(
bs‹ãd
);

1232 
idx
 = 0; idx < 
a
->
cou¡
; idx++) {

1233 
as‹ãd
[
idx
].
td
 =Åd->
ñemíts
->
ty≥
;

1234 
as‹ãd
[
idx
].
•å
 = 
a
->
¨øy
[idx];

1237 
idx
 = 0; idx < 
b
->
cou¡
; idx++) {

1238 
bs‹ãd
[
idx
].
td
 =Åd->
ñemíts
->
ty≥
;

1239 
bs‹ãd
[
idx
].
•å
 = 
b
->
¨øy
[idx];

1242 
	`qs‹t
(
as‹ãd
, 
a
->
cou¡
, ◊s‹ãd[0]), 
SET_OF__com∑ª_cb
);

1243 
	`qs‹t
(
bs‹ãd
, 
b
->
cou¡
, (bs‹ãd[0]), 
SET_OF__com∑ª_cb
);

1245 
comm⁄_Àngth
 = (
a
->
cou¡
 < 
b
->count ?á->count : b->count);

1246 
idx
 = 0; idx < 
comm⁄_Àngth
; idx++) {

1247 
ªt
 = 
td
->
ñemíts
->
ty≥
->
›
->
	`com∑ª_°ru˘
(

1248 
td
->
ñemíts
->
ty≥
, 
as‹ãd
[
idx
].
•å
, 
bs‹ãd
[idx].sptr);

1249 if(
ªt
) {

1250 
	`FREEMEM
(
as‹ãd
);

1251 
	`FREEMEM
(
bs‹ãd
);

1252  
ªt
;

1256 
	`FREEMEM
(
as‹ãd
);

1257 
	`FREEMEM
(
bs‹ãd
);

1259 if(
idx
 < 
b
->
cou¡
)

1261 if(
idx
 < 
a
->
cou¡
)  1;

1262 } if(!
a
) {

1264 } if(!
b
) {

1269 
	}
}

1272 
a¢_TYPE_›î©i⁄_t
 
	ga¢_OP_SET_OF
 = {

1273 
SET_OF_‰ì
,

1274 
SET_OF_¥öt
,

1275 
SET_OF_com∑ª
,

1276 
SET_OF_decode_bî
,

1277 
SET_OF_ícode_dî
,

1278 
SET_OF_decode_xî
,

1279 
SET_OF_ícode_xî
,

1280 #ifde‡
ASN_DISABLE_OER_SUPPORT


1284 
SET_OF_decode_€r
,

1285 
SET_OF_ícode_€r
,

1287 #ifde‡
ASN_DISABLE_PER_SUPPORT


1293 
SET_OF_decode_u≥r
,

1294 
SET_OF_ícode_u≥r
,

1295 
SET_OF_decode_≠î
,

1298 
SET_OF_øndom_fûl
,

1303 
a¢_øndom_fûl_ªsu…_t


1304 
	$SET_OF_øndom_fûl
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

1305 c⁄° 
a¢_ícodög_c⁄°øöts_t
 *
c⁄°øöts
,

1306 
size_t
 
max_Àngth
) {

1307 c⁄° 
a¢_SET_OF_•ecifics_t
 *
•ecs
 =

1308 (c⁄° 
a¢_SET_OF_•ecifics_t
 *)
td
->
•ecifics
;

1309 
a¢_øndom_fûl_ªsu…_t
 
ªs_ok
 = {
ARFILL_OK
, 0};

1310 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_Áûed
 = {
ARFILL_FAILED
, 0};

1311 
a¢_øndom_fûl_ªsu…_t
 
ªsu…_skù≥d
 = {
ARFILL_SKIPPED
, 0};

1312 c⁄° 
a¢_TYPE_membî_t
 *
ñm
 = 
td
->
ñemíts
;

1313 *
°
 = *
•å
;

1314 
max_ñemíts
 = 5;

1315 
¶b
 = 0;

1316 
sub
 = 0;

1317 
size_t
 
∫d_Àn
;

1319 if(
max_Àngth
 =0Ë 
ªsu…_skù≥d
;

1321 if(
°
 =
NULL
) {

1322 
°
 = (*
•å
 = 
	`CALLOC
(1, 
•ecs
->
°ru˘_size
));

1323 if(
°
 =
NULL
) {

1324  
ªsu…_Áûed
;

1328 
	`a¢_øndom_bëwìn
(0, 6)) {

1329 0: 
max_ñemíts
 = 0; ;

1330 1: 
max_ñemíts
 = 1; ;

1331 2: 
max_ñemíts
 = 5; ;

1332 3: 
max_ñemíts
 = 
max_Àngth
; ;

1333 4: 
max_ñemíts
 = 
max_Àngth
 / 2; ;

1334 5: 
max_ñemíts
 = 
max_Àngth
 / 4; ;

1337 
sub
 = 
¶b
 + 
max_ñemíts
;

1339 if(!
c⁄°øöts
 || !c⁄°øöts->
≥r_c⁄°øöts
)

1340 
c⁄°øöts
 = &
td
->
ícodög_c⁄°øöts
;

1341 if(
c⁄°øöts
->
≥r_c⁄°øöts
) {

1342 c⁄° 
a¢_≥r_c⁄°øöt_t
 *
pc
 = &
c⁄°øöts
->
≥r_c⁄°øöts
->
size
;

1343 if(
pc
->
Êags
 & 
APC_SEMI_CONSTRAINED
) {

1344 
¶b
 = 
pc
->
lowî_bound
;

1345 
sub
 = 
pc
->
lowî_bound
 + 
max_ñemíts
;

1346 } if(
pc
->
Êags
 & 
APC_CONSTRAINED
) {

1347 
¶b
 = 
pc
->
lowî_bound
;

1348 
sub
 = 
pc
->
uµî_bound
;

1349 if(
sub
 - 
¶b
 > 
max_ñemíts
) sub = slb + max_elements;

1354 
	`a¢_øndom_bëwìn
(-1, 4)) {

1358 if(
c⁄°øöts
->
≥r_c⁄°øöts


1359 && (
c⁄°øöts
->
≥r_c⁄°øöts
->
size
.
Êags
 & 
APC_EXTENSIBLE
)) {

1360 
	`a¢_øndom_bëwìn
(0, 5)) {

1363 
∫d_Àn
 = 0;

1366 if(
¶b
 > 0) {

1367 
∫d_Àn
 = 
¶b
 - 1;

1369 
∫d_Àn
 = 0;

1373 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(0, 
¶b
);

1376 if(
sub
 < (
ssize_t
)
max_Àngth
) {

1377 
∫d_Àn
 = 
sub
 + 1;

1379 
∫d_Àn
 = 
max_Àngth
;

1383 if(
sub
 < (
ssize_t
)
max_Àngth
) {

1384 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
sub
 + 1, 
max_Àngth
);

1386 
∫d_Àn
 = 
max_Àngth
;

1390 
∫d_Àn
 = 
max_Àngth
;

1397 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
¶b
, 
sub
);

1400 if(
¶b
 < 
sub
) {

1401 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
¶b
 + 1, 
sub
);

1406 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
¶b
, slb);

1409 if(
¶b
 < 
sub
) {

1410 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
¶b
, 
sub
 - 1);

1415 
∫d_Àn
 = 
	`a¢_øndom_bëwìn
(
sub
, sub);

1419 ; 
∫d_Àn
 > 0;Ñnd_len--) {

1420 
a¢_™⁄ymous_£t_
 *
li°
 = 
	`_A_SET_FROM_VOID
(
°
);

1421 *
±r
 = 0;

1422 
a¢_øndom_fûl_ªsu…_t
 
tm¥es
 = 
ñm
->
ty≥
->
›
->
	`øndom_fûl
(

1423 
ñm
->
ty≥
, &
±r
, &ñm->
ícodög_c⁄°øöts
,

1424 (
max_Àngth
 > 
ªs_ok
.
Àngth
 ? max_length -Ñes_ok.length : 0)

1425 / 
∫d_Àn
);

1426 
tm¥es
.
code
) {

1427 
ARFILL_OK
:

1428 
	`ASN_SET_ADD
(
li°
, 
±r
);

1429 
ªs_ok
.
Àngth
 +
tm¥es
.length;

1431 
ARFILL_SKIPPED
:

1433 
ARFILL_FAILED
:

1434 
	`as£π
(
±r
 == 0);

1435  
tm¥es
;

1439  
ªs_ok
;

1440 
	}
}

	@constr_TYPE.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<c⁄°r_TYPE.h
>

7 
	~<î∫o.h
>

12 
	$gë_a¢1c_ívú⁄mít_vîsi⁄
(Ë{  
ASN1C_ENVIRONMENT_VERSION
; 
	}
}

14 
a¢_≠p_c⁄sume_byãs_f
 
	g_¥öt2Â
;

19 
bî_év_èg_t


20 
	$a¢_TYPE_outmo°_èg
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
,

21 c⁄° *
°ru˘_±r
, 
èg_mode
, 
bî_év_èg_t
 
èg
) {

23 if(
èg_mode
)

24  
èg
;

26 if(
ty≥_des¸ùt‹
->
ègs_cou¡
)

27  
ty≥_des¸ùt‹
->
ègs
[0];

29  
ty≥_des¸ùt‹
->
›
->
	`outmo°_èg
—y≥_des¸ùt‹, 
°ru˘_±r
, 0, 0);

30 
	}
}

36 
	$a¢_Âröt
(
FILE
 *
°ªam
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

37 c⁄° *
°ru˘_±r
) {

38 if(!
°ªam
Ë°ªam = 
°dout
;

39 if(!
td
 || !
°ru˘_±r
) {

40 
î∫o
 = 
EINVAL
;

45 if(
td
->
›
->
	`¥öt_°ru˘
—d, 
°ru˘_±r
, 1, 
_¥öt2Â
, 
°ªam
)) {

50 if(
	`_¥öt2Â
("\n", 1, 
°ªam
)) {

54  
	`fÊush
(
°ªam
);

55 
	}
}

59 
	$_¥öt2Â
(c⁄° *
buf„r
, 
size_t
 
size
, *
≠p_key
) {

60 
FILE
 *
°ªam
 = (FILE *)
≠p_key
;

62 if(
	`fwrôe
(
buf„r
, 1, 
size
, 
°ªam
) != size)

66 
	}
}

73 
ASN_DEBUG_f
(c⁄° *
fmt
, ...);

74 
	$ASN_DEBUG_f
(c⁄° *
fmt
, ...) {

75 
va_li°
 
≠
;

76 
	`va_°¨t
(
≠
, 
fmt
);

77 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

78 
	`Ârötf
(
°dîr
, "\n");

79 
	`va_íd
(
≠
);

80 
	}
}

	@constraints.c

1 
	~<a¢_öã∫Æ.h
>

2 
	~<c⁄°øöts.h
>

5 
	$a¢_gíîic_no_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
,

6 c⁄° *
°ru˘_±r
,

7 
a¢_≠p_c⁄°øöt_Áûed_f
 *
cb
, *
key
) {

8 ()
ty≥_des¸ùt‹
;

9 ()
°ru˘_±r
;

10 ()
cb
;

11 ()
key
;

15 
	}
}

18 
	$a¢_gíîic_unknown_c⁄°øöt
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
,

19 c⁄° *
°ru˘_±r
,

20 
a¢_≠p_c⁄°øöt_Áûed_f
 *
cb
, *
key
) {

21 ()
ty≥_des¸ùt‹
;

22 ()
°ru˘_±r
;

23 ()
cb
;

24 ()
key
;

28 
	}
}

30 
	sîrbufDesc
 {

31 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
	mÁûed_ty≥
;

32 c⁄° *
	mÁûed_°ru˘_±r
;

33 *
	mîrbuf
;

34 
size_t
 
	mîæí
;

38 
	$_a¢_i_˘Áûcb
(*
key
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

39 c⁄° *
fmt
, ...) {

40 
îrbufDesc
 *
¨g
 = 
key
;

41 
va_li°
 
≠
;

42 
ssize_t
 
vÀn
;

43 
ssize_t
 
maxÀn
;

45 
¨g
->
Áûed_ty≥
 = 
td
;

46 
¨g
->
Áûed_°ru˘_±r
 = 
•å
;

48 
maxÀn
 = 
¨g
->
îæí
;

49 if(
maxÀn
 <= 0)

52 
	`va_°¨t
(
≠
, 
fmt
);

53 
vÀn
 = 
	`v¢¥ötf
(
¨g
->
îrbuf
, 
maxÀn
, 
fmt
, 
≠
);

54 
	`va_íd
(
≠
);

55 if(
vÀn
 >
maxÀn
) {

56 
¨g
->
îrbuf
[
maxÀn
-1] = '\0';

57 
¨g
->
îæí
 = 
maxÀn
 - 1;

59 } if(
vÀn
 >= 0) {

60 
¨g
->
îrbuf
[
vÀn
] = '\0';

61 
¨g
->
îæí
 = 
vÀn
;

66 
vÀn
 = ("<broken vsnprintf>") - 1;

67 
maxÀn
--;

68 
¨g
->
îæí
 = 
vÀn
 < 
maxÀn
 ? vlen : maxlen;

69 
	`mem˝y
(
¨g
->
îrbuf
, "<brokí v¢¥ötf>",árg->
îæí
);

70 
¨g
->
îrbuf
[¨g->
îæí
] = 0;

74 
	}
}

77 
	$a¢_check_c⁄°øöts
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
,

78 c⁄° *
°ru˘_±r
, *
îrbuf
, 
size_t
 *
îæí
) {

79 
îrbufDesc
 
¨g
;

80 
ªt
;

82 
¨g
.
Áûed_ty≥
 = 0;

83 
¨g
.
Áûed_°ru˘_±r
 = 0;

84 
¨g
.
îrbuf
 =Érrbuf;

85 
¨g
.
îæí
 =Érrlen ? *errlen : 0;

87 
ªt
 = 
ty≥_des¸ùt‹
->
ícodög_c⁄°øöts
.
	`gíîÆ_c⁄°øöts
(

88 
ty≥_des¸ùt‹
, 
°ru˘_±r
, 
_a¢_i_˘Áûcb
, &
¨g
);

89 if(
ªt
 =-1 && 
îæí
Ë*îæí = 
¨g
.errlen;

91  
ªt
;

92 
	}
}

	@der_encoder.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<î∫o.h
>

8 
ssize_t
 
dî_wrôe_TL
(
bî_év_èg_t
 
èg
, 
bî_év_Àn_t
 
Àn
,

9 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
, 
c⁄°ru˘ed
);

14 
a¢_íc_rvÆ_t


15 
	$dî_ícode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
, c⁄° *
°ru˘_±r
,

16 
a¢_≠p_c⁄sume_byãs_f
 *
c⁄sume_byãs
, *
≠p_key
) {

17 
	`ASN_DEBUG
("DERÉncoder invoked for %s",

18 
ty≥_des¸ùt‹
->
«me
);

23  
ty≥_des¸ùt‹
->
›
->
	`dî_ícodî
(

24 
ty≥_des¸ùt‹
, 
°ru˘_±r
,

25 0, 0, 
c⁄sume_byãs
, 
≠p_key
);

26 
	}
}

31 
	síc_to_buf_¨g
 {

32 *
	mbuf„r
;

33 
size_t
 
	mÀ·
;

34 } 
	tíc_to_buf_¨g
;

35 
	$ícode_to_buf„r_cb
(c⁄° *
buf„r
, 
size_t
 
size
, *
key
) {

36 
íc_to_buf_¨g
 *
¨g
 = (íc_to_buf_¨g *)
key
;

38 if(
¨g
->
À·
 < 
size
)

41 
	`mem˝y
(
¨g
->
buf„r
, buf„r, 
size
);

42 
¨g
->
buf„r
 = ((*Ôrg->buf„rË+ 
size
;

43 
¨g
->
À·
 -
size
;

46 
	}
}

51 
a¢_íc_rvÆ_t


52 
	$dî_ícode_to_buf„r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
,

53 c⁄° *
°ru˘_±r
, *
buf„r
, 
size_t
 
buf„r_size
) {

54 
íc_to_buf_¨g
 
¨g
;

55 
a¢_íc_rvÆ_t
 
ec
;

57 
¨g
.
buf„r
 = buffer;

58 
¨g
.
À·
 = 
buf„r_size
;

60 
ec
 = 
ty≥_des¸ùt‹
->
›
->
	`dî_ícodî
(type_descriptor,

61 
°ru˘_±r
,

62 0, 0, 
ícode_to_buf„r_cb
, &
¨g
);

63 if(
ec
.
ícoded
 != -1) {

64 
	`as£π
(
ec
.
ícoded
 =(
ssize_t
)(
buf„r_size
 - 
¨g
.
À·
));

67  
ec
;

68 
	}
}

74 
ssize_t


75 
	$dî_wrôe_ègs
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
sd
, 
size_t
 
°ru˘_Àngth
,

76 
èg_mode
, 
œ°_èg_f‹m
,

77 
bî_év_èg_t
 
èg
,

78 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

79 
	#ASN1_DER_MAX_TAGS_COUNT
 4

	)

80 
bî_év_èg_t


81 
ègs_buf_s¸©ch
[
ASN1_DER_MAX_TAGS_COUNT
 * (
bî_év_èg_t
)];

82 
ssize_t
 
Àns
[
ASN1_DER_MAX_TAGS_COUNT
 * (ssize_t)];

83 c⁄° 
bî_év_èg_t
 *
ègs
;

84 
ègs_cou¡
;

85 
size_t
 
ovîÆl_Àngth
;

86 
i
;

88 
	`ASN_DEBUG
("WritingÅags (%s,Åm=%d,Åc=%d,Åag=%s, mtc=%d)",

89 
sd
->
«me
, 
èg_mode
, sd->
ègs_cou¡
,

90 
	`bî_év_èg_°rög
(
èg
),

91 
èg_mode


92 ?(
sd
->
ègs_cou¡
+1

93 -((
èg_mode
 =-1Ë&& 
sd
->
ègs_cou¡
))

94 :
sd
->
ègs_cou¡


97 if(
sd
->
ègs_cou¡
 + 1 > 
ASN1_DER_MAX_TAGS_COUNT
) {

98 
	`ASN_DEBUG
("Sy°emÜimô %d o¿èg†cou¡", 
ASN1_DER_MAX_TAGS_COUNT
);

102 if(
èg_mode
) {

108 
°ag_off£t
;

109 
bî_év_èg_t
 *
ègs_buf
 = 
ègs_buf_s¸©ch
;

110 
ègs_cou¡
 = 
sd
->tags_count

112 - ((
èg_mode
 =-1Ë&& 
sd
->
ègs_cou¡
);

114 
ègs_buf
[0] = 
èg
;

115 
°ag_off£t
 = -1 + ((
èg_mode
 =-1Ë&& 
sd
->
ègs_cou¡
);

116 
i
 = 1; i < 
ègs_cou¡
; i++)

117 
ègs_buf
[
i
] = 
sd
->
ègs
[ò+ 
°ag_off£t
];

118 
ègs
 = 
ègs_buf
;

120 
ègs
 = 
sd
->tags;

121 
ègs_cou¡
 = 
sd
->tags_count;

125 if(
ègs_cou¡
 == 0)

132 
ovîÆl_Àngth
 = 
°ru˘_Àngth
;

133 
i
 = 
ègs_cou¡
 - 1; i >= 0; --i) {

134 
Àns
[
i
] = 
	`dî_wrôe_TL
(
ègs
[i], 
ovîÆl_Àngth
, 0, 0, 0);

135 if(
Àns
[
i
] == -1)  -1;

136 
ovîÆl_Àngth
 +
Àns
[
i
];

137 
Àns
[
i
] = 
ovîÆl_Àngth
 -Üens[i];

140 if(!
cb
Ë 
ovîÆl_Àngth
 - 
°ru˘_Àngth
;

142 
	`ASN_DEBUG
("Encodög %†TL sequí˚ (%dÉÀmíts)", 
sd
->
«me
,

143 
ègs_cou¡
);

148 
i
 = 0; i < 
ègs_cou¡
; i++) {

149 
ssize_t
 
Àn
;

150 
_c⁄°r
;

153 
_c⁄°r
 = (
œ°_èg_f‹m
 || 
i
 < (
ègs_cou¡
 - 1));

155 
Àn
 = 
	`dî_wrôe_TL
(
ègs
[
i
], 
Àns
[i], 
cb
, 
≠p_key
, 
_c⁄°r
);

156 if(
Àn
 == -1)  -1;

159  
ovîÆl_Àngth
 - 
°ru˘_Àngth
;

160 
	}
}

162 
ssize_t


163 
	$dî_wrôe_TL
(
bî_év_èg_t
 
èg
, 
bî_év_Àn_t
 
Àn
,

164 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
,

165 
c⁄°ru˘ed
) {

166 
uöt8_t
 
buf
[32];

167 
size_t
 
size
 = 0;

168 
buf_size
 = 
cb
?(
buf
):0;

169 
ssize_t
 
tmp
;

172 
tmp
 = 
	`bî_év_èg_£rülize
(
èg
, 
buf
, 
buf_size
);

173 if(
tmp
 =-1 ||Åm∞> (
ssize_t
)(
buf
))  -1;

174 
size
 +
tmp
;

177 
tmp
 = 
	`dî_év_Àngth_£rülize
(
Àn
, 
buf
+
size
, 
buf_size
?buf_size-size:0);

178 if(
tmp
 == -1)  -1;

179 
size
 +
tmp
;

181 if(
size
 > (
buf
))

187 if(
cb
) {

188 if(
c⁄°ru˘ed
Ë*
buf
 |= 0x20;

189 if(
	`cb
(
buf
, 
size
, 
≠p_key
) < 0)

193  
size
;

194 
	}
}

	@oer_decoder.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_codecs_¥im.h
>

11 
a¢_dec_rvÆ_t


12 
	$€r_decode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

13 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
, **
°ru˘_±r
,

14 c⁄° *
±r
, 
size_t
 
size
) {

15 
a¢_codec_˘x_t
 
s_codec_˘x
;

21 if(
›t_codec_˘x
) {

22 if(
›t_codec_˘x
->
max_°ack_size
) {

23 
s_codec_˘x
 = *
›t_codec_˘x
;

24 
›t_codec_˘x
 = &
s_codec_˘x
;

28 
	`mem£t
(&
s_codec_˘x
, 0, (s_codec_ctx));

29 
s_codec_˘x
.
max_°ack_size
 = 
ASN__DEFAULT_STACK_MAX
;

30 
›t_codec_˘x
 = &
s_codec_˘x
;

36  
ty≥_des¸ùt‹
->
›
->
	`€r_decodî
(
›t_codec_˘x
,Åype_descriptor, 0,

37 
°ru˘_±r
,

38 
±r
, 
size


40 
	}
}

46 
ssize_t


47 
	$€r_›í_ty≥_skù
(c⁄° *
buÂå
, 
size_t
 
size
) {

48 
size_t
 
Àn
 = 0;

49  
	`€r_„tch_Àngth
(
buÂå
, 
size
, &
Àn
);

50 
	}
}

59 
ssize_t


60 
	$€r_›í_ty≥_gë
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

61 c⁄° 
a¢_TYPE_des¸ùt‹_s
 *
td
,

62 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, **
°ru˘_±r
,

63 c⁄° *
buÂå
, 
size_t
 
size
) {

64 
a¢_dec_rvÆ_t
 
dr
;

65 
size_t
 
c⁄èöî_Àn
 = 0;

66 
ssize_t
 
Àn_Àn
;

67 
a¢_°ru˘_‰ì_mëhod
 
di•o£_mëhod
 =

68 (*
°ru˘_±r
Ë? 
ASFM_FREE_UNDERLYING_AND_RESET
 : 
ASFM_FREE_EVERYTHING
;

71 
Àn_Àn
 = 
	`€r_„tch_Àngth
(
buÂå
, 
size
, &
c⁄èöî_Àn
);

72 if(
Àn_Àn
 <= 0) {

73  
Àn_Àn
;

80 if(
size
 - 
Àn_Àn
 < 
c⁄èöî_Àn
) {

85 
dr
 = 
td
->
›
->
	`€r_decodî
(
›t_codec_˘x
,Åd, 
c⁄°øöts
, 
°ru˘_±r
,

86 (c⁄° 
uöt8_t
 *)
buÂå
 + 
Àn_Àn
, 
c⁄èöî_Àn
);

87 if(
dr
.
code
 =
RC_OK
) {

88  
Àn_Àn
 + 
c⁄èöî_Àn
;

91 
td
->
›
->
	`‰ì_°ru˘
—d, *
°ru˘_±r
, 
di•o£_mëhod
);

92 *
°ru˘_±r
 = 
NULL
;

95 
	}
}

98 
a¢_dec_rvÆ_t


99 
	$€r_decode_¥imôive
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

100 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

101 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

102 c⁄° *
±r
, 
size_t
 
size
) {

103 
ASN__PRIMITIVE_TYPE_t
 *
°
 = (ASN__PRIMITIVE_TYPE_à*)*
•å
;

104 
a¢_dec_rvÆ_t
 
rvÆ
 = {
RC_OK
, 0};

105 
size_t
 
ex≥˘ed_Àngth
 = 0;

106 
ssize_t
 
Àn_Àn
;

108 ()
td
;

109 ()
›t_codec_˘x
;

110 ()
c⁄°øöts
;

112 if(!
°
) {

113 
°
 = (
ASN__PRIMITIVE_TYPE_t
 *)(*
•å
 = 
	`CALLOC
(

114 1, (
ASN__PRIMITIVE_TYPE_t
)));

115 if(!
°
Ë
ASN__DECODE_FAILED
;

124 
Àn_Àn
 = 
	`€r_„tch_Àngth
(
±r
, 
size
, &
ex≥˘ed_Àngth
);

125 if(
Àn_Àn
 > 0) {

126 
rvÆ
.
c⁄sumed
 = 
Àn_Àn
;

127 
±r
 = (c⁄° *Ìå + 
Àn_Àn
;

128 
size
 -
Àn_Àn
;

129 } if(
Àn_Àn
 == 0) {

130 
ASN__DECODE_STARVED
;

131 } if(
Àn_Àn
 < 0) {

132 
ASN__DECODE_FAILED
;

135 if(
size
 < 
ex≥˘ed_Àngth
) {

136 
ASN__DECODE_STARVED
;

138 
uöt8_t
 *
buf
 = 
	`MALLOC
(
ex≥˘ed_Àngth
 + 1);

139 if(
buf
 =
NULL
) {

140 
ASN__DECODE_FAILED
;

142 
	`mem˝y
(
buf
, 
±r
, 
ex≥˘ed_Àngth
);

143 
buf
[
ex≥˘ed_Àngth
] = '\0';

145 
	`FREEMEM
(
°
->
buf
);

146 
°
->
buf
 = buf;

147 
°
->
size
 = 
ex≥˘ed_Àngth
;

149 
rvÆ
.
c⁄sumed
 +
ex≥˘ed_Àngth
;

150  
rvÆ
;

152 
	}
}

	@oer_encoder.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<a¢_codecs_¥im.h
>

11 
a¢_íc_rvÆ_t


12 
	$€r_ícode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
, c⁄° *
°ru˘_±r
,

13 
a¢_≠p_c⁄sume_byãs_f
 *
c⁄sume_byãs
, *
≠p_key
) {

14 
	`ASN_DEBUG
("OERÉncodî invoked f‹ %s", 
ty≥_des¸ùt‹
->
«me
);

19  
ty≥_des¸ùt‹
->
›
->
	`€r_ícodî
(

20 
ty≥_des¸ùt‹
, 0,

21 
°ru˘_±r
,

22 
c⁄sume_byãs
, 
≠p_key
);

23 
	}
}

28 
	síc_to_buf_¨g
 {

29 *
	mbuf„r
;

30 
size_t
 
	mÀ·
;

31 } 
	tíc_to_buf_¨g
;

33 
	$ícode_to_buf„r_cb
(c⁄° *
buf„r
, 
size_t
 
size
, *
key
) {

34 
íc_to_buf_¨g
 *
¨g
 = (íc_to_buf_¨g *)
key
;

36 if(
¨g
->
À·
 < 
size
)  -1;

38 
	`mem˝y
(
¨g
->
buf„r
, buf„r, 
size
);

39 
¨g
->
buf„r
 = ((*Ôrg->buf„rË+ 
size
;

40 
¨g
->
À·
 -
size
;

43 
	}
}

48 
a¢_íc_rvÆ_t


49 
	$€r_ícode_to_buf„r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
ty≥_des¸ùt‹
,

50 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
,

51 c⁄° *
°ru˘_±r
,

52 *
buf„r
,

53 
size_t
 
buf„r_size


55 
íc_to_buf_¨g
 
¨g
;

56 
a¢_íc_rvÆ_t
 
ec
;

58 
¨g
.
buf„r
 = buffer;

59 
¨g
.
À·
 = 
buf„r_size
;

61 if(
ty≥_des¸ùt‹
->
›
->
€r_ícodî
 =
NULL
) {

62 
ec
.
ícoded
 = -1;

63 
ec
.
Áûed_ty≥
 = 
ty≥_des¸ùt‹
;

64 
ec
.
°ru˘uª_±r
 = 
°ru˘_±r
;

65 
	`ASN_DEBUG
("OERÉncoder isÇot defined for %s",

66 
ty≥_des¸ùt‹
->
«me
);

68 
ec
 = 
ty≥_des¸ùt‹
->
›
->
	`€r_ícodî
(

69 
ty≥_des¸ùt‹
, 
c⁄°øöts
,

70 
°ru˘_±r
,

71 
ícode_to_buf„r_cb
, &
¨g
);

72 if(
ec
.
ícoded
 != -1) {

73 
	`as£π
(
ec
.
ícoded
 =(
ssize_t
)(
buf„r_size
 - 
¨g
.
À·
));

77  
ec
;

78 
	}
}

80 
a¢_íc_rvÆ_t


81 
	$€r_ícode_¥imôive
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

82 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

83 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

84 c⁄° 
ASN__PRIMITIVE_TYPE_t
 *
°
 = (c⁄° ASN__PRIMITIVE_TYPE_à*)
•å
;

85 
a¢_íc_rvÆ_t
 
î
 = {0, 0, 0};

86 
ssize_t
 
ªt
;

88 ()
c⁄°øöts
;

90 if(!
°
Ë
ASN__ENCODE_FAILED
;

92 
	`ASN_DEBUG
("Encodög %†(%" 
ASN_PRI_SIZE
 " byãs)", 
td
 ?Åd->
«me
 : "", 
°
->
size
);

97 
ªt
 = 
	`€r_£rülize_Àngth
(
°
->
size
, 
cb
, 
≠p_key
);

98 if(
ªt
 < 0) {

99 
ASN__ENCODE_FAILED
;

101 
î
.
ícoded
 +
ªt
;

103 
î
.
ícoded
 +
°
->
size
;

104 if(
	`cb
(
°
->
buf
, st->
size
, 
≠p_key
) < 0) {

105 
ASN__ENCODE_FAILED
;

107 
	`ASN__ENCODED_OK
(
î
);

109 
	}
}

112 
	$€r__cou¡_byãs
(c⁄° *
buf„r
, 
size_t
 
size
, *
byãs_±r
) {

113 
size_t
 *
byãs
 = 
byãs_±r
;

114 ()
buf„r
;

115 *
byãs
 +
size
;

117 
	}
}

119 
ssize_t


120 
	$€r_›í_ty≥_put
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

121 c⁄° 
a¢_€r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

122 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

123 
size_t
 
£rülized_byã_cou¡
 = 0;

124 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

125 
ssize_t
 
Àn_Àn
;

127 
î
 = 
td
->
›
->
	`€r_ícodî
—d, 
c⁄°øöts
, 
•å
, 
€r__cou¡_byãs
,

128 &
£rülized_byã_cou¡
);

129 if(
î
.
ícoded
 < 0)  -1;

130 
	`as£π
(
£rülized_byã_cou¡
 =(
size_t
)
î
.
ícoded
);

132 
Àn_Àn
 = 
	`€r_£rülize_Àngth
(
£rülized_byã_cou¡
, 
cb
, 
≠p_key
);

133 if(
Àn_Àn
 == -1)  -1;

135 
î
 = 
td
->
›
->
	`€r_ícodî
—d, 
c⁄°øöts
, 
•å
, 
cb
, 
≠p_key
);

136 if(
î
.
ícoded
 < 0)  -1;

137 
	`as£π
(
£rülized_byã_cou¡
 =(
size_t
)
î
.
ícoded
);

139  
Àn_Àn
 + 
î
.
ícoded
;

140 
	}
}

	@oer_support.c

6 
	~<a¢_sy°em.h
>

7 
	~<a¢_öã∫Æ.h
>

9 
	~<€r_suµ‹t.h
>

18 
ssize_t


19 
	$€r_„tch_Àngth
(c⁄° *
buÂå
, 
size_t
 
size
, size_à*
Àn_r
) {

20 
uöt8_t
 
fú°_byã
;

21 
size_t
 
Àn_Àn
;

22 c⁄° 
uöt8_t
 *
b
;

23 c⁄° 
uöt8_t
 *
bíd
;

24 
size_t
 
Àn
;

26 if(
size
 == 0) {

27 *
Àn_r
 = 0;

31 
fú°_byã
 = *(c⁄° 
uöt8_t
 *)
buÂå
;

32 if((
fú°_byã
 & 0x80) == 0) {

33 *
Àn_r
 = 
fú°_byã
;

37 
Àn_Àn
 = (
fú°_byã
 & 0x7f);

38 if((1 + 
Àn_Àn
Ë> 
size
) {

39 *
Àn_r
 = 0;

43 
b
 = (c⁄° 
uöt8_t
 *)
buÂå
 + 1;

44 
bíd
 = 
b
 + 
Àn_Àn
;

46 ; 
b
 < 
bíd
 && *b == 0; b++) {

50 if((
bíd
 - 
b
Ë> (
ssize_t
)(
size_t
)) {

52 *
Àn_r
 = 0;

56 
Àn
 = 0; 
b
 < 
bíd
; b++) {

57 
Àn
 = (À¿<< 8Ë+ *
b
;

60 if(
Àn
 > 
RSIZE_MAX
) {

61 *
Àn_r
 = 0;

65 *
Àn_r
 = 
Àn
;

66 
	`as£π
(
Àn_Àn
 + 1 =(
size_t
)(
bíd
 - (c⁄° 
uöt8_t
 *)
buÂå
));

67  
Àn_Àn
 + 1;

68 
	}
}

75 
ssize_t


76 
	$€r_£rülize_Àngth
(
size_t
 
Àngth
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

77 *
≠p_key
) {

78 
uöt8_t
 
s¸©ch
[1 + (
Àngth
)];

79 
uöt8_t
 *
•
 = 
s¸©ch
;

80 
lôéeEndün
 = 1;

81 c⁄° 
uöt8_t
 *
p°¨t
;

82 c⁄° 
uöt8_t
 *
≥nd
;

83 c⁄° 
uöt8_t
 *
p
;

84 
add
;

86 if(
Àngth
 <= 127) {

87 
uöt8_t
 
b
 = 
Àngth
;

88 if(
	`cb
(&
b
, 1, 
≠p_key
) < 0) {

94 if(*(*)&
lôéeEndün
) {

95 
p°¨t
 = (c⁄° 
uöt8_t
 *)&
Àngth
 + (length) - 1;

96 
≥nd
 = (c⁄° 
uöt8_t
 *)&
Àngth
;

97 
add
 = -1;

99 
p°¨t
 = (c⁄° 
uöt8_t
 *)&
Àngth
;

100 
≥nd
 = 
p°¨t
 + (
Àngth
);

101 
add
 = 1;

104 
p
 = 
p°¨t
;Ö !
≥nd
;Ö +
add
) {

106 if(*
p
) ;

109 
•
 = 
s¸©ch
 + 1; ; 
p
 +
add
) {

110 *
•
++ = *
p
;

111 if(
p
 =
≥nd
) ;

113 
	`as£π
((
•
 - 
s¸©ch
) - 1 <= 0x7f);

114 
s¸©ch
[0] = 0x80 + ((
•
 - scratch) - 1);

116 if(
	`cb
(
s¸©ch
, 
•
 - s¸©ch, 
≠p_key
) < 0) {

120  
•
 - 
s¸©ch
;

121 
	}
}

	@per_decoder.c

1 
	~<a¢_≠∂iˇti⁄.h
>

2 
	~<a¢_öã∫Æ.h
>

3 
	~<≥r_decodî.h
>

10 
a¢_dec_rvÆ_t


11 
	$u≥r_decode_com∂ëe
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

12 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

13 c⁄° *
buf„r
, 
size_t
 
size
) {

14 
a¢_dec_rvÆ_t
 
rvÆ
;

16 
rvÆ
 = 
	`u≥r_decode
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
, 0, 0);

17 if(
rvÆ
.
c⁄sumed
) {

22 
rvÆ
.
c⁄sumed
 += 7;

23 
rvÆ
.
c⁄sumed
 >>= 3;

24 } if(
rvÆ
.
code
 =
RC_OK
) {

25 if(
size
) {

26 if(((c⁄° 
uöt8_t
 *)
buf„r
)[0] == 0) {

27 
rvÆ
.
c⁄sumed
 = 1;

29 
	`ASN_DEBUG
("Expecting single zeroed byte");

30 
rvÆ
.
code
 = 
RC_FAIL
;

34 
rvÆ
.
code
 = 
RC_WMORE
;

38  
rvÆ
;

39 
	}
}

41 
a¢_dec_rvÆ_t


42 
	$u≥r_decode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

43 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
, c⁄° *
buf„r
,

44 
size_t
 
size
, 
skù_bôs
, 
unu£d_bôs
) {

45 
a¢_codec_˘x_t
 
s_codec_˘x
;

46 
a¢_dec_rvÆ_t
 
rvÆ
;

47 
a¢_≥r_d©a_t
 
pd
;

49 if(
skù_bôs
 < 0 || skip_bits > 7

50 || 
unu£d_bôs
 < 0 || unused_bits > 7

51 || (
unu£d_bôs
 > 0 && !
size
))

52 
ASN__DECODE_FAILED
;

58 if(
›t_codec_˘x
) {

59 if(
›t_codec_˘x
->
max_°ack_size
) {

60 
s_codec_˘x
 = *
›t_codec_˘x
;

61 
›t_codec_˘x
 = &
s_codec_˘x
;

65 
	`mem£t
(&
s_codec_˘x
, 0, (s_codec_ctx));

66 
s_codec_˘x
.
max_°ack_size
 = 
ASN__DEFAULT_STACK_MAX
;

67 
›t_codec_˘x
 = &
s_codec_˘x
;

71 
	`mem£t
(&
pd
, 0, (pd));

72 
pd
.
buf„r
 = (c⁄° 
uöt8_t
 *)buffer;

73 
pd
.
nboff
 = 
skù_bôs
;

74 
pd
.
nbôs
 = 8 * 
size
 - 
unu£d_bôs
;

75 if(
pd
.
nboff
 >Öd.
nbôs
)

76 
ASN__DECODE_FAILED
;

81 if(!
td
->
›
->
u≥r_decodî
)

82 
ASN__DECODE_FAILED
;

83 
rvÆ
 = 
td
->
›
->
	`u≥r_decodî
(
›t_codec_˘x
,Åd, 0, 
•å
, &
pd
);

84 if(
rvÆ
.
code
 =
RC_OK
) {

86 
rvÆ
.
c⁄sumed
 = ((
pd
.
buf„r
 - (c⁄° 
uöt8_t
 *)buffer) << 3)

87 + 
pd
.
nboff
 - 
skù_bôs
;

88 
	`ASN_DEBUG
("PER decoding consumed %ld, counted %ld",

89 ()
rvÆ
.
c⁄sumed
, ()
pd
.
moved
);

90 
	`as£π
(
rvÆ
.
c⁄sumed
 =
pd
.
moved
);

93 
rvÆ
.
c⁄sumed
 = 0;

95  
rvÆ
;

96 
	}
}

98 
a¢_dec_rvÆ_t


99 
	$≠î_decode_com∂ëe
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

100 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
,

101 c⁄° *
buf„r
, 
size_t
 
size
) {

102 
a¢_dec_rvÆ_t
 
rvÆ
;

104 
rvÆ
 = 
	`≠î_decode
(
›t_codec_˘x
, 
td
, 
•å
, 
buf„r
, 
size
, 0, 0);

105 if(
rvÆ
.
c⁄sumed
) {

110 
rvÆ
.
c⁄sumed
 += 7;

111 
rvÆ
.
c⁄sumed
 >>= 3;

112 } if(
rvÆ
.
code
 =
RC_OK
) {

113 if(
size
) {

114 if(((c⁄° 
uöt8_t
 *)
buf„r
)[0] == 0) {

115 
rvÆ
.
c⁄sumed
 = 1;

117 
	`ASN_DEBUG
("Expecting single zeroed byte");

118 
rvÆ
.
code
 = 
RC_FAIL
;

122 
rvÆ
.
code
 = 
RC_WMORE
;

126  
rvÆ
;

127 
	}
}

129 
a¢_dec_rvÆ_t


130 
	$≠î_decode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

131 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
•å
, c⁄° *
buf„r
,

132 
size_t
 
size
, 
skù_bôs
, 
unu£d_bôs
) {

133 
a¢_codec_˘x_t
 
s_codec_˘x
;

134 
a¢_dec_rvÆ_t
 
rvÆ
;

135 
a¢_≥r_d©a_t
 
pd
;

137 if(
skù_bôs
 < 0 || skip_bits > 7

138 || 
unu£d_bôs
 < 0 || unused_bits > 7

139 || (
unu£d_bôs
 > 0 && !
size
))

140 
ASN__DECODE_FAILED
;

146 if(
›t_codec_˘x
) {

147 if(
›t_codec_˘x
->
max_°ack_size
) {

148 
s_codec_˘x
 = *
›t_codec_˘x
;

149 
›t_codec_˘x
 = &
s_codec_˘x
;

153 
	`mem£t
(&
s_codec_˘x
, 0, (s_codec_ctx));

154 
s_codec_˘x
.
max_°ack_size
 = 
ASN__DEFAULT_STACK_MAX
;

155 
›t_codec_˘x
 = &
s_codec_˘x
;

159 
	`mem£t
(&
pd
, 0, (pd));

160 
pd
.
buf„r
 = (c⁄° 
uöt8_t
 *)buffer;

161 
pd
.
nboff
 = 
skù_bôs
;

162 
pd
.
nbôs
 = 8 * 
size
 - 
unu£d_bôs
;

163 if(
pd
.
nboff
 >Öd.
nbôs
)

164 
ASN__DECODE_FAILED
;

169 if(!
td
->
›
->
≠î_decodî
)

170 
ASN__DECODE_FAILED
;

171 
rvÆ
 = 
td
->
›
->
	`≠î_decodî
(
›t_codec_˘x
,Åd, 0, 
•å
, &
pd
);

172 if(
rvÆ
.
code
 =
RC_OK
) {

174 
rvÆ
.
c⁄sumed
 = ((
pd
.
buf„r
 - (c⁄° 
uöt8_t
 *)buffer) << 3)

175 + 
pd
.
nboff
 - 
skù_bôs
;

176 
	`ASN_DEBUG
("PER decoding consumed %zu, counted %zu",

177 
rvÆ
.
c⁄sumed
, 
pd
.
moved
);

178 
	`as£π
(
rvÆ
.
c⁄sumed
 =
pd
.
moved
);

181 
rvÆ
.
c⁄sumed
 = 0;

183  
rvÆ
;

184 
	}
}

	@per_encoder.c

1 
	~<a¢_≠∂iˇti⁄.h
>

2 
	~<a¢_öã∫Æ.h
>

3 
	~<≥r_ícodî.h
>

5 
_u≥r_ícode_Êush_ouç
(
a¢_≥r_ouç_t
 *
po
);

8 
	$ign‹e_ouçut
(c⁄° *
d©a
, 
size_t
 
size
, *
≠p_key
) {

9 ()
d©a
;

10 ()
size
;

11 ()
≠p_key
;

13 
	}
}

15 
a¢_íc_rvÆ_t


16 
	$u≥r_ícode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

17 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

18 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

19 
a¢_≥r_ouç_t
 
po
;

20 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

25 if(!
td
 || !td->
›
->
u≥r_ícodî
)

26 
ASN__ENCODE_FAILED
;

28 
po
.
buf„r
 =Öo.
tmp•a˚
;

29 
po
.
nboff
 = 0;

30 
po
.
nbôs
 = 8 * ’o.
tmp•a˚
);

31 
po
.
ouçut
 = 
cb
 ? cb : 
ign‹e_ouçut
;

32 
po
.
›_key
 = 
≠p_key
;

33 
po
.
Êushed_byãs
 = 0;

35 
î
 = 
td
->
›
->
	`u≥r_ícodî
—d, 
c⁄°øöts
, 
•å
, &
po
);

36 if(
î
.
ícoded
 != -1) {

37 
size_t
 
bôs_to_Êush
;

39 
bôs_to_Êush
 = ((
po
.
buf„r
 -Öo.
tmp•a˚
Ë<< 3Ë+Öo.
nboff
;

42 
î
.
ícoded
 = (
po
.
Êushed_byãs
 << 3Ë+ 
bôs_to_Êush
;

44 if(
	`_u≥r_ícode_Êush_ouç
(&
po
)Ë
ASN__ENCODE_FAILED
;

47  
î
;

48 
	}
}

53 
	síc_to_buf_¨g
 {

54 *
	mbuf„r
;

55 
size_t
 
	mÀ·
;

56 } 
	tíc_to_buf_¨g
;

57 
	$ícode_to_buf„r_cb
(c⁄° *
buf„r
, 
size_t
 
size
, *
key
) {

58 
íc_to_buf_¨g
 *
¨g
 = (íc_to_buf_¨g *)
key
;

60 if(
¨g
->
À·
 < 
size
)

63 
	`mem˝y
(
¨g
->
buf„r
, buf„r, 
size
);

64 
¨g
->
buf„r
 = ((*Ôrg->buf„rË+ 
size
;

65 
¨g
->
À·
 -
size
;

68 
	}
}

70 
a¢_íc_rvÆ_t


71 
	$u≥r_ícode_to_buf„r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

72 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

73 c⁄° *
•å
, *
buf„r
, 
size_t
 
buf„r_size
) {

74 
íc_to_buf_¨g
 
key
;

76 
key
.
buf„r
 = buffer;

77 
key
.
À·
 = 
buf„r_size
;

79 if(
td
Ë
	`ASN_DEBUG
("Encodög \"%s\" usög UNALIGNED PER",Åd->
«me
);

81  
	`u≥r_ícode
(
td
, 
c⁄°øöts
, 
•å
, 
ícode_to_buf„r_cb
, &
key
);

82 
	}
}

84 
	síc_dyn_¨g
 {

85 *
	mbuf„r
;

86 
size_t
 
	mÀngth
;

87 
size_t
 
	mÆloˇãd
;

88 } 
	tíc_dyn_¨g
;

90 
	$ícode_dyn_cb
(c⁄° *
buf„r
, 
size_t
 
size
, *
key
) {

91 
íc_dyn_¨g
 *
¨g
 = 
key
;

92 if(
¨g
->
Àngth
 + 
size
 >¨g->
Æloˇãd
) {

93 
size_t
 
√w_size
 = 
¨g
->
Æloˇãd
 ?árg->allocated : 8;

94 *
p
;

97 
√w_size
 <<= 2;

98 } 
¨g
->
Àngth
 + 
size
 >
√w_size
);

100 
p
 = 
	`REALLOC
(
¨g
->
buf„r
, 
√w_size
);

101 if(!
p
) {

102 
	`FREEMEM
(
¨g
->
buf„r
);

103 
	`mem£t
(
¨g
, 0, (*arg));

106 
¨g
->
buf„r
 = 
p
;

107 
¨g
->
Æloˇãd
 = 
√w_size
;

109 
	`mem˝y
(((*)
¨g
->
buf„r
Ë+árg->
Àngth
, buf„r, 
size
);

110 
¨g
->
Àngth
 +
size
;

112 
	}
}

113 
ssize_t


114 
	$u≥r_ícode_to_√w_buf„r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

115 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

116 c⁄° *
•å
, **
buf„r_r
) {

117 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

118 
íc_dyn_¨g
 
key
;

120 
	`mem£t
(&
key
, 0, (key));

122 
î
 = 
	`u≥r_ícode
(
td
, 
c⁄°øöts
, 
•å
, 
ícode_dyn_cb
, &
key
);

123 
î
.
ícoded
) {

125 
	`FREEMEM
(
key
.
buf„r
);

128 
	`FREEMEM
(
key
.
buf„r
);

129 
key
.
buf„r
 = 
	`MALLOC
(1);

130 if(
key
.
buf„r
) {

131 *(*)
key
.
buf„r
 = '\0';

132 *
buf„r_r
 = 
key
.
buf„r
;

138 *
buf„r_r
 = 
key
.
buf„r
;

139 
	`ASN_DEBUG
("Com∂ëêícoded i¿%ld bôs", ()
î
.
ícoded
);

140  ((
î
.
ícoded
 + 7) >> 3);

142 
	}
}

150 
	$_u≥r_ícode_Êush_ouç
(
a¢_≥r_ouç_t
 *
po
) {

151 
uöt8_t
 *
buf
;

153 if(
po
->
nboff
 =0 &&Öo->
buf„r
 =po->
tmp•a˚
)

156 
buf
 = 
po
->
buf„r
 + (po->
nboff
 >> 3);

158 if(
po
->
nboff
 & 0x07) {

159 
buf
[0] &0xf‡<< (8 - (
po
->
nboff
 & 0x07));

160 
buf
++;

163  
po
->
	`ouçut
’o->
tmp•a˚
, 
buf
 -Öo->tmp•a˚,Öo->
›_key
);

164 
	}
}

166 
a¢_íc_rvÆ_t


167 
	$≠î_ícode_to_buf„r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

168 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

169 c⁄° *
•å
, *
buf„r
, 
size_t
 
buf„r_size
) {

170 
íc_to_buf_¨g
 
key
;

172 
key
.
buf„r
 = buffer;

173 
key
.
À·
 = 
buf„r_size
;

175 if(
td
Ë
	`ASN_DEBUG
("Encodög \"%s\" usög ALIGNED PER",Åd->
«me
);

177  
	`≠î_ícode
(
td
, 
c⁄°øöts
, 
•å
, 
ícode_to_buf„r_cb
, &
key
);

178 
	}
}

180 
ssize_t


181 
	$≠î_ícode_to_√w_buf„r
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

182 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

183 c⁄° *
•å
, **
buf„r_r
) {

184 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

185 
íc_dyn_¨g
 
key
;

187 
	`mem£t
(&
key
, 0, (key));

189 
î
 = 
	`≠î_ícode
(
td
, 
c⁄°øöts
, 
•å
, 
ícode_dyn_cb
, &
key
);

190 
î
.
ícoded
) {

192 
	`FREEMEM
(
key
.
buf„r
);

195 
	`FREEMEM
(
key
.
buf„r
);

196 
key
.
buf„r
 = 
	`MALLOC
(1);

197 if(
key
.
buf„r
) {

198 *(*)
key
.
buf„r
 = '\0';

199 *
buf„r_r
 = 
key
.
buf„r
;

205 *
buf„r_r
 = 
key
.
buf„r
;

206 
	`ASN_DEBUG
("Com∂ëêícoded i¿%ld bôs", ()
î
.
ícoded
);

207  ((
î
.
ícoded
 + 7) >> 3);

209 
	}
}

212 
	$_≠î_ícode_Êush_ouç
(
a¢_≥r_ouç_t
 *
po
) {

213 
uöt8_t
 *
buf
;

215 if(
po
->
nboff
 =0 &&Öo->
buf„r
 =po->
tmp•a˚
)

218 
buf
 = 
po
->
buf„r
 + (po->
nboff
 >> 3);

220 if(
po
->
nboff
 & 0x07) {

221 
buf
[0] &0xf‡<< (8 - (
po
->
nboff
 & 0x07));

222 
buf
++;

225 i‡(
po
->
ouçut
) {

226  
po
->
	`ouçut
’o->
tmp•a˚
, 
buf
 -Öo->tmp•a˚,Öo->
›_key
);

229 
	}
}

231 
a¢_íc_rvÆ_t


232 
	$≠î_ícode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

233 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

234 c⁄° *
•å
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
, *
≠p_key
) {

235 
a¢_≥r_ouç_t
 
po
;

236 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

241 if(!
td
 || !td->
›
->
≠î_ícodî
)

242 
ASN__ENCODE_FAILED
;

244 
po
.
buf„r
 =Öo.
tmp•a˚
;

245 
po
.
nboff
 = 0;

246 
po
.
nbôs
 = 8 * ’o.
tmp•a˚
);

247 
po
.
ouçut
 = 
cb
;

248 
po
.
›_key
 = 
≠p_key
;

249 
po
.
Êushed_byãs
 = 0;

251 
î
 = 
td
->
›
->
	`≠î_ícodî
—d, 
c⁄°øöts
, 
•å
, &
po
);

252 if(
î
.
ícoded
 != -1) {

253 
size_t
 
bôs_to_Êush
;

255 
bôs_to_Êush
 = ((
po
.
buf„r
 -Öo.
tmp•a˚
Ë<< 3Ë+Öo.
nboff
;

258 
î
.
ícoded
 = (
po
.
Êushed_byãs
 << 3Ë+ 
bôs_to_Êush
;

260 if(
	`_≠î_ícode_Êush_ouç
(&
po
))

261 
ASN__ENCODE_FAILED
;

264  
î
;

265 
	}
}

	@per_opentype.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<≥r_suµ‹t.h
>

7 
	~<c⁄°r_TYPE.h
>

8 
	~<≥r_›íty≥.h
>

10 
	su≥r_ugŸ_key
 {

11 
a¢_≥r_d©a_t
 
	mﬁdpd
;

12 
size_t
 
	mun˛aimed
;

13 
size_t
 
	mŸ_moved
;

14 
	mª≥©
;

15 } 
	tu≥r_ugŸ_key
;

17 
u≥r_ugŸ_ªfûl
(
a¢_≥r_d©a_t
 *
pd
);

18 
≥r_skù_bôs
(
a¢_≥r_d©a_t
 *
pd
, 
skù_nbôs
);

19 
a¢_dec_rvÆ_t
 
u≥r_sŸ_suck
(c⁄° 
a¢_codec_˘x_t
 *,

20 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

21 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

22 **
•å
, 
a¢_≥r_d©a_t
 *
pd
);

29 
	$u≥r_›í_ty≥_put
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

30 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, c⁄° *
•å
,

31 
a¢_≥r_ouç_t
 *
po
) {

32 *
buf
;

33 *
b±r
;

34 
ssize_t
 
size
;

36 
	`ASN_DEBUG
("O≥¿ty≥Öuà%†...", 
td
->
«me
);

38 
size
 = 
	`u≥r_ícode_to_√w_buf„r
(
td
, 
c⁄°øöts
, 
•å
, &
buf
);

39 if(
size
 <= 0)  -1;

41 
	`ASN_DEBUG
("O≥¿ty≥Öuà%†o‡Àngth %" 
ASN_PRI_SSIZE
 " + ovîhód (1byã?)", 
td
->
«me
,

42 
size
);

44 
b±r
 = 
buf
;

46 
√ed_eom
 = 0;

47 
ssize_t
 
may_ßve
 = 
	`u≥r_put_Àngth
(
po
, 
size
, &
√ed_eom
);

48 
	`ASN_DEBUG
("Pª≥ndögÜígth %" 
ASN_PRI_SSIZE


49 "Åÿ%†™dáŒowögÅÿßvê%" 
ASN_PRI_SSIZE
,

50 
size
, 
td
->
«me
, 
may_ßve
);

51 if(
may_ßve
 < 0) ;

52 if(
	`≥r_put_m™y_bôs
(
po
, 
b±r
, 
may_ßve
 * 8)) ;

53 
b±r
 = (*)b±∏+ 
may_ßve
;

54 
size
 -
may_ßve
;

55 if(
√ed_eom
 && 
	`u≥r_put_Àngth
(
po
, 0, 0)) {

56 
	`FREEMEM
(
buf
);

59 } 
size
);

61 
	`FREEMEM
(
buf
);

62 if(
size
)  -1;

65 
	}
}

67 
a¢_dec_rvÆ_t


68 
	$u≥r_›í_ty≥_gë_sim∂e
(c⁄° 
a¢_codec_˘x_t
 *
˘x
,

69 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

70 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

71 
a¢_≥r_d©a_t
 *
pd
) {

72 
a¢_dec_rvÆ_t
 
rv
;

73 
ssize_t
 
chunk_byãs
;

74 
ª≥©
;

75 
uöt8_t
 *
buf
 = 0;

76 
size_t
 
bufLí
 = 0;

77 
size_t
 
bufSize
 = 0;

78 
a¢_≥r_d©a_t
 
•d
;

79 
size_t
 
∑ddög
;

81 
	`ASN__STACK_OVERFLOW_CHECK
(
˘x
);

83 
	`ASN_DEBUG
("Gëtög o≥¿ty≥ %s...", 
td
->
«me
);

86 
chunk_byãs
 = 
	`u≥r_gë_Àngth
(
pd
, -1, 0, &
ª≥©
);

87 if(
chunk_byãs
 < 0) {

88 
	`FREEMEM
(
buf
);

89 
ASN__DECODE_STARVED
;

91 if(
bufLí
 + 
chunk_byãs
 > 
bufSize
) {

92 *
±r
;

93 
bufSize
 = 
chunk_byãs
 + (bufSize << 2);

94 
±r
 = 
	`REALLOC
(
buf
, 
bufSize
);

95 if(!
±r
) {

96 
	`FREEMEM
(
buf
);

97 
ASN__DECODE_FAILED
;

99 
buf
 = 
±r
;

101 if(
	`≥r_gë_m™y_bôs
(
pd
, 
buf
 + 
bufLí
, 0, 
chunk_byãs
 << 3)) {

102 
	`FREEMEM
(
buf
);

103 
ASN__DECODE_STARVED
;

105 
bufLí
 +
chunk_byãs
;

106 } 
ª≥©
);

108 
	`ASN_DEBUG
("Gëtög o≥¿ty≥ %†ícoded i¿%ld byãs", 
td
->
«me
,

109 ()
bufLí
);

111 
	`mem£t
(&
•d
, 0, (spd));

112 
•d
.
buf„r
 = 
buf
;

113 
•d
.
nbôs
 = 
bufLí
 << 3;

115 
	`ASN_DEBUG_INDENT_ADD
(+4);

116 
rv
 = 
td
->
›
->
	`u≥r_decodî
(
˘x
,Åd, 
c⁄°øöts
, 
•å
, &
•d
);

117 
	`ASN_DEBUG_INDENT_ADD
(-4);

119 if(
rv
.
code
 =
RC_OK
) {

121 
∑ddög
 = 
•d
.
nbôs
 - spd.
nboff
;

122 i‡(((
∑ddög
 > 0 &&Öadding < 8) ||

124 (
•d
.
nboff
 =0 && spd.
nbôs
 =8 && spd.
buf„r
 =
buf
)) &&

125 
	`≥r_gë_„w_bôs
(&
•d
, 
∑ddög
) == 0) {

127 
	`FREEMEM
(
buf
);

128  
rv
;

130 
	`FREEMEM
(
buf
);

131 if(
∑ddög
 >= 8) {

132 
	`ASN_DEBUG
("Toÿœrgê∑ddög %d i¿›íÅy≥", ()
∑ddög
);

133 
ASN__DECODE_FAILED
;

135 
	`ASN_DEBUG
("NoÖadding");

138 
	`FREEMEM
(
buf
);

140 
rv
.
code
 = 
RC_FAIL
;

143  
rv
;

144 
	}
}

146 
a¢_dec_rvÆ_t
 
CC_NOTUSED


147 
	$u≥r_›í_ty≥_gë_com∂ex
(c⁄° 
a¢_codec_˘x_t
 *
˘x
,

148 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

149 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

150 
a¢_≥r_d©a_t
 *
pd
) {

151 
u≥r_ugŸ_key
 
¨g
;

152 
a¢_dec_rvÆ_t
 
rv
;

153 
ssize_t
 
∑ddög
;

155 
	`ASN__STACK_OVERFLOW_CHECK
(
˘x
);

157 
	`ASN_DEBUG
("Gëtög o≥¿ty≥ %†‰om %s", 
td
->
«me
,

158 
	`a¢_bô_d©a_°rög
(
pd
));

159 
¨g
.
ﬁdpd
 = *
pd
;

160 
¨g
.
un˛aimed
 = 0;

161 
¨g
.
Ÿ_moved
 = 0;

162 
¨g
.
ª≥©
 = 1;

163 
pd
->
ªfûl
 = 
u≥r_ugŸ_ªfûl
;

164 
pd
->
ªfûl_key
 = &
¨g
;

165 
pd
->
nbôs
 =Öd->
nboff
;

166 
pd
->
moved
 = 0;

168 
	`ASN_DEBUG_INDENT_ADD
(+4);

169 
rv
 = 
td
->
›
->
	`u≥r_decodî
(
˘x
,Åd, 
c⁄°øöts
, 
•å
, 
pd
);

170 
	`ASN_DEBUG_INDENT_ADD
(-4);

172 
	#UPDRESTOREPD
 do { \

174 
pd
->
nbôs
 = 
¨g
.
ﬁdpd
.nbô†- (pd->
moved
 -árg.
Ÿ_moved
); \

175 
pd
->
moved
 = 
¨g
.
ﬁdpd
.moved + (pd->moved -árg.
Ÿ_moved
); \

176 
pd
->
ªfûl
 = 
¨g
.
ﬁdpd
.refill; \

177 
pd
->
ªfûl_key
 = 
¨g
.
ﬁdpd
.refill_key; \

178 } 0)

	)

180 if(
rv
.
code
 !
RC_OK
) {

181 
UPDRESTOREPD
;

182  
rv
;

185 
	`ASN_DEBUG
("O≥nTy≥ %†pd%†ﬁd%†un˛aimed=%d,Ñïót=%d", 
td
->
«me
,

186 
	`a¢_bô_d©a_°rög
(
pd
),

187 
	`a¢_bô_d©a_°rög
(&
¨g
.
ﬁdpd
),

188 ()
¨g
.
un˛aimed
, (Ôrg.
ª≥©
);

190 
∑ddög
 = 
pd
->
moved
 % 8;

191 if(
∑ddög
) {

192 
öt32_t
 
pvÆue
;

193 if(
∑ddög
 > 7) {

194 
	`ASN_DEBUG
("TooÜargeÖadding %d in openÅype",

195 ()
∑ddög
);

196 
rv
.
code
 = 
RC_FAIL
;

197 
UPDRESTOREPD
;

198  
rv
;

200 
∑ddög
 = 8 -Öadding;

201 
	`ASN_DEBUG
("GëtögÖaddög o‡%d bôs", ()
∑ddög
);

202 
pvÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
∑ddög
);

203 
pvÆue
) {

205 
	`ASN_DEBUG
("Padding skip failed");

206 
UPDRESTOREPD
;

207 
ASN__DECODE_STARVED
;

210 
	`ASN_DEBUG
("Non-blankÖadding (%d bits 0x%02x)",

211 ()
∑ddög
, ()
pvÆue
);

212 
UPDRESTOREPD
;

213 
ASN__DECODE_FAILED
;

216 if(
pd
->
nboff
 !pd->
nbôs
) {

217 
	`ASN_DEBUG
("O≥¿ty≥ %†ovîhódÖd%†ﬁd%s", 
td
->
«me
,

218 
	`a¢_bô_d©a_°rög
(
pd
),á¢_bô_d©a_°rög(&
¨g
.
ﬁdpd
));

220 
UPDRESTOREPD
;

221 
ASN__DECODE_FAILED
;

223 
¨g
.
un˛aimed
 +
pd
->
nbôs
 -Öd->
nboff
;

228 
UPDRESTOREPD
;

231 if(
¨g
.
un˛aimed
) {

232 
	`ASN_DEBUG
("Gëtög un˛aimed %d", ()
¨g
.
un˛aimed
);

233 
	`≥r_skù_bôs
(
pd
, 
¨g
.
un˛aimed
)) {

235 
	`ASN_DEBUG
("Cœim o‡%d faûed", ()
¨g
.
un˛aimed
);

236 
ASN__DECODE_STARVED
;

238 
	`ASN_DEBUG
("GŸ cœim o‡%d", ()
¨g
.
un˛aimed
);

242 
	`ASN_DEBUG
("Non-blank unconsumedÖadding");

243 
ASN__DECODE_FAILED
;

245 
¨g
.
un˛aimed
 = 0;

248 if(
¨g
.
ª≥©
) {

249 
	`ASN_DEBUG
("Not consumedÅhe wholeÅhing");

250 
rv
.
code
 = 
RC_FAIL
;

251  
rv
;

254  
rv
;

255 
	}
}

258 
a¢_dec_rvÆ_t


259 
	$u≥r_›í_ty≥_gë
(c⁄° 
a¢_codec_˘x_t
 *
˘x
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

260 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

261 
a¢_≥r_d©a_t
 *
pd
) {

262  
	`u≥r_›í_ty≥_gë_sim∂e
(
˘x
, 
td
, 
c⁄°øöts
, 
•å
, 
pd
);

263 
	}
}

266 
	$u≥r_›í_ty≥_skù
(c⁄° 
a¢_codec_˘x_t
 *
˘x
, 
a¢_≥r_d©a_t
 *
pd
) {

267 
a¢_TYPE_des¸ùt‹_t
 
s_td
;

268 
a¢_TYPE_›î©i⁄_t
 
s_›
;

269 
a¢_dec_rvÆ_t
 
rv
;

271 
s_td
.
«me
 = "<unknownÉxtension>";

272 
s_td
.
›
 = &
s_›
;

273 
s_›
.
u≥r_decodî
 = 
u≥r_sŸ_suck
;

275 
rv
 = 
	`u≥r_›í_ty≥_gë
(
˘x
, &
s_td
, 0, 0, 
pd
);

276 if(
rv
.
code
 !
RC_OK
)

280 
	}
}

286 
a¢_dec_rvÆ_t


287 
	$u≥r_sŸ_suck
(c⁄° 
a¢_codec_˘x_t
 *
˘x
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

288 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
,

289 
a¢_≥r_d©a_t
 *
pd
) {

290 
a¢_dec_rvÆ_t
 
rv
;

292 ()
˘x
;

293 ()
td
;

294 ()
c⁄°øöts
;

295 ()
•å
;

297 
	`≥r_gë_„w_bôs
(
pd
, 1) >= 0);

299 
rv
.
code
 = 
RC_OK
;

300 
rv
.
c⁄sumed
 = 
pd
->
moved
;

302  
rv
;

303 
	}
}

306 
	$u≥r_ugŸ_ªfûl
(
a¢_≥r_d©a_t
 *
pd
) {

307 
u≥r_ugŸ_key
 *
¨g
 = 
pd
->
ªfûl_key
;

308 
ssize_t
 
√xt_chunk_byãs
, 
√xt_chunk_bôs
;

309 
ssize_t
 
avaû
;

311 
a¢_≥r_d©a_t
 *
ﬁdpd
 = &
¨g
->oldpd;

313 
	`ASN_DEBUG
("REFILLINGÖd->moved=%ld, oldpd->moved=%ld",

314 ()
pd
->
moved
, ()
ﬁdpd
->moved);

317 
ﬁdpd
->
buf„r
 = 
pd
->buffer;

318 
ﬁdpd
->
nboff
 = 
pd
->nboff;

319 
ﬁdpd
->
nbôs
 -
pd
->
moved
 - 
¨g
->
Ÿ_moved
;

320 
ﬁdpd
->
moved
 +
pd
->moved - 
¨g
->
Ÿ_moved
;

321 
¨g
->
Ÿ_moved
 = 
pd
->
moved
;

323 if(
¨g
->
un˛aimed
) {

325 if(
	`≥r_gë_„w_bôs
(
ﬁdpd
, 1))

327 if(
ﬁdpd
->
nboff
 == 0) {

328 
	`as£π
(0);

331 
pd
->
buf„r
 = 
ﬁdpd
->buffer;

332 
pd
->
nboff
 = 
ﬁdpd
->nboff - 1;

333 
pd
->
nbôs
 = 
ﬁdpd
->nbits;

334 
	`ASN_DEBUG
("UNCLAIMED <-Ñeturn from (pd->moved=%ld)",

335 ()
pd
->
moved
);

339 if(!
¨g
->
ª≥©
) {

340 
	`ASN_DEBUG
("Want more butÑefill doesn't have it");

344 
√xt_chunk_byãs
 = 
	`u≥r_gë_Àngth
(
ﬁdpd
, -1, 0, &
¨g
->
ª≥©
);

345 
	`ASN_DEBUG
("OpenÅype LENGTH %ld bytesát off %ld,Ñepeat %ld",

346 ()
√xt_chunk_byãs
, ()
ﬁdpd
->
moved
, ()
¨g
->
ª≥©
);

347 if(
√xt_chunk_byãs
 < 0)  -1;

348 if(
√xt_chunk_byãs
 == 0) {

349 
pd
->
ªfûl
 = 0;

350 
	`as£π
(!
¨g
->
ª≥©
);

352 
√xt_chunk_bôs
 = 
√xt_chunk_byãs
 << 3;

353 
avaû
 = 
ﬁdpd
->
nbôs
 - oldpd->
nboff
;

354 if(
avaû
 >
√xt_chunk_bôs
) {

355 
pd
->
nbôs
 = 
ﬁdpd
->
nboff
 + 
√xt_chunk_bôs
;

356 
¨g
->
un˛aimed
 = 0;

357 
	`ASN_DEBUG
("!+Parent frame %ld bits,álloting %ld [%ld..%ld] (%ld)",

358 ()
√xt_chunk_bôs
, ()
ﬁdpd
->
moved
,

359 ()
ﬁdpd
->
nboff
, ()ﬁdpd->
nbôs
,

360 ()(
ﬁdpd
->
nbôs
 - oldpd->
nboff
));

362 
pd
->
nbôs
 = 
ﬁdpd
->nbits;

363 
¨g
->
un˛aimed
 = 
√xt_chunk_bôs
 - 
avaû
;

364 
	`ASN_DEBUG
("!-Parent frame %ld,Ñequire %ld, will claim %ld",

365 ()
avaû
, ()
√xt_chunk_bôs
,

366 ()
¨g
->
un˛aimed
);

368 
pd
->
buf„r
 = 
ﬁdpd
->buffer;

369 
pd
->
nboff
 = 
ﬁdpd
->nboff;

370 
	`ASN_DEBUG
("RefilledÖd%s old%s",

371 
	`a¢_bô_d©a_°rög
(
pd
),á¢_bô_d©a_°rög(
ﬁdpd
));

373 
	}
}

376 
	$≥r_skù_bôs
(
a¢_≥r_d©a_t
 *
pd
, 
skù_nbôs
) {

377 
hasN⁄ZîoBôs
 = 0;

378 
skù_nbôs
 > 0) {

379 
skù
;

382 if(
skù_nbôs
 < 24)

383 
skù
 = 
skù_nbôs
;

385 
skù
 = 24;

386 
skù_nbôs
 -
skù
;

388 
	`≥r_gë_„w_bôs
(
pd
, 
skù
)) {

391 : 
hasN⁄ZîoBôs
 = 1; ;

394  
hasN⁄ZîoBôs
;

395 
	}
}

397 
a¢_dec_rvÆ_t


398 
	$≠î_›í_ty≥_gë_sim∂e
(c⁄° 
a¢_codec_˘x_t
 *
˘x
,

399 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

400 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
, **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

401 
a¢_dec_rvÆ_t
 
rv
;

402 
ssize_t
 
chunk_byãs
;

403 
ª≥©
;

404 
uöt8_t
 *
buf
 = 0;

405 
size_t
 
bufLí
 = 0;

406 
size_t
 
bufSize
 = 0;

407 
a¢_≥r_d©a_t
 
•d
;

408 
size_t
 
∑ddög
;

410 
	`ASN__STACK_OVERFLOW_CHECK
(
˘x
);

412 
	`ASN_DEBUG
("Gëtög o≥¿ty≥ %s...", 
td
->
«me
);

415 
chunk_byãs
 = 
	`≠î_gë_Àngth
(
pd
, -1, -1, &
ª≥©
);

416 if(
chunk_byãs
 < 0) {

417 
	`FREEMEM
(
buf
);

418 
ASN__DECODE_STARVED
;

420 if(
bufLí
 + 
chunk_byãs
 > 
bufSize
) {

421 *
±r
;

422 
bufSize
 = 
chunk_byãs
 + (bufSize << 2);

423 
±r
 = 
	`REALLOC
(
buf
, 
bufSize
);

424 if(!
±r
) {

425 
	`FREEMEM
(
buf
);

426 
ASN__DECODE_FAILED
;

428 
buf
 = 
±r
;

430 if(
	`≥r_gë_m™y_bôs
(
pd
, 
buf
 + 
bufLí
, 0, 
chunk_byãs
 << 3)) {

431 
	`FREEMEM
(
buf
);

432 
ASN__DECODE_STARVED
;

434 
bufLí
 +
chunk_byãs
;

435 } 
ª≥©
);

437 
	`ASN_DEBUG
("Gëtög o≥¿ty≥ %†ícoded i¿%ld byãs", 
td
->
«me
,

438 ()
bufLí
);

440 
	`mem£t
(&
•d
, 0, (spd));

441 
•d
.
buf„r
 = 
buf
;

442 
•d
.
nbôs
 = 
bufLí
 << 3;

444 
	`ASN_DEBUG_INDENT_ADD
(+4);

445 
rv
 = 
td
->
›
->
	`≠î_decodî
(
˘x
,Åd, 
c⁄°øöts
, 
•å
, &
•d
);

446 
	`ASN_DEBUG_INDENT_ADD
(-4);

448 if(
rv
.
code
 =
RC_OK
) {

450 
∑ddög
 = 
•d
.
nbôs
 - spd.
nboff
;

451 i‡(((
∑ddög
 > 0 &&Öadding < 8) ||

453 (
•d
.
nboff
 =0 && spd.
nbôs
 =8 && spd.
buf„r
 =
buf
)) &&

454 
	`≥r_gë_„w_bôs
(&
•d
, 
∑ddög
) == 0) {

456 
	`FREEMEM
(
buf
);

457  
rv
;

459 
	`FREEMEM
(
buf
);

460 if(
∑ddög
 >= 8) {

461 
	`ASN_DEBUG
("Toÿœrgê∑ddög %d i¿›íÅy≥", ()
∑ddög
);

462 
ASN__DECODE_FAILED
;

464 
	`ASN_DEBUG
("NoÖadding");

467 
	`FREEMEM
(
buf
);

469 
rv
.
code
 = 
RC_FAIL
;

472  
rv
;

473 
	}
}

476 
	$≠î_›í_ty≥_put
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

477 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

478 c⁄° *
•å
, 
a¢_≥r_ouç_t
 *
po
) {

479 *
buf
;

480 *
b±r
;

481 
ssize_t
 
size
;

482 
size_t
 
toGo
;

484 
	`ASN_DEBUG
("O≥¿ty≥Öuà%†...", 
td
->
«me
);

486 
size
 = 
	`≠î_ícode_to_√w_buf„r
(
td
, 
c⁄°øöts
, 
•å
, &
buf
);

487 if(
size
 <= 0)  -1;

489 
b±r
 = 
buf
, 
toGo
 = 
size
;ÅoGo;) {

490 
ssize_t
 
maySave
 = 
	`≠î_put_Àngth
(
po
, -1, 
toGo
);

491 if(
maySave
 < 0) ;

492 if(
	`≥r_put_m™y_bôs
(
po
, 
b±r
, 
maySave
 * 8)) ;

493 
b±r
 = (*)b±∏+ 
maySave
;

494 
toGo
 -
maySave
;

497 
	`FREEMEM
(
buf
);

498 if(
toGo
)  -1;

500 
	`ASN_DEBUG
("OpenÅypeÖut %s ofÜength %ld + overhead (1byte?)",

501 
td
->
«me
, 
size
);

504 
	}
}

506 
a¢_dec_rvÆ_t


507 
	$≠î_›í_ty≥_gë
(c⁄° 
a¢_codec_˘x_t
 *
˘x
,

508 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
,

509 c⁄° 
a¢_≥r_c⁄°øöts_t
 *
c⁄°øöts
,

510 **
•å
, 
a¢_≥r_d©a_t
 *
pd
) {

512  
	`≠î_›í_ty≥_gë_sim∂e
(
˘x
, 
td
, 
c⁄°øöts
, 
•å
, 
pd
);

513 
	}
}

516 
	$≠î_›í_ty≥_skù
(c⁄° 
a¢_codec_˘x_t
 *
˘x
, 
a¢_≥r_d©a_t
 *
pd
) {

517 
a¢_TYPE_des¸ùt‹_t
 
s_td
;

518 
a¢_dec_rvÆ_t
 
rv
;

519 
a¢_TYPE_›î©i⁄_t
 
›_t
;

521 
	`mem£t
(&
›_t
, 0, (op_t));

522 
s_td
.
«me
 = "<unknownÉxtension>";

523 
s_td
.
›
 = &
›_t
;

524 
s_td
.
›
->
≠î_decodî
 = 
u≥r_sŸ_suck
;

526 
rv
 = 
	`≠î_›í_ty≥_gë
(
˘x
, &
s_td
, 0, 0, 
pd
);

527 if(
rv
.
code
 !
RC_OK
)

531 
	}
}

	@per_support.c

5 
	~<a¢_sy°em.h
>

6 
	~<a¢_öã∫Æ.h
>

7 
	~<≥r_suµ‹t.h
>

13 
ssize_t


14 
	$u≥r_gë_Àngth
(
a¢_≥r_d©a_t
 *
pd
, 
ebôs
, 
size_t
 
lowî_bound
,

15 *
ª≥©
) {

16 
ssize_t
 
vÆue
;

18 *
ª≥©
 = 0;

21 if(
ebôs
 >= 0 &&Ébits <= 16) {

22 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
ebôs
);

23 if(
vÆue
 >0ËvÆuê+
lowî_bound
;

24  
vÆue
;

27 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 8);

28 if((
vÆue
 & 0x80) == 0) {

29  (
vÆue
 & 0x7F);

30 } if((
vÆue
 & 0x40) == 0) {

32 
vÆue
 = ((vÆuê& 0x3fË<< 8Ë| 
	`≥r_gë_„w_bôs
(
pd
, 8);

33  
vÆue
;

34 } if(
vÆue
 < 0) {

35 
	`ASN_DEBUG
("END of streamÑeached for PER");

38 
vÆue
 &= 0x3f;

39 if(
vÆue
 < 1 || value > 4) {

42 *
ª≥©
 = 1;

43  (16384 * 
vÆue
);

44 
	}
}

51 
ssize_t


52 
	$u≥r_gë_n¶ígth
(
a¢_≥r_d©a_t
 *
pd
) {

53 
ssize_t
 
Àngth
;

55 
	`ASN_DEBUG
("GettingÇormally smallÜength");

57 if(
	`≥r_gë_„w_bôs
(
pd
, 1) == 0) {

58 
Àngth
 = 
	`≥r_gë_„w_bôs
(
pd
, 6) + 1;

59 if(
Àngth
 <= 0)  -1;

60 
	`ASN_DEBUG
("l=%d", ()
Àngth
);

61  
Àngth
;

63 
ª≥©
;

64 
Àngth
 = 
	`u≥r_gë_Àngth
(
pd
, -1, 0, &
ª≥©
);

65 if(
Àngth
 >0 && !
ª≥©
) Üength;

68 
	}
}

74 
ssize_t


75 
	$u≥r_gë_n¢nwn
(
a¢_≥r_d©a_t
 *
pd
) {

76 
ssize_t
 
vÆue
;

78 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 7);

79 if(
vÆue
 & 64) {

80 
vÆue
 &= 63;

81 
vÆue
 <<= 2;

82 
vÆue
 |
	`≥r_gë_„w_bôs
(
pd
, 2);

83 if(
vÆue
 & 128)

85 if(
vÆue
 == 0)

87 if(
vÆue
 >= 3)

89 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 8 * value);

90  
vÆue
;

93  
vÆue
;

94 
	}
}

101 
	$u≥r_put_n¢nwn
(
a¢_≥r_ouç_t
 *
po
, 
n
) {

102 
byãs
;

104 if(
n
 <= 63) {

105 if(
n
 < 0)  -1;

106  
	`≥r_put_„w_bôs
(
po
, 
n
, 7);

108 if(
n
 < 256)

109 
byãs
 = 1;

110 if(
n
 < 65536)

111 
byãs
 = 2;

112 if(
n
 < 256 * 65536)

113 
byãs
 = 3;

116 if(
	`≥r_put_„w_bôs
(
po
, 
byãs
, 8))

119  
	`≥r_put_„w_bôs
(
po
, 
n
, 8 * 
byãs
);

120 
	}
}

124 
	$u≥r_gë_c⁄°øöed_whﬁe_numbî
(
a¢_≥r_d©a_t
 *
pd
, *
out_vÆue
, 
nbôs
) {

125 
lhÆf
;

126 
hÆf
;

128 if(
nbôs
 <= 31) {

129 
hÆf
 = 
	`≥r_gë_„w_bôs
(
pd
, 
nbôs
);

130 if(
hÆf
 < 0)  -1;

131 *
out_vÆue
 = 
hÆf
;

135 if((
size_t
)
nbôs
 > 8 * (*
out_vÆue
))

138 
hÆf
 = 
	`≥r_gë_„w_bôs
(
pd
, 31);

139 if(
hÆf
 < 0)  -1;

141 if(
	`u≥r_gë_c⁄°øöed_whﬁe_numbî
(
pd
, &
lhÆf
, 
nbôs
 - 31))

144 *
out_vÆue
 = (()
hÆf
 << (
nbôs
 - 31)Ë| 
lhÆf
;

146 
	}
}

151 
	$u≥r_put_c⁄°øöed_whﬁe_numbî_u
(
a¢_≥r_ouç_t
 *
po
, 
v
,

152 
nbôs
) {

153 if(
nbôs
 <= 31) {

154  
	`≥r_put_„w_bôs
(
po
, 
v
, 
nbôs
);

157 if(
	`u≥r_put_c⁄°øöed_whﬁe_numbî_u
(
po
, 
v
 >> 31, 
nbôs
 - 31))

159  
	`≥r_put_„w_bôs
(
po
, 
v
, 31);

161 
	}
}

167 
ssize_t


168 
	$u≥r_put_Àngth
(
a¢_≥r_ouç_t
 *
po
, 
size_t
 
Àngth
, *
√ed_eom
) {

169 
dummy
 = 0;

170 if(!
√ed_eom
Ë√ed_eom = &
dummy
;

172 if(
Àngth
 <= 127) {

173 *
√ed_eom
 = 0;

174  
	`≥r_put_„w_bôs
(
po
, 
Àngth
, 8)

175 ? -1 : (
ssize_t
)
Àngth
;

176 } if(
Àngth
 < 16384) {

177 *
√ed_eom
 = 0;

178  
	`≥r_put_„w_bôs
(
po
, 
Àngth
|0x8000, 16)

179 ? -1 : (
ssize_t
)
Àngth
;

182 *
√ed_eom
 = 0 =(
Àngth
 & 16383);

183 
Àngth
 >>= 14;

184 if(
Àngth
 > 4) {

185 *
√ed_eom
 = 0;

186 
Àngth
 = 4;

189  
	`≥r_put_„w_bôs
(
po
, 0xC0 | 
Àngth
, 8)

190 ? -1 : (
ssize_t
)(
Àngth
 << 14);

192 
	}
}

201 
	$u≥r_put_n¶ígth
(
a¢_≥r_ouç_t
 *
po
, 
size_t
 
Àngth
) {

202 if(
Àngth
 <= 64) {

204 if(
Àngth
 == 0)  -1;

205  
	`≥r_put_„w_bôs
(
po
, 
Àngth
 - 1, 7) ? -1 : 0;

207 
√ed_eom
 = 0;

208 if(
	`u≥r_put_Àngth
(
po
, 
Àngth
, &
√ed_eom
Ë!(
ssize_t
)length

209 || 
√ed_eom
) {

216 
	}
}

219 
	$≥r__l⁄g_ønge
(
lb
, 
ub
, *
ønge_r
) {

220 
bounds_ønge
;

221 if((
ub
 < 0Ë=(
lb
 < 0)) {

222 
bounds_ønge
 = 
ub
 - 
lb
;

223 } if(
lb
 < 0) {

224 
	`as£π
(
ub
 >= 0);

225 
bounds_ønge
 = 1 + (()
ub
 + ()-(
lb
 + 1));

227 
	`as£π
(!"Unreachable");

230 *
ønge_r
 = 
bounds_ønge
;

232 
	}
}

235 
	$≥r_l⁄g_ønge_ªba£
(
v
, 
lb
, 
ub
, *
ouçut
) {

236 
ønge
;

238 
	`as£π
(
lb
 <
ub
);

240 if(
v
 < 
lb
 || v > 
ub
 || 
	`≥r__l⁄g_ønge
÷b, ub, &
ønge
) < 0) {

252 if((
v
 < 0Ë=(
lb
 < 0)) {

253 *
ouçut
 = 
v
-
lb
;

255 } if(
v
 < 0) {

256 
ªba£d
 = 1 + ()-(
v
+1Ë+ ()
lb
;

257 
	`as£π
(
ªba£d
 <
ønge
);

258 *
ouçut
 = 
ªba£d
;

260 } if(
lb
 < 0) {

261 
ªba£d
 = 1 + ()-(
lb
+1Ë+ ()
v
;

262 
	`as£π
(
ªba£d
 <
ønge
);

263 *
ouçut
 = 
ªba£d
;

266 
	`as£π
(!"Unreachable");

269 
	}
}

272 
	$≥r_l⁄g_ønge_uƒeba£
(
öp
, 
lb
, 
ub
, *
ouç
) {

273 
ønge
;

275 if(
	`≥r__l⁄g_ønge
(
lb
, 
ub
, &
ønge
) != 0) {

279 if(
öp
 > 
ønge
) {

288 if(
öp
 <
LONG_MAX
) {

289 *
ouç
 = ()
öp
 + 
lb
;

291 *
ouç
 = (
lb
 + 
LONG_MAX
 + 1Ë+ ()((
öp
 - LONG_MAX) - 1);

295 
	}
}

297 
öt32_t


298 
	$≠î_gë_Æign
(
a¢_≥r_d©a_t
 *
pd
) {

300 if(
pd
->
nboff
 & 0x7) {

301 
	`ASN_DEBUG
("Alignög %ld bôs", 8 - (()
pd
->
nboff
 & 0x7));

302  
	`≥r_gë_„w_bôs
(
pd
, 8 - (pd->
nboff
 & 0x7));

305 
	}
}

307 
ssize_t


308 
	$≠î_gë_Àngth
(
a¢_≥r_d©a_t
 *
pd
, 
ønge
, 
ebôs
, *
ª≥©
) {

309 
ssize_t
 
vÆue
;

311 *
ª≥©
 = 0;

314 i‡(
ebôs
 >= 0) {

315 i‡(
ønge
 <= 65536 &&Ñange >= 0)

316  
	`≠î_gë_n¢nwn
(
pd
, 
ønge
);

319 i‡(
	`≠î_gë_Æign
(
pd
) < 0)

322 if(
ebôs
 >0Ë 
	`≥r_gë_„w_bôs
(
pd
,Ébits);

324 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 8);

325 if(
vÆue
 < 0)  -1;

326 if((
vÆue
 & 128) == 0)

327  (
vÆue
 & 0x7F);

328 if((
vÆue
 & 64) == 0) {

329 
vÆue
 = ((vÆuê& 63Ë<< 8Ë| 
	`≥r_gë_„w_bôs
(
pd
, 8);

330 if(
vÆue
 < 0)  -1;

331  
vÆue
;

333 
vÆue
 &= 63;

334 if(
vÆue
 < 1 || value > 4)

336 *
ª≥©
 = 1;

337  (16384 * 
vÆue
);

338 
	}
}

340 
ssize_t


341 
	$≠î_gë_n¶ígth
(
a¢_≥r_d©a_t
 *
pd
) {

342 
ssize_t
 
Àngth
;

344 
	`ASN_DEBUG
("GettingÇormally smallÜength");

346 if(
	`≥r_gë_„w_bôs
(
pd
, 1) == 0) {

347 
Àngth
 = 
	`≥r_gë_„w_bôs
(
pd
, 6) + 1;

348 if(
Àngth
 <= 0)  -1;

349 
	`ASN_DEBUG
("l=%ld", 
Àngth
);

350  
Àngth
;

352 
ª≥©
;

353 
Àngth
 = 
	`≠î_gë_Àngth
(
pd
, -1, -1, &
ª≥©
);

354 if(
Àngth
 >0 && !
ª≥©
) Üength;

357 
	}
}

359 
ssize_t


360 
	$≠î_gë_n¢nwn
(
a¢_≥r_d©a_t
 *
pd
, 
ønge
) {

361 
ssize_t
 
vÆue
;

362 
byãs
 = 0;

364 
	`ASN_DEBUG
("gëtögÇ¢nw¿wôhÑ™gê%d", 
ønge
);

366 if(
ønge
 <= 255) {

367 
i
;

369 i‡(
ønge
 < 0)  -1;

371 
i
 = 1; i <= 8; i++) {

372 
uµî
 = 1 << 
i
;

373 i‡(
uµî
 >
ønge
)

376 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 
i
);

377  
vÆue
;

378 } i‡(
ønge
 == 256){

380 
byãs
 = 1;

381 } i‡(
ønge
 <= 65536) {

383 
byãs
 = 2;

387 i‡(
	`≠î_gë_Æign
(
pd
) < 0)

389 
vÆue
 = 
	`≥r_gë_„w_bôs
(
pd
, 8 * 
byãs
);

390  
vÆue
;

391 
	}
}

393 
	$≠î_put_Æign
(
a¢_≥r_ouç_t
 *
po
) {

395 if(
po
->
nboff
 & 0x7) {

396 
	`ASN_DEBUG
("Alignög %ld bôs", 8 - (()
po
->
nboff
 & 0x7));

397 if(
	`≥r_put_„w_bôs
(
po
, 0x00, (8 - (po->
nboff
 & 0x7))))

401 
	}
}

403 
ssize_t


404 
	$≠î_put_Àngth
(
a¢_≥r_ouç_t
 *
po
, 
ønge
, 
size_t
 
Àngth
) {

406 
	`ASN_DEBUG
("APERÖuàÀngth %zu wôhÑ™gê%d", 
Àngth
, 
ønge
);

409 i‡(
ønge
 <= 65536 &&Ñange >= 0)

410  
	`≠î_put_n¢nwn
(
po
, 
ønge
, 
Àngth
);

412 i‡(
	`≠î_put_Æign
(
po
) < 0)

415 if(
Àngth
 <= 127) {

416  
	`≥r_put_„w_bôs
(
po
, 
Àngth
, 8)

417 ? -1 : (
ssize_t
)
Àngth
;

419 if(
Àngth
 < 16384)

420  
	`≥r_put_„w_bôs
(
po
, 
Àngth
|0x8000, 16)

421 ? -1 : (
ssize_t
)
Àngth
;

423 
Àngth
 >>= 14;

424 if(
Àngth
 > 4)Üength = 4;

426  
	`≥r_put_„w_bôs
(
po
, 0xC0 | 
Àngth
, 8)

427 ? -1 : (
ssize_t
)(
Àngth
 << 14);

428 
	}
}

432 
	$≠î_put_n¶ígth
(
a¢_≥r_ouç_t
 *
po
, 
size_t
 
Àngth
) {

434 if(
Àngth
 <= 64) {

436 if(
Àngth
 == 0)  -1;

437  
	`≥r_put_„w_bôs
(
po
, 
Àngth
-1, 7) ? -1 : 0;

439 if(
	`≠î_put_Àngth
(
po
, -1, 
Àngth
Ë!(
ssize_t
)length) {

446 
	}
}

449 
	$≠î_put_n¢nwn
(
a¢_≥r_ouç_t
 *
po
, 
ønge
, 
numbî
) {

450 
byãs
;

452 
	`ASN_DEBUG
("≠îÖuàn¢nw¿%d wôhÑ™gê%d", 
numbî
, 
ønge
);

454 if(
ønge
 < 0) {

455 
i
;

456 
i
 = 1; ; i++) {

457 
bôs
 = 1 << (8 * 
i
);

458 i‡(
numbî
 <
bôs
)

461 
byãs
 = 
i
;

462 
	`as£π
(
i
 <= 4);

464 if(
ønge
 <= 255) {

465 
i
;

466 
i
 = 1; i <= 8; i++) {

467 
bôs
 = 1 << 
i
;

468 i‡(
ønge
 <
bôs
)

471  
	`≥r_put_„w_bôs
(
po
, 
numbî
, 
i
);

472 } if(
ønge
 == 256) {

473 
byãs
 = 1;

474 } if(
ønge
 <= 65536) {

475 
byãs
 = 2;

477 
i
;

478 
i
 = 1; ; i++) {

479 
bôs
 = 1 << (8 * 
i
);

480 i‡(
ønge
 <
bôs
)

483 
	`as£π
(
i
 <= 4);

484 
byãs
 = 
i
;

486 if(
	`≠î_put_Æign
(
po
) < 0)

491  
	`≥r_put_„w_bôs
(
po
, 
numbî
, 8 * 
byãs
);

492 
	}
}

	@xer_decoder.c

5 
	~<a¢_≠∂iˇti⁄.h
>

6 
	~<a¢_öã∫Æ.h
>

7 
	~<xî_suµ‹t.h
>

13 
a¢_dec_rvÆ_t


14 
	$xî_decode
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

15 c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, **
°ru˘_±r
,

16 c⁄° *
buf„r
, 
size_t
 
size
) {

17 
a¢_codec_˘x_t
 
s_codec_˘x
;

23 if(
›t_codec_˘x
) {

24 if(
›t_codec_˘x
->
max_°ack_size
) {

25 
s_codec_˘x
 = *
›t_codec_˘x
;

26 
›t_codec_˘x
 = &
s_codec_˘x
;

30 
	`mem£t
(&
s_codec_˘x
, 0, (s_codec_ctx));

31 
s_codec_˘x
.
max_°ack_size
 = 
ASN__DEFAULT_STACK_MAX
;

32 
›t_codec_˘x
 = &
s_codec_˘x
;

38  
td
->
›
->
	`xî_decodî
(
›t_codec_˘x
,Åd, 
°ru˘_±r
, 0, 
buf„r
, 
size
);

39 
	}
}

43 
	sxî__cb_¨g
 {

44 
pxml_chunk_ty≥_e
 
	mchunk_ty≥
;

45 
size_t
 
	mchunk_size
;

46 c⁄° *
	mchunk_buf
;

47 
	mˇŒback_nŸ_övoked
;

51 
	$xî__tokí_cb
(
pxml_chunk_ty≥_e
 
ty≥
, c⁄° *
_chunk_d©a
, 
size_t
 
_chunk_size
, *
key
) {

52 
xî__cb_¨g
 *
¨g
 = (xî__cb_¨g *)
key
;

53 
¨g
->
chunk_ty≥
 = 
ty≥
;

54 
¨g
->
chunk_size
 = 
_chunk_size
;

55 
¨g
->
chunk_buf
 = 
_chunk_d©a
;

56 
¨g
->
ˇŒback_nŸ_övoked
 = 0;

58 
	}
}

63 
ssize_t


64 
	$xî_√xt_tokí
(*
°©eC⁄ãxt
, c⁄° *
buf„r
, 
size_t
 
size
, 
pxî_chunk_ty≥_e
 *
ch_ty≥
) {

65 
xî__cb_¨g
 
¨g
;

66 
√w_°©eC⁄ãxt
 = *
°©eC⁄ãxt
;

67 
ssize_t
 
ªt
;

69 
¨g
.
ˇŒback_nŸ_övoked
 = 1;

70 
ªt
 = 
	`pxml_∑r£
(&
√w_°©eC⁄ãxt
, 
buf„r
, 
size
, 
xî__tokí_cb
, &
¨g
);

71 if(
ªt
 < 0)  -1;

72 if(
¨g
.
ˇŒback_nŸ_övoked
) {

73 
	`as£π
(
ªt
 == 0);

74 *
ch_ty≥
 = 
PXER_WMORE
;

77 
	`as£π
(
¨g
.
chunk_size
);

78 
	`as£π
(
¨g
.
chunk_buf
 =
buf„r
);

84 
¨g
.
chunk_ty≥
) {

85 
PXML_TEXT
:

86 *
ch_ty≥
 = 
PXER_TEXT
;

88 
PXML_TAG
:

89 *
ch_ty≥
 = 
PXER_WMORE
;

91 
PXML_TAG_END
:

92 *
ch_ty≥
 = 
PXER_TAG
;

94 
PXML_COMMENT
:

95 
PXML_COMMENT_END
:

96 *
ch_ty≥
 = 
PXER_COMMENT
;

100 *
°©eC⁄ãxt
 = 
√w_°©eC⁄ãxt
;

101  
¨g
.
chunk_size
;

102 
	}
}

104 
	#CSLASH
 0x2‡

	)

105 
	#LANGLE
 0x3¯

	)

106 
	#RANGLE
 0x3ê

	)

108 
xî_check_èg_e


109 
	$xî_check_èg
(c⁄° *
buf_±r
, 
size
, c⁄° *
√ed_èg
) {

110 c⁄° *
buf
 = (c⁄° *)
buf_±r
;

111 c⁄° *
íd
;

112 
xî_check_èg_e
 
˘
 = 
XCT_OPENING
;

114 if(
size
 < 2 || 
buf
[0] !
LANGLE
 || buf[size-1] !
RANGLE
) {

115 if(
size
 >= 2)

116 
	`ASN_DEBUG
("Broken XMLÅag: \"%c...%c\"",

117 
buf
[0], buf[
size
 - 1]);

118  
XCT_BROKEN
;

124 if(
buf
[1] =
CSLASH
) {

125 
buf
 += 2;

126 
size
 -= 3;

127 
˘
 = 
XCT_CLOSING
;

128 if(
size
 > 0 && 
buf
[size-1] =
CSLASH
)

129  
XCT_BROKEN
;

131 
buf
++;

132 
size
 -= 2;

133 if(
size
 > 0 && 
buf
[size-1] =
CSLASH
) {

134 
˘
 = 
XCT_BOTH
;

135 
size
--;

140 if(!
√ed_èg
 || !*need_tag)

141  (
xî_check_èg_e
)(
XCT__UNK__MASK
 | 
˘
);

146 
íd
 = 
buf
 + 
size
; bu‡<Énd; buf++, 
√ed_èg
++) {

147 
b
 = *
buf
, 
n
 = *
√ed_èg
;

148 if(
b
 !
n
) {

149 if(
n
 == 0) {

150 
b
) {

154  
˘
;

157  (
xî_check_èg_e
)(
XCT__UNK__MASK
 | 
˘
);

159 if(
b
 == 0)

160  
XCT_BROKEN
;

162 if(*
√ed_èg
)

163  (
xî_check_èg_e
)(
XCT__UNK__MASK
 | 
˘
);

165  
˘
;

166 
	}
}

169 #unde‡
ADVANCE


170 
	#ADVANCE
(
num_byãs
) do { \

171 
size_t
 
num
 = (
num_byãs
); \

172 
buf_±r
 = ((c⁄° *)buf_±rË+ 
num
; \

173 
size
 -
num
; \

174 
c⁄sumed_my£lf
 +
num
; \

175 } 0)

	)

177 #unde‡
RETURN


178 
	#RETURN
(
_code
) do { \

179 
rvÆ
.
code
 = 
_code
; \

180 
rvÆ
.
c⁄sumed
 = 
c⁄sumed_my£lf
; \

181 if(
rvÆ
.
code
 !
RC_OK
) \

182 
	`ASN_DEBUG
("Faûed wôh %d", 
rvÆ
.
code
); \

183  
rvÆ
; \

184 } 0)

	)

186 
	#XER_GOT_BODY
(
chunk_buf
, 
chunk_size
, 
size
) do { \

187 
ssize_t
 
c⁄vîãd_size
 = 
body_ª˚ivî
 \

188 (
°ru˘_key
, 
chunk_buf
, 
chunk_size
, \

189 (
size_t
)
chunk_size
 < 
size
); \

190 if(
c⁄vîãd_size
 =-1Ë
	`RETURN
(
RC_FAIL
); \

191 if(
c⁄vîãd_size
 == 0 \

192 && 
size
 =(
size_t
)
chunk_size
) \

193 
	`RETURN
(
RC_WMORE
); \

194 
chunk_size
 = 
c⁄vîãd_size
; \

195 } 0)

	)

196 
	#XER_GOT_EMPTY
() do { \

197 if(
	`body_ª˚ivî
(
°ru˘_key
, 0, 0, 
size
 > 0) == -1) \

198 
	`RETURN
(
RC_FAIL
); \

199 } 0)

	)

204 
a¢_dec_rvÆ_t


205 
xî_decode_gíîÆ
(c⁄° 
a¢_codec_˘x_t
 *
›t_codec_˘x
,

206 
a¢_°ru˘_˘x_t
 *
˘x
,

207 *
°ru˘_key
,

208 c⁄° *
xml_èg
,

209 c⁄° *
buf_±r
, 
size_t
 
size
,

210 (*
›t_u√x≥˘ed_èg_decodî
)

211 (*
°ru˘_key
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
),

212 
	$ssize_t
 (*
body_ª˚ivî
)

213 (*
°ru˘_key
, c⁄° *
chunk_buf
, 
size_t
 
chunk_size
,

214 
have_m‹e
)

217 
a¢_dec_rvÆ_t
 
rvÆ
;

218 
ssize_t
 
c⁄sumed_my£lf
 = 0;

220 ()
›t_codec_˘x
;

227 if(
˘x
->
pha£
 > 1Ë
	`RETURN
(
RC_FAIL
);

229 
pxî_chunk_ty≥_e
 
ch_ty≥
;

230 
ssize_t
 
ch_size
;

231 
xî_check_èg_e
 
tcv
;

236 
ch_size
 = 
	`xî_√xt_tokí
(&
˘x
->
c⁄ãxt
, 
buf_±r
, 
size
,

237 &
ch_ty≥
);

238 if(
ch_size
 == -1) {

239 
	`RETURN
(
RC_FAIL
);

241 
ch_ty≥
) {

242 
PXER_WMORE
:

243 
	`RETURN
(
RC_WMORE
);

244 
PXER_COMMENT
:

245 
	`ADVANCE
(
ch_size
);

247 
PXER_TEXT
:

248 if(
˘x
->
pha£
 == 0) {

256 
	`XER_GOT_BODY
(
buf_±r
, 
ch_size
, 
size
);

258 
	`ADVANCE
(
ch_size
);

260 
PXER_TAG
:

265 
	`as£π
(
ch_ty≥
 =
PXER_TAG
 && 
size
);

267 
tcv
 = 
	`xî_check_èg
(
buf_±r
, 
ch_size
, 
xml_èg
);

275 
tcv
) {

276 
XCT_BOTH
:

277 if(
˘x
->
pha£
) ;

279 
	`XER_GOT_EMPTY
();

280 
	`ADVANCE
(
ch_size
);

281 
˘x
->
pha£
 = 2;

282 
	`RETURN
(
RC_OK
);

283 
XCT_OPENING
:

284 if(
˘x
->
pha£
) ;

285 
	`ADVANCE
(
ch_size
);

286 
˘x
->
pha£
 = 1;

288 
XCT_CLOSING
:

289 if(!
˘x
->
pha£
) ;

290 
	`ADVANCE
(
ch_size
);

291 
˘x
->
pha£
 = 2;

292 
	`RETURN
(
RC_OK
);

293 
XCT_UNKNOWN_BO
:

297 if(
›t_u√x≥˘ed_èg_decodî


298 && 
	`›t_u√x≥˘ed_èg_decodî
(
°ru˘_key
,

299 
buf_±r
, 
ch_size
) >= 0) {

301 
	`ADVANCE
(
ch_size
);

302 if(!
˘x
->
pha£
) {

305 
˘x
->
pha£
 = 2;

306 
	`RETURN
(
RC_OK
);

315 
	`ASN_DEBUG
("U√x≥˘ed XMLÅag (ex≥˘ed \"%s\")", 
xml_èg
);

319 
	`RETURN
(
RC_FAIL
);

320 
	}
}

323 
size_t


324 
	$xî_whôe•a˚_•™
(c⁄° *
chunk_buf
, 
size_t
 
chunk_size
) {

325 c⁄° *
p
 = (c⁄° *)
chunk_buf
;

326 c⁄° *
≥nd
 = 
p
 + 
chunk_size
;

328 ; 
p
 < 
≥nd
;Ö++) {

329 *
p
) {

343  (
p
 - (c⁄° *)
chunk_buf
);

344 
	}
}

350 
	$xî_skù_unknown
(
xî_check_èg_e
 
tcv
, 
bî_év_Àn_t
 *
dïth
) {

351 
	`as£π
(*
dïth
 > 0);

352 
tcv
) {

353 
XCT_BOTH
:

354 
XCT_UNKNOWN_BO
:

357 
XCT_OPENING
:

358 
XCT_UNKNOWN_OP
:

359 ++(*
dïth
);

361 
XCT_CLOSING
:

362 
XCT_UNKNOWN_CL
:

363 if(--(*
dïth
) == 0)

364  (
tcv
 =
XCT_CLOSING
) ? 2 : 1;

369 
	}
}

	@xer_encoder.c

5 
	~<a¢_öã∫Æ.h
>

6 
	~<°dio.h
>

7 
	~<î∫o.h
>

12 
a¢_íc_rvÆ_t


13 
	$xî_ícode
(c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
,

14 
xî_ícodî_Êags_e
 
xî_Êags
, 
a¢_≠p_c⁄sume_byãs_f
 *
cb
,

15 *
≠p_key
) {

16 
a¢_íc_rvÆ_t
 
î
 = {0, 0, 0};

17 
a¢_íc_rvÆ_t
 
tm≥r
;

18 c⁄° *
m«me
;

19 
size_t
 
mÀn
;

20 
xˇn
 = (
xî_Êags
 & 
XER_F_CANONICAL
) ? 1 : 2;

22 if(!
td
 || !
•å
Ë
cb_Áûed
;

24 
m«me
 = 
td
->
xml_èg
;

25 
mÀn
 = 
	`°æí
(
m«me
);

27 
	`ASN__CALLBACK3
("<", 1, 
m«me
, 
mÀn
, ">", 1);

29 
tm≥r
 = 
td
->
›
->
	`xî_ícodî
—d, 
•å
, 1, 
xî_Êags
, 
cb
, 
≠p_key
);

30 if(
tm≥r
.
ícoded
 == -1) Åmper;

31 
î
.
ícoded
 +
tm≥r
.encoded;

33 
	`ASN__CALLBACK3
("</", 2, 
m«me
, 
mÀn
, ">\n", 
xˇn
);

35 
	`ASN__ENCODED_OK
(
î
);

36 
cb_Áûed
:

37 
ASN__ENCODE_FAILED
;

38 
	}
}

45 
	$xî__¥öt2Â
(c⁄° *
buf„r
, 
size_t
 
size
, *
≠p_key
) {

46 
FILE
 *
°ªam
 = (FILE *)
≠p_key
;

48 if(
	`fwrôe
(
buf„r
, 1, 
size
, 
°ªam
) != size)

52 
	}
}

55 
	$xî_Âröt
(
FILE
 *
°ªam
, c⁄° 
a¢_TYPE_des¸ùt‹_t
 *
td
, c⁄° *
•å
) {

56 
a¢_íc_rvÆ_t
 
î
 = {0,0,0};

58 if(!
°ªam
Ë°ªam = 
°dout
;

59 if(!
td
 || !
•å
)

62 
î
 = 
	`xî_ícode
(
td
, 
•å
, 
XER_F_BASIC
, 
xî__¥öt2Â
, 
°ªam
);

63 if(
î
.
ícoded
 == -1)

66  
	`fÊush
(
°ªam
);

67 
	}
}

69 
	sxî_buf„r
 {

70 *
	mbuf„r
;

71 
size_t
 
	mbuf„r_size
;

72 
size_t
 
	mÆloˇãd_size
;

76 
	$xî__buf„r_≠≥nd
(c⁄° *
buf„r
, 
size_t
 
size
, *
≠p_key
) {

77 
xî_buf„r
 *
xb
 = 
≠p_key
;

79 
xb
->
buf„r_size
 + 
size
 + 1 > xb->
Æloˇãd_size
) {

80 
size_t
 
√w_size
 = 2 * (
xb
->
Æloˇãd_size
 ? xb->allocated_size : 64);

81 *
√w_buf
 = 
	`MALLOC
(
√w_size
);

82 if(!
√w_buf
)  -1;

83 i‡(
xb
->
buf„r
) {

84 
	`mem˝y
(
√w_buf
, 
xb
->
buf„r
, xb->
buf„r_size
);

86 
	`FREEMEM
(
xb
->
buf„r
);

87 
xb
->
buf„r
 = 
√w_buf
;

88 
xb
->
Æloˇãd_size
 = 
√w_size
;

91 
	`mem˝y
(
xb
->
buf„r
 + xb->
buf„r_size
, buf„r, 
size
);

92 
xb
->
buf„r_size
 +
size
;

93 
xb
->
buf„r
[xb->
buf„r_size
] = '\0';

95 
	}
}

97 
xî_equivÆí˚_e


98 
	$xî_equivÆít
(c⁄° 
a¢_TYPE_des¸ùt‹_s
 *
td
, c⁄° *
°ru˘1
,

99 c⁄° *
°ru˘2
, 
FILE
 *
›t_debug_°ªam
) {

100 
xî_buf„r
 
xb1
 = {0, 0, 0};

101 
xî_buf„r
 
xb2
 = {0, 0, 0};

102 
a¢_íc_rvÆ_t
 
e1
, 
e2
;

103 
a¢_dec_rvÆ_t
 
rvÆ
;

104 *
•å
 = 
NULL
;

106 if(!
td
 || !
°ru˘1
 || !
°ru˘2
) {

107 if(
›t_debug_°ªam
) {

108 if(!
td
Ë
	`Ârötf
(
›t_debug_°ªam
, "Type descriptor missing\n");

109 if(!
°ru˘1
Ë
	`Ârötf
(
›t_debug_°ªam
, "Structure 1 missing\n");

110 if(!
°ru˘2
Ë
	`Ârötf
(
›t_debug_°ªam
, "Structure 2 missing\n");

112  
XEQ_FAILURE
;

115 
e1
 = 
	`xî_ícode
(
td
, 
°ru˘1
, 
XER_F_BASIC
, 
xî__buf„r_≠≥nd
, &
xb1
);

116 if(
e1
.
ícoded
 == -1) {

117 if(
›t_debug_°ªam
) {

118 
	`Ârötf
(
°dîr
, "XER Encodög o‡%†Áûed\n", 
td
->
«me
);

120 
	`FREEMEM
(
xb1
.
buf„r
);

121  
XEQ_ENCODE1_FAILED
;

124 
e2
 = 
	`xî_ícode
(
td
, 
°ru˘2
, 
XER_F_BASIC
, 
xî__buf„r_≠≥nd
, &
xb2
);

125 if(
e2
.
ícoded
 == -1) {

126 if(
›t_debug_°ªam
) {

127 
	`Ârötf
(
°dîr
, "XER Encodög o‡%†Áûed\n", 
td
->
«me
);

129 
	`FREEMEM
(
xb1
.
buf„r
);

130 
	`FREEMEM
(
xb2
.
buf„r
);

131  
XEQ_ENCODE1_FAILED
;

134 if(
xb1
.
buf„r_size
 !
xb2
.buffer_size

135 || 
	`memcmp
(
xb1
.
buf„r
, 
xb2
.buf„r, xb1.
buf„r_size
) != 0) {

136 if(
›t_debug_°ªam
) {

137 
	`Ârötf
(
›t_debug_°ªam
,

140 
xb1
.
buf„r
, 
xb2
.buffer);

142 
	`FREEMEM
(
xb1
.
buf„r
);

143 
	`FREEMEM
(
xb2
.
buf„r
);

144  
XEQ_DIFFERENT
;

146 if(
›t_debug_°ªam
) {

147 
	`Ârötf
(
›t_debug_°ªam
,

149 "o‡sizê%" 
ASN_PRI_SIZE
 ":\n%s",

150 
xb1
.
buf„r_size
, xb1.
buf„r
);

154 
rvÆ
 = 
	`xî_decode
(
NULL
, 
td
, (**)&
•å
, 
xb1
.
buf„r
,

155 
xb1
.
buf„r_size
);

156 
rvÆ
.
code
) {

157 
RC_OK
:

159 
RC_WMORE
:

160 if(
›t_debug_°ªam
) {

161 
	`Ârötf
(
›t_debug_°ªam
,

164 
td
->
«me
, 
xb1
.
buf„r
);

167 
RC_FAIL
:

169 if(
›t_debug_°ªam
) {

170 
	`Ârötf
(
›t_debug_°ªam
,

172 
td
->
«me
);

174 
	`ASN_STRUCT_FREE
(*
td
, 
•å
);

175 
	`FREEMEM
(
xb1
.
buf„r
);

176 
	`FREEMEM
(
xb2
.
buf„r
);

177  
XEQ_DECODE_FAILED
;

180 if(
rvÆ
.
c⁄sumed
 !
xb1
.
buf„r_size


181 && ((
rvÆ
.
c⁄sumed
 > 
xb1
.
buf„r_size
)

182 || 
	`xî_whôe•a˚_•™
(
xb1
.
buf„r
 + 
rvÆ
.
c⁄sumed
,

183 
xb1
.
buf„r_size
 - 
rvÆ
.
c⁄sumed
)

184 !(
xb1
.
buf„r_size
 - 
rvÆ
.
c⁄sumed
))) {

185 if(
›t_debug_°ªam
) {

186 
	`Ârötf
(
›t_debug_°ªam
,

187 "Round-åù decodêo‡%†ªquúedÜes†byã†(%" 
ASN_PRI_SIZE
 ")Åhan "

188 "ícoded (%" 
ASN_PRI_SIZE
 ")\n",

189 
td
->
«me
, 
rvÆ
.
c⁄sumed
, 
xb1
.
buf„r_size
);

191 
	`ASN_STRUCT_FREE
(*
td
, 
•å
);

192 
	`FREEMEM
(
xb1
.
buf„r
);

193 
	`FREEMEM
(
xb2
.
buf„r
);

194  
XEQ_ROUND_TRIP_FAILED
;

200 
	`FREEMEM
(
xb2
.
buf„r
);

201 
	`mem£t
(&
xb2
, 0, (xb2));

203 
e2
 = 
	`xî_ícode
(
td
, 
•å
, 
XER_F_BASIC
, 
xî__buf„r_≠≥nd
, &
xb2
);

204 if(
e2
.
ícoded
 == -1) {

205 if(
›t_debug_°ªam
) {

206 
	`Ârötf
(
°dîr
, "XER Encoding ofÑound-trip decode of %s failed\n",

207 
td
->
«me
);

209 
	`ASN_STRUCT_FREE
(*
td
, 
•å
);

210 
	`FREEMEM
(
xb1
.
buf„r
);

211 
	`FREEMEM
(
xb2
.
buf„r
);

212  
XEQ_ROUND_TRIP_FAILED
;

215 
	`ASN_STRUCT_FREE
(*
td
, 
•å
);

216 
•å
 = 0;

218 if(
xb1
.
buf„r_size
 !
xb2
.buffer_size

219 || 
	`memcmp
(
xb1
.
buf„r
, 
xb2
.buf„r, xb1.
buf„r_size
) != 0) {

220 if(
›t_debug_°ªam
) {

221 
	`Ârötf
(
›t_debug_°ªam
,

226 
xb1
.
buf„r
, 
xb2
.buf„r, 
td
->
«me
);

228 
	`FREEMEM
(
xb1
.
buf„r
);

229 
	`FREEMEM
(
xb2
.
buf„r
);

230  
XEQ_ROUND_TRIP_FAILED
;

233 
	`FREEMEM
(
xb1
.
buf„r
);

234 
	`FREEMEM
(
xb2
.
buf„r
);

235  
XEQ_SUCCESS
;

236 
	}
}

	@xer_support.c

7 
	~<a¢_sy°em.h
>

8 
	~<xî_suµ‹t.h
>

12 
	mST_TEXT
,

13 
	mST_TAG_START
,

14 
	mST_TAG_BODY
,

15 
	mST_TAG_QUOTE_WAIT
,

16 
	mST_TAG_QUOTED_STRING
,

17 
	mST_TAG_UNQUOTED_STRING
,

18 
	mST_COMMENT_WAIT_DASH1
,

19 
	mST_COMMENT_WAIT_DASH2
,

20 
	mST_COMMENT
,

21 
	mST_COMMENT_CLO_DASH2
,

22 
	mST_COMMENT_CLO_RT


23 } 
	tp°©e_e
;

26 
	g_ch¨˛ass
[256] = {

36 
	#WHITESPACE
(
c
Ë(
_ch¨˛ass
[()(c)] =1)

	)

37 
	#ALNUM
(
c
Ë(
_ch¨˛ass
[()(c)] >2)

	)

38 
	#ALPHA
(
c
Ë(
_ch¨˛ass
[()(c)] =3)

	)

41 
	#EXCLAM
 0x21

	)

42 
	#CQUOTE
 0x22

	)

43 
	#CDASH
 0x2d

	)

44 
	#CSLASH
 0x2‡

	)

45 
	#LANGLE
 0x3¯

	)

46 
	#CEQUAL
 0x3d

	)

47 
	#RANGLE
 0x3ê

	)

48 
	#CQUEST
 0x3‡

	)

51 
	#TOKEN_CB_CALL
(
ty≥
, 
_ns
, 
_cuºít_too
, 
_föÆ
) do { \

52 
_ªt
; \

53 
p°©e_e
 
ns
 = 
_ns
; \

54 
ssize_t
 
_sz
 = (
p
 - 
chunk_°¨t
Ë+ 
_cuºít_too
; \

55 i‡(!
_sz
) { \

57 
°©e
 = 
_ns
; \

60 
_ªt
 = 
	`cb
(
ty≥
, 
chunk_°¨t
, 
_sz
, 
key
); \

61 if(
_ªt
 < 
_sz
) { \

62 if(
_cuºít_too
 && 
_ªt
 == -1) \

63 
°©e
 = 
ns
; \

64 
föish
; \

66 
chunk_°¨t
 = 
p
 + 
_cuºít_too
; \

67 
°©e
 = 
ns
; \

68 } 0)

	)

70 
	#TOKEN_CB
(
_ty≥
, 
_ns
, 
_cuºít_too
) \

71 
	`TOKEN_CB_CALL
(
_ty≥
, 
_ns
, 
_cuºít_too
, 0)

	)

73 
	#PXML_TAG_FINAL_CHUNK_TYPE
 
PXML_TAG_END


	)

74 
	#PXML_COMMENT_FINAL_CHUNK_TYPE
 
PXML_COMMENT_END


	)

76 
	#TOKEN_CB_FINAL
(
_ty≥
, 
_ns
, 
_cuºít_too
) \

77 
	`TOKEN_CB_CALL
–
_ty≥
 ## 
_FINAL_CHUNK_TYPE
 , 
_ns
, 
_cuºít_too
, 1)

	)

82 
ssize_t
 
	$pxml_∑r£
(*
°©eC⁄ãxt
, c⁄° *
xmlbuf
, 
size_t
 
size
, 
pxml_ˇŒback_f
 *
cb
, *
key
) {

83 
p°©e_e
 
°©e
 = (p°©e_e)*
°©eC⁄ãxt
;

84 c⁄° *
chunk_°¨t
 = (c⁄° *)
xmlbuf
;

85 c⁄° *
p
 = 
chunk_°¨t
;

86 c⁄° *
íd
 = 
p
 + 
size
;

88 ; 
p
 < 
íd
;Ö++) {

89 
C
 = *(c⁄° *)
p
;

90 
°©e
) {

91 
ST_TEXT
:

96 i‡(
C
 =
LANGLE
)

98 
	`TOKEN_CB
(
PXML_TEXT
, 
ST_TAG_START
, 0);

100 
ST_TAG_START
:

101 i‡(
	`ALPHA
(
C
Ë|| (C =
CSLASH
))

102 
°©e
 = 
ST_TAG_BODY
;

103 i‡(
C
 =
EXCLAM
)

104 
°©e
 = 
ST_COMMENT_WAIT_DASH1
;

110 
	`TOKEN_CB
(
PXML_TEXT
, 
ST_TEXT
, 1);

112 
ST_TAG_BODY
:

113 
C
) {

114 
RANGLE
:

116 
	`TOKEN_CB_FINAL
(
PXML_TAG
, 
ST_TEXT
, 1);

118 
LANGLE
:

123 
	`TOKEN_CB_FINAL
(
PXML_TAG
, 
ST_TAG_START
, 0);

125 
CEQUAL
:

126 
°©e
 = 
ST_TAG_QUOTE_WAIT
;

130 
ST_TAG_QUOTE_WAIT
:

134 
C
) {

135 
CQUOTE
:

136 
°©e
 = 
ST_TAG_QUOTED_STRING
;

138 
RANGLE
:

140 
	`TOKEN_CB_FINAL
(
PXML_TAG
, 
ST_TEXT
, 1);

143 if(!
	`WHITESPACE
(
C
))

145 
°©e
 = 
ST_TAG_UNQUOTED_STRING
;

148 
ST_TAG_QUOTED_STRING
:

152 if(
C
 =
CQUOTE
) {

154 
°©e
 = 
ST_TAG_BODY
;

157 
ST_TAG_UNQUOTED_STRING
:

158 if(
C
 =
RANGLE
) {

160 
	`TOKEN_CB_FINAL
(
PXML_TAG
, 
ST_TEXT
, 1);

161 } if(
	`WHITESPACE
(
C
)) {

163 
°©e
 = 
ST_TAG_BODY
;

166 
ST_COMMENT_WAIT_DASH1
:

167 if(
C
 =
CDASH
) {

168 
°©e
 = 
ST_COMMENT_WAIT_DASH2
;

171 
°©e
 = 
ST_TAG_BODY
;

174 
ST_COMMENT_WAIT_DASH2
:

175 if(
C
 =
CDASH
) {

177 
°©e
 = 
ST_COMMENT
;

180 
°©e
 = 
ST_TAG_BODY
;

183 
ST_COMMENT
:

184 if(
C
 =
CDASH
) {

185 
°©e
 = 
ST_COMMENT_CLO_DASH2
;

188 
ST_COMMENT_CLO_DASH2
:

189 if(
C
 =
CDASH
) {

190 
°©e
 = 
ST_COMMENT_CLO_RT
;

193 
°©e
 = 
ST_COMMENT
;

196 
ST_COMMENT_CLO_RT
:

197 if(
C
 =
RANGLE
) {

198 
	`TOKEN_CB_FINAL
(
PXML_COMMENT
, 
ST_TEXT
, 1);

199 } if(
C
 =
CDASH
) {

202 
°©e
 = 
ST_COMMENT
;

211 if(
p
 - 
chunk_°¨t
) {

212 
°©e
) {

213 
ST_COMMENT
:

214 
	`TOKEN_CB
(
PXML_COMMENT
, 
°©e
, 0);

216 
ST_TEXT
:

217 
	`TOKEN_CB
(
PXML_TEXT
, 
°©e
, 0);

223 
föish
:

224 *
°©eC⁄ãxt
 = ()
°©e
;

225  
chunk_°¨t
 - (c⁄° *)
xmlbuf
;

226 
	}
}

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

50 #i‚de‡
__îr‹_t_deföed


51 
	#__îr‹_t_deföed
 1

	)

52 
	tîr‹_t
;

57 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


489 
signgam
;

492 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

493 || 
__HAVE_DISTINCT_FLOAT32
 \

494 || 
__HAVE_DISTINCT_FLOAT64
 \

495 || 
__HAVE_DISTINCT_FLOAT32X
 \

496 || 
__HAVE_DISTINCT_FLOAT64X
 \

497 || 
__HAVE_DISTINCT_FLOAT128X
)

510 #ifde‡
__NO_LONG_DOUBLE_MATH


511 #i‡
__HAVE_DISTINCT_FLOAT128


514 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

515 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

516 #ñi‡
__HAVE_DISTINCT_FLOAT128


517 #i‡
__HAVE_GENERIC_SELECTION


518 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


519 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

521 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

523 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


524 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


525 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

527 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

530 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

532 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

533 
	`_Gíîic
 ((
TG_ARG
), \

534 : 
FUNC
 ## 
f
 
ARGS
, \

535 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

536 : 
FUNC
 
ARGS
, \

537 : 
FUNC
 ## 
l
 
ARGS
, \

538 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

539 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

541 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


544 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

545 
__buûtö_choo£_ex¥
 \

546 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

547 
FUNC
 ## 
f
 
ARGS
, \

548 
__buûtö_choo£_ex¥
 \

549 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

550 
FUNC
 
ARGS
, \

551 
__buûtö_choo£_ex¥
 \

552 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

553 
FUNC
 ## 
l
 
ARGS
, \

554 
FUNC
 ## 
f128
 
ARGS
)))

	)

557 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

558 ( (
TG_ARG
) ==  () \

559 ? 
FUNC
 ## 
f
 
ARGS
 \

560 :  (
TG_ARG
) ==  () \

561 ? 
FUNC
 
ARGS
 \

562 : 
FUNC
 ## 
l
 
ARGS
)

	)

566 #ifde‡
__USE_ISOC99


571 
FP_NAN
 =

572 
	#FP_NAN
 0

	)

573 
FP_NAN
,

574 
FP_INFINITE
 =

575 
	#FP_INFINITE
 1

	)

576 
FP_INFINITE
,

577 
FP_ZERO
 =

578 
	#FP_ZERO
 2

	)

579 
FP_ZERO
,

580 
FP_SUBNORMAL
 =

581 
	#FP_SUBNORMAL
 3

	)

582 
FP_SUBNORMAL
,

583 
FP_NORMAL
 =

584 
	#FP_NORMAL
 4

	)

585 
FP_NORMAL


593 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

594 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

601 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

602 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

604 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

608 #i‡
	`__GNUC_PREREQ
 (6,0)

609 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

610 #ñi‡
deföed
 
__˝lu•lus


618 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

619 #ñi‡
	`__GNUC_PREREQ
 (4,0)

620 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

622 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

626 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


627 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

629 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

633 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


634 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

636 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

641 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


642 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

644 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

648 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

649 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


655 
	#isöf
(
x
) \

656 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

657 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

658 #ñi‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


659 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

661 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

665 
	#MATH_ERRNO
 1

	)

666 
	#MATH_ERREXCEPT
 2

	)

673 #ifde‡
__FAST_MATH__


674 
	#m©h_îrh™dlög
 0

	)

675 #ñi‡
deföed
 
__NO_MATH_ERRNO__


676 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

678 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

683 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

684 
	~<bôs/isˇn⁄iˇl.h
>

687 #i‚de‡
__˝lu•lus


688 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

697 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

698 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

699 
ölöe
 

700 
	`issig«lög
 (
__vÆ
)

702 #ifde‡
__NO_LONG_DOUBLE_MATH


703  
	`__issig«lög
 (
__vÆ
);

705  
	`__issig«lögl
 (
__vÆ
);

708 #i‡
__HAVE_DISTINCT_FLOAT128


709 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

711 
	}
}

715 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

718 #i‚de‡
__˝lu•lus


719 #ifde‡
__SUPPORT_SNAN__


720 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

722 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

726 #ifde‡
__SUPPORT_SNAN__


727 
ölöe
 

728 
iszîo
 (
__vÆ
)

730  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

732 
ölöe
 

733 
iszîo
 (
__vÆ
)

735  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

737 
ölöe
 

738 
iszîo
 (
__vÆ
)

740 #ifde‡
__NO_LONG_DOUBLE_MATH


741  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

743  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

746 #i‡
__HAVE_DISTINCT_FLOAT128


747 
ölöe
 

748 
iszîo
 (
_Flﬂt128
 
__vÆ
)

750  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

754 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


755 
iszîo
 (
__T
 
__vÆ
)

757  
__vÆ
 == 0;

764 #ifde‡
__USE_XOPEN


766 
	#MAXFLOAT
 3.40282347e+38F

	)

771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


772 
	#M_E
 2.7182818284590452354

	)

773 
	#M_LOG2E
 1.4426950408889634074

	)

774 
	#M_LOG10E
 0.43429448190325182765

	)

775 
	#M_LN2
 0.69314718055994530942

	)

776 
	#M_LN10
 2.30258509299404568402

	)

777 
	#M_PI
 3.14159265358979323846

	)

778 
	#M_PI_2
 1.57079632679489661923

	)

779 
	#M_PI_4
 0.78539816339744830962

	)

780 
	#M_1_PI
 0.31830988618379067154

	)

781 
	#M_2_PI
 0.63661977236758134308

	)

782 
	#M_2_SQRTPI
 1.12837916709551257390

	)

783 
	#M_SQRT2
 1.41421356237309504880

	)

784 
	#M_SQRT1_2
 0.70710678118654752440

	)

790 #ifde‡
__USE_GNU


791 
	#M_El
 2.718281828459045235360287471352662498L

	)

792 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

793 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

794 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

795 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

796 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

797 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

798 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

799 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

800 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

801 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

802 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

803 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

806 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


807 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

808 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

809 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

810 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

811 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

812 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

813 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

814 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

815 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

816 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

817 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

818 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

819 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

822 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


823 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

824 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

825 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

826 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

827 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

828 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

829 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

830 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

831 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

832 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

833 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

834 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

835 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

838 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


839 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

840 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

841 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

842 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

843 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

844 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

845 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

846 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

847 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

848 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

849 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

850 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

851 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

854 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


855 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

856 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

857 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

858 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

859 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

860 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

861 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

862 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

863 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

864 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

865 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

866 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

867 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

870 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


871 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

872 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

873 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

874 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

875 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

876 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

877 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

878 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

879 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

880 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

881 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

882 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

883 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

886 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


887 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

888 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

889 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

890 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

891 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

892 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

893 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

894 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

895 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

896 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

897 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

898 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

899 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

902 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


909 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


910 
	#__NO_MATH_INLINES
 1

	)

913 #ifde‡
__USE_ISOC99


914 #i‡
__GNUC_PREREQ
 (3, 1)

921 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

922 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

923 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

924 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

925 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

926 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

928 
	#isgª©î
(
x
, 
y
) \

929 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

930 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

931 
	#isgª©îequÆ
(
x
, 
y
) \

932 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

933 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

934 
	#i¶ess
(
x
, 
y
) \

935 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

936 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

937 
	#i¶es£quÆ
(
x
, 
y
) \

938 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

939 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

940 
	#i¶essgª©î
(
x
, 
y
) \

941 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

942 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

944 
	#isun‹dîed
(
x
, 
y
) \

945 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

946 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

951 #ifde‡
__USE_EXTERN_INLINES


952 
	~<bôs/m©hölöe.h
>

957 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

960 
	#_MdoubÀ_
 

	)

961 
	#__MATH_DECLARING_DOUBLE
 1

	)

962 
	#__MATH_DECLARING_FLOATN
 0

	)

963 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

964 
fun˘i⁄
 ## 
ªíå™t


	)

965 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

966 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

967 
	~<bôs/m©h-föôe.h
>

968 #unde‡
_MdoubÀ_


969 #unde‡
__MATH_DECLARING_DOUBLE


970 #unde‡
__MATH_DECLARING_FLOATN


971 #unde‡
__REDIRFROM_X


972 #unde‡
__REDIRTO_X


976 #ifde‡
__USE_ISOC99


979 
	#_MdoubÀ_
 

	)

980 
	#__MATH_DECLARING_DOUBLE
 0

	)

981 
	#__MATH_DECLARING_FLOATN
 0

	)

982 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

983 
fun˘i⁄
 ## 
f
 ## 
ªíå™t


	)

984 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

985 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

986 
	~<bôs/m©h-föôe.h
>

987 #unde‡
_MdoubÀ_


988 #unde‡
__MATH_DECLARING_DOUBLE


989 #unde‡
__MATH_DECLARING_FLOATN


990 #unde‡
__REDIRFROM_X


991 #unde‡
__REDIRTO_X


994 #ifde‡
__MATH_DECLARE_LDOUBLE


995 
	#_MdoubÀ_
 

	)

996 
	#__MATH_DECLARING_DOUBLE
 0

	)

997 
	#__MATH_DECLARING_FLOATN
 0

	)

998 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

999 
fun˘i⁄
 ## 
l
 ## 
ªíå™t


	)

1000 #ifde‡
__NO_LONG_DOUBLE_MATH


1001 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1002 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1004 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1005 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1007 
	~<bôs/m©h-föôe.h
>

1008 #unde‡
_MdoubÀ_


1009 #unde‡
__MATH_DECLARING_DOUBLE


1010 #unde‡
__MATH_DECLARING_FLOATN


1011 #unde‡
__REDIRFROM_X


1012 #unde‡
__REDIRTO_X


1019 #i‡(
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)) \

1020 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1021 
	#_MdoubÀ_
 
_Flﬂt16


	)

1022 
	#__MATH_DECLARING_DOUBLE
 0

	)

1023 
	#__MATH_DECLARING_FLOATN
 1

	)

1024 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1025 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t


	)

1026 #i‡
__HAVE_DISTINCT_FLOAT16


1027 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1028 
__
 ## 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t
 ## 
_föôe


	)

1032 
	~<bôs/m©h-föôe.h
>

1033 #unde‡
_MdoubÀ_


1034 #unde‡
__MATH_DECLARING_DOUBLE


1035 #unde‡
__MATH_DECLARING_FLOATN


1036 #unde‡
__REDIRFROM_X


1037 #unde‡
__REDIRTO_X


1040 #i‡(
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)) \

1041 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1042 
	#_MdoubÀ_
 
_Flﬂt32


	)

1043 
	#__MATH_DECLARING_DOUBLE
 0

	)

1044 
	#__MATH_DECLARING_FLOATN
 1

	)

1045 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1046 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t


	)

1047 #i‡
__HAVE_DISTINCT_FLOAT32


1048 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1049 
__
 ## 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t
 ## 
_föôe


	)

1051 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1052 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

1054 
	~<bôs/m©h-föôe.h
>

1055 #unde‡
_MdoubÀ_


1056 #unde‡
__MATH_DECLARING_DOUBLE


1057 #unde‡
__MATH_DECLARING_FLOATN


1058 #unde‡
__REDIRFROM_X


1059 #unde‡
__REDIRTO_X


1062 #i‡(
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)) \

1063 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1064 
	#_MdoubÀ_
 
_Flﬂt64


	)

1065 
	#__MATH_DECLARING_DOUBLE
 0

	)

1066 
	#__MATH_DECLARING_FLOATN
 1

	)

1067 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1068 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t


	)

1069 #i‡
__HAVE_DISTINCT_FLOAT64


1070 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1071 
__
 ## 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t
 ## 
_föôe


	)

1073 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1074 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1076 
	~<bôs/m©h-föôe.h
>

1077 #unde‡
_MdoubÀ_


1078 #unde‡
__MATH_DECLARING_DOUBLE


1079 #unde‡
__MATH_DECLARING_FLOATN


1080 #unde‡
__REDIRFROM_X


1081 #unde‡
__REDIRTO_X


1084 #i‡(
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)) \

1085 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1086 
	#_MdoubÀ_
 
_Flﬂt128


	)

1087 
	#__MATH_DECLARING_DOUBLE
 0

	)

1088 
	#__MATH_DECLARING_FLOATN
 1

	)

1089 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1090 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t


	)

1091 #i‡
__HAVE_DISTINCT_FLOAT128


1092 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1093 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1095 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1096 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1098 
	~<bôs/m©h-föôe.h
>

1099 #unde‡
_MdoubÀ_


1100 #unde‡
__MATH_DECLARING_DOUBLE


1101 #unde‡
__MATH_DECLARING_FLOATN


1102 #unde‡
__REDIRFROM_X


1103 #unde‡
__REDIRTO_X


1106 #i‡(
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)) \

1107 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1108 
	#_MdoubÀ_
 
_Flﬂt32x


	)

1109 
	#__MATH_DECLARING_DOUBLE
 0

	)

1110 
	#__MATH_DECLARING_FLOATN
 1

	)

1111 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1112 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t


	)

1113 #i‡
__HAVE_DISTINCT_FLOAT32X


1114 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1115 
__
 ## 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t
 ## 
_föôe


	)

1117 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1118 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1120 
	~<bôs/m©h-föôe.h
>

1121 #unde‡
_MdoubÀ_


1122 #unde‡
__MATH_DECLARING_DOUBLE


1123 #unde‡
__MATH_DECLARING_FLOATN


1124 #unde‡
__REDIRFROM_X


1125 #unde‡
__REDIRTO_X


1128 #i‡(
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)) \

1129 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1130 
	#_MdoubÀ_
 
_Flﬂt64x


	)

1131 
	#__MATH_DECLARING_DOUBLE
 0

	)

1132 
	#__MATH_DECLARING_FLOATN
 1

	)

1133 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1134 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t


	)

1135 #i‡
__HAVE_DISTINCT_FLOAT64X


1136 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1137 
__
 ## 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t
 ## 
_föôe


	)

1138 #ñi‡
__HAVE_FLOAT64X_LONG_DOUBLE


1139 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1140 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1142 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1143 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1145 
	~<bôs/m©h-föôe.h
>

1146 #unde‡
_MdoubÀ_


1147 #unde‡
__MATH_DECLARING_DOUBLE


1148 #unde‡
__MATH_DECLARING_FLOATN


1149 #unde‡
__REDIRFROM_X


1150 #unde‡
__REDIRTO_X


1153 #i‡(
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)) \

1154 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1155 
	#_MdoubÀ_
 
_Flﬂt128x


	)

1156 
	#__MATH_DECLARING_DOUBLE
 0

	)

1157 
	#__MATH_DECLARING_FLOATN
 1

	)

1158 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1159 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t


	)

1160 #i‡
__HAVE_DISTINCT_FLOAT128X


1161 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1162 
__
 ## 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t
 ## 
_föôe


	)

1166 
	~<bôs/m©h-föôe.h
>

1167 #unde‡
_MdoubÀ_


1168 #unde‡
__MATH_DECLARING_DOUBLE


1169 #unde‡
__MATH_DECLARING_FLOATN


1170 #unde‡
__REDIRFROM_X


1171 #unde‡
__REDIRTO_X


1176 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

1179 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1180 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1181 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1182 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1183 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1184 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1186 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1191 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1192 
	#i£qsig
(
x
, 
y
) \

1193 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1206 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1208 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1210 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1212  
	`__i£qsigf
 (
__x
, 
__y
);

1216 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1218 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1220  
	`__i£qsig
 (
__x
, 
__y
);

1224 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1226 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1228 #i‚de‡
__NO_LONG_DOUBLE_MATH


1229  
	`__i£qsigl
 (
__x
, 
__y
);

1231  
	`__i£qsig
 (
__x
, 
__y
);

1236 #i‡
__HAVE_DISTINCT_FLOAT128


1237 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1239 
	`__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
	`throw
 ()

1241  
	`__i£qsigf128
 (
__x
, 
__y
);

1246 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1247 
ölöe
 

1248 
	`i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
	`throw
 ()

1250 #i‡
__˝lu•lus
 >= 201103L

1251 
	`de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1253 
	`__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1255  
__i£qsig_ty≥
<
_T3
>::
	`__ˇŒ
 (
__x
, 
__y
);

1258 
	}
}

1263 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	~<bôs/ty≥s/__FILE.h
>

37 
	~<bôs/ty≥s/FILE.h
>

39 
	#_STDIO_USES_IOSTREAM


	)

41 
	~<bôs/libio.h
>

43 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


44 #ifde‡
__GNUC__


45 #i‚de‡
_VA_LIST_DEFINED


46 
_G_va_li°
 
	tva_li°
;

47 
	#_VA_LIST_DEFINED


	)

50 
	~<°d¨g.h
>

54 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


55 #i‚de‡
__off_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__off_t
 
	toff_t
;

59 
__off64_t
 
	toff_t
;

61 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

69 #ifde‡
__USE_XOPEN2K8


70 #i‚de‡
__ssize_t_deföed


71 
__ssize_t
 
	tssize_t
;

72 
	#__ssize_t_deföed


	)

77 #i‚de‡
__USE_FILE_OFFSET64


78 
_G_Âos_t
 
	tÂos_t
;

80 
_G_Âos64_t
 
	tÂos_t
;

82 #ifde‡
__USE_LARGEFILE64


83 
_G_Âos64_t
 
	tÂos64_t
;

87 
	#_IOFBF
 0

	)

88 
	#_IOLBF
 1

	)

89 
	#_IONBF
 2

	)

93 #i‚de‡
BUFSIZ


94 
	#BUFSIZ
 
_IO_BUFSIZ


	)

100 #i‚de‡
EOF


101 
	#EOF
 (-1)

	)

107 
	#SEEK_SET
 0

	)

108 
	#SEEK_CUR
 1

	)

109 
	#SEEK_END
 2

	)

110 #ifde‡
__USE_GNU


111 
	#SEEK_DATA
 3

	)

112 
	#SEEK_HOLE
 4

	)

116 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


118 
	#P_tmpdú
 "/tmp"

	)

131 
	~<bôs/°dio_lim.h
>

135 
_IO_FILE
 *
°dö
;

136 
_IO_FILE
 *
°dout
;

137 
_IO_FILE
 *
°dîr
;

139 
	#°dö
 
°dö


	)

140 
	#°dout
 
°dout


	)

141 
	#°dîr
 
°dîr


	)

144 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

146 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

148 #ifde‡
__USE_ATFILE


150 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

151 c⁄° *
__√w
Ë
__THROW
;

158 #i‚de‡
__USE_FILE_OFFSET64


159 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

161 #ifde‡
__REDIRECT


162 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

164 
	#tmpfûe
 
tmpfûe64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

173 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

175 #ifde‡
__USE_MISC


178 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


190 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

191 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

199 
	`f˛o£
 (
FILE
 *
__°ªam
);

204 
	`fÊush
 (
FILE
 *
__°ªam
);

206 #ifde‡
__USE_MISC


213 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

216 #ifde‡
__USE_GNU


223 
	`f˛o£Æl
 ();

227 #i‚de‡
__USE_FILE_OFFSET64


232 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

233 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

238 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

239 c⁄° *
__ª°ri˘
 
__modes
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

242 #ifde‡
__REDIRECT


243 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

244 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

245 
__wur
;

246 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

249 
__wur
;

251 
	#f›í
 
f›í64


	)

252 
	#‰e›í
 
‰e›í64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

257 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

258 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

259 c⁄° *
__ª°ri˘
 
__modes
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

263 #ifdef 
__USE_POSIX


265 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

268 #ifdef 
__USE_GNU


271 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

272 c⁄° *
__ª°ri˘
 
__modes
,

273 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

276 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

278 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

279 
__THROW
 
__wur
;

284 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

290 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

294 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

295 
__modes
, 
size_t
 
__n
Ë
__THROW
;

297 #ifdef 
__USE_MISC


300 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

301 
size_t
 
__size
Ë
__THROW
;

304 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

312 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

313 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

318 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

320 
	$•rötf
 (*
__ª°ri˘
 
__s
,

321 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

327 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

328 
_G_va_li°
 
__¨g
);

333 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

335 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

336 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

338 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


340 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

341 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

342 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

344 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

345 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

346 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

349 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

352 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

353 
_G_va_li°
 
__¨g
)

354 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

355 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

356 c⁄° *
__ª°ri˘
 
__fmt
, ...)

357 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

358 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

359 c⁄° *
__ª°ri˘
 
__fmt
, ...)

360 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

363 #ifde‡
__USE_XOPEN2K8


365 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

366 
_G_va_li°
 
__¨g
)

367 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

368 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

369 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

377 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

378 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

383 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

385 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

386 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

388 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

389 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

390 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

391 #ifde‡
__REDIRECT


395 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

396 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

397 
__isoc99_fsˇnf
Ë
__wur
;

398 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

399 
__isoc99_sˇnf
Ë
__wur
;

400 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

401 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

402 
__isoc99_ssˇnf
);

404 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

405 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

406 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

407 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

409 
	#fsˇnf
 
__isoc99_fsˇnf


	)

410 
	#sˇnf
 
__isoc99_sˇnf


	)

411 
	#ssˇnf
 
__isoc99_ssˇnf


	)

415 #ifdef 
__USE_ISOC99


420 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

421 
_G_va_li°
 
__¨g
)

422 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

428 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

429 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

432 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

433 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

434 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

436 #i‡!
deföed
 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
vfsˇnf
,

444 (
FILE
 *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

446 
__isoc99_vfsˇnf
)

447 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

448 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

449 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

450 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

451 
	`__REDIRECT_NTH
 (
vssˇnf
,

452 (c⁄° *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
,

454 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

455 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

457 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

458 c⁄° *
__ª°ri˘
 
__f‹m©
,

459 
_G_va_li°
 
__¨g
Ë
__wur
;

460 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

461 
_G_va_li°
 
__¨g
Ë
__wur
;

462 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

463 c⁄° *
__ª°ri˘
 
__f‹m©
,

464 
_G_va_li°
 
__¨g
Ë
__THROW
;

465 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

466 
	#vsˇnf
 
__isoc99_vsˇnf


	)

467 
	#vssˇnf
 
__isoc99_vssˇnf


	)

477 
	`fgëc
 (
FILE
 *
__°ªam
);

478 
	`gëc
 (
FILE
 *
__°ªam
);

484 
	`gëch¨
 ();

488 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

490 #ifde‡
__USE_POSIX199506


495 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

496 
	`gëch¨_u∆ocked
 ();

499 #ifde‡
__USE_MISC


506 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

517 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

518 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

524 
	`putch¨
 (
__c
);

528 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
_G_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 #ifde‡
__USE_EXTERN_INLINES


859 
	~<bôs/°dio.h
>

861 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


862 
	~<bôs/°dio2.h
>

864 #ifde‡
__LDBL_COMPAT


865 
	~<bôs/°dio-ldbl.h
>

868 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

541 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

542 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

549 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

550 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

552 #ifde‡
__USE_GNU


558 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

559 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

563 
	$‰ì
 (*
__±r
Ë
__THROW
;

565 #ifde‡
__USE_MISC


566 
	~<Æloˇ.h
>

569 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

570 || 
deföed
 
__USE_MISC


572 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

575 #ifde‡
__USE_XOPEN2K


577 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

581 #ifde‡
__USE_ISOC11


583 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

584 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

588 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

592 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

594 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


596 #ifde‡
__˝lu•lus


597 "C++" 
	$©_quick_exô
 ((*
__func
) ())

598 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

600 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #ifdef 
__USE_MISC


607 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

614 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

616 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


620 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

623 #ifde‡
__USE_ISOC99


626 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

631 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_GNU


636 *
	$£cuª_gëív
 (c⁄° *
__«me
)

637 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


644 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

647 #ifde‡
__USE_XOPEN2K


650 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

651 
__THROW
 
	`__n⁄nuŒ
 ((2));

654 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifdef 
__USE_MISC


661 
	$˛óªnv
 (Ë
__THROW
;

665 #i‡
deföed
 
__USE_MISC
 \

666 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

672 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


684 #i‚de‡
__USE_FILE_OFFSET64


685 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

687 #ifde‡
__REDIRECT


688 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

689 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

691 
	#mk°emp
 
mk°emp64


	)

694 #ifde‡
__USE_LARGEFILE64


695 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

699 #ifde‡
__USE_MISC


706 #i‚de‡
__USE_FILE_OFFSET64


707 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

711 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

713 
	#mk°emps
 
mk°emps64


	)

716 #ifde‡
__USE_LARGEFILE64


717 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

718 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_XOPEN2K8


728 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

731 #ifde‡
__USE_GNU


738 #i‚de‡
__USE_FILE_OFFSET64


739 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__REDIRECT


742 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

743 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

745 
	#mko°emp
 
mko°emp64


	)

748 #ifde‡
__USE_LARGEFILE64


749 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

758 #i‚de‡
__USE_FILE_OFFSET64


759 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

760 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

762 #ifde‡
__REDIRECT


763 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

764 
__Êags
), 
mko°emps64
)

765 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

767 
	#mko°emps
 
mko°emps64


	)

770 #ifde‡
__USE_LARGEFILE64


771 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

772 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

781 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

784 #ifdef 
__USE_GNU


787 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


797 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

798 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

803 #i‚de‡
__COMPAR_FN_T


804 
	#__COMPAR_FN_T


	)

805 (*
	t__com∑r_‚_t
) (const *, const *);

807 #ifdef 
__USE_GNU


808 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

811 #ifde‡
__USE_GNU


812 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

817 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

818 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

819 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

821 #ifde‡
__USE_EXTERN_INLINES


822 
	~<bôs/°dlib-b£¨ch.h
>

827 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

828 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

829 #ifde‡
__USE_GNU


830 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

832 
	`__n⁄nuŒ
 ((1, 4));

837 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

838 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

840 #ifde‡
__USE_ISOC99


841 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

842 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
div_t
 
	$div
 (
__numî
, 
__díom
)

850 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

852 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 #ifde‡
__USE_ISOC99


855 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

856 
__díom
)

857 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

861 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

862 || 
deföed
 
__USE_MISC


869 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

870 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

875 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

876 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

881 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

882 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

885 #ifde‡
__USE_MISC


887 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

888 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

889 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

890 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

894 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

899 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

900 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

901 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

902 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

906 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

907 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

908 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

910 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

911 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

912 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

913 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

919 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

922 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

923 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

926 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

930 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

931 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

934 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

935 
__THROW
;

938 #ifde‡
__USE_MISC


943 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

947 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


954 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

955 *c⁄° *
__ª°ri˘
 
__tokís
,

956 **
__ª°ri˘
 
__vÆuï
)

957 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

961 #ifde‡
__USE_XOPEN


963 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

969 #ifde‡
__USE_XOPEN2KXSI


971 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

974 #ifde‡
__USE_XOPEN_EXTENDED


979 
	$gø¡±
 (
__fd
Ë
__THROW
;

983 
	$u∆ock±
 (
__fd
Ë
__THROW
;

988 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

991 #ifde‡
__USE_GNU


995 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

996 
__THROW
 
	`__n⁄nuŒ
 ((2));

999 
	`gë±
 ();

1002 #ifde‡
__USE_MISC


1006 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1013 
	$ây¶Ÿ
 (Ë
__THROW
;

1016 
	~<bôs/°dlib-Êﬂt.h
>

1019 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1020 
	~<bôs/°dlib.h
>

1022 #ifde‡
__LDBL_COMPAT


1023 
	~<bôs/°dlib-ldbl.h
>

1026 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

119 #unde‡
__USE_ISOC11


120 #unde‡
__USE_ISOC99


121 #unde‡
__USE_ISOC95


122 #unde‡
__USE_ISOCXX11


123 #unde‡
__USE_POSIX


124 #unde‡
__USE_POSIX2


125 #unde‡
__USE_POSIX199309


126 #unde‡
__USE_POSIX199506


127 #unde‡
__USE_XOPEN


128 #unde‡
__USE_XOPEN_EXTENDED


129 #unde‡
__USE_UNIX98


130 #unde‡
__USE_XOPEN2K


131 #unde‡
__USE_XOPEN2KXSI


132 #unde‡
__USE_XOPEN2K8


133 #unde‡
__USE_XOPEN2K8XSI


134 #unde‡
__USE_LARGEFILE


135 #unde‡
__USE_LARGEFILE64


136 #unde‡
__USE_FILE_OFFSET64


137 #unde‡
__USE_MISC


138 #unde‡
__USE_ATFILE


139 #unde‡
__USE_GNU


140 #unde‡
__USE_FORTIFY_LEVEL


141 #unde‡
__KERNEL_STRICT_NAMES


142 #unde‡
__GLIBC_USE_DEPRECATED_GETS


146 #i‚de‡
_LOOSE_KERNEL_NAMES


147 
	#__KERNEL_STRICT_NAMES


	)

157 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


158 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

159 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

161 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

168 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


169 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

170 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

176 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

182 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

183 && !
deföed
 
	g_DEFAULT_SOURCE


185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

190 #ifde‡
_GNU_SOURCE


191 #unde‡
_ISOC95_SOURCE


192 
	#_ISOC95_SOURCE
 1

	)

193 #unde‡
_ISOC99_SOURCE


194 
	#_ISOC99_SOURCE
 1

	)

195 #unde‡
_ISOC11_SOURCE


196 
	#_ISOC11_SOURCE
 1

	)

197 #unde‡
_POSIX_SOURCE


198 
	#_POSIX_SOURCE
 1

	)

199 #unde‡
_POSIX_C_SOURCE


200 
	#_POSIX_C_SOURCE
 200809L

	)

201 #unde‡
_XOPEN_SOURCE


202 
	#_XOPEN_SOURCE
 700

	)

203 #unde‡
_XOPEN_SOURCE_EXTENDED


204 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

205 #unde‡
_LARGEFILE64_SOURCE


206 
	#_LARGEFILE64_SOURCE
 1

	)

207 #unde‡
_DEFAULT_SOURCE


208 
	#_DEFAULT_SOURCE
 1

	)

209 #unde‡
_ATFILE_SOURCE


210 
	#_ATFILE_SOURCE
 1

	)

215 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

216 || (!
deföed
 
	g__STRICT_ANSI__
 \

217 && !
deföed
 
	g_ISOC99_SOURCE
 \

218 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

219 && !
deföed
 
	g_XOPEN_SOURCE
))

220 #unde‡
_DEFAULT_SOURCE


221 
	#_DEFAULT_SOURCE
 1

	)

225 #i‡(
deföed
 
_ISOC11_SOURCE
 \

226 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

227 
	#__USE_ISOC11
 1

	)

231 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

232 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

233 
	#__USE_ISOC99
 1

	)

237 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

238 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

239 
	#__USE_ISOC95
 1

	)

242 #ifde‡
__˝lu•lus


244 #i‡
__˝lu•lus
 >= 201703L

245 
	#__USE_ISOC11
 1

	)

249 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


250 
	#__USE_ISOCXX11
 1

	)

251 
	#__USE_ISOC99
 1

	)

258 #ifde‡
_DEFAULT_SOURCE


259 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


260 
	#__USE_POSIX_IMPLICITLY
 1

	)

262 #unde‡
_POSIX_SOURCE


263 
	#_POSIX_SOURCE
 1

	)

264 #unde‡
_POSIX_C_SOURCE


265 
	#_POSIX_C_SOURCE
 200809L

	)

268 #i‡((!
deföed
 
__STRICT_ANSI__
 \

269 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

270 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

271 
	#_POSIX_SOURCE
 1

	)

272 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

273 
	#_POSIX_C_SOURCE
 2

	)

274 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

275 
	#_POSIX_C_SOURCE
 199506L

	)

276 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

277 
	#_POSIX_C_SOURCE
 200112L

	)

279 
	#_POSIX_C_SOURCE
 200809L

	)

281 
	#__USE_POSIX_IMPLICITLY
 1

	)

290 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

291 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

292 
	#_POSIX_SOURCE
 1

	)

293 #unde‡
_POSIX_C_SOURCE


294 
	#_POSIX_C_SOURCE
 199506L

	)

297 #i‡(
deföed
 
_POSIX_SOURCE
 \

298 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

299 || 
deföed
 
_XOPEN_SOURCE
)

300 
	#__USE_POSIX
 1

	)

303 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


304 
	#__USE_POSIX2
 1

	)

307 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

308 
	#__USE_POSIX199309
 1

	)

311 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

312 
	#__USE_POSIX199506
 1

	)

315 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

316 
	#__USE_XOPEN2K
 1

	)

317 #unde‡
__USE_ISOC95


318 
	#__USE_ISOC95
 1

	)

319 #unde‡
__USE_ISOC99


320 
	#__USE_ISOC99
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

324 
	#__USE_XOPEN2K8
 1

	)

325 #unde‡
_ATFILE_SOURCE


326 
	#_ATFILE_SOURCE
 1

	)

329 #ifdef 
_XOPEN_SOURCE


330 
	#__USE_XOPEN
 1

	)

331 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

332 
	#__USE_XOPEN_EXTENDED
 1

	)

333 
	#__USE_UNIX98
 1

	)

334 #unde‡
_LARGEFILE_SOURCE


335 
	#_LARGEFILE_SOURCE
 1

	)

336 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

337 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

338 
	#__USE_XOPEN2K8
 1

	)

339 
	#__USE_XOPEN2K8XSI
 1

	)

341 
	#__USE_XOPEN2K
 1

	)

342 
	#__USE_XOPEN2KXSI
 1

	)

343 #unde‡
__USE_ISOC95


344 
	#__USE_ISOC95
 1

	)

345 #unde‡
__USE_ISOC99


346 
	#__USE_ISOC99
 1

	)

349 #ifde‡
_XOPEN_SOURCE_EXTENDED


350 
	#__USE_XOPEN_EXTENDED
 1

	)

355 #ifde‡
_LARGEFILE_SOURCE


356 
	#__USE_LARGEFILE
 1

	)

359 #ifde‡
_LARGEFILE64_SOURCE


360 
	#__USE_LARGEFILE64
 1

	)

363 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

364 
	#__USE_FILE_OFFSET64
 1

	)

367 #i‡
deföed
 
_DEFAULT_SOURCE


368 
	#__USE_MISC
 1

	)

371 #ifdef 
_ATFILE_SOURCE


372 
	#__USE_ATFILE
 1

	)

375 #ifdef 
_GNU_SOURCE


376 
	#__USE_GNU
 1

	)

379 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

380 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

381 #i‡
_FORTIFY_SOURCE
 > 1

382 
	#__USE_FORTIFY_LEVEL
 2

	)

384 
	#__USE_FORTIFY_LEVEL
 1

	)

387 
	#__USE_FORTIFY_LEVEL
 0

	)

394 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


395 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

397 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

402 
	~<°dc-¥edef.h
>

410 #unde‡
__GNU_LIBRARY__


411 
	#__GNU_LIBRARY__
 6

	)

415 
	#__GLIBC__
 2

	)

416 
	#__GLIBC_MINOR__
 27

	)

418 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

419 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

422 #i‚de‡
__ASSEMBLER__


423 #i‚de‡
_SYS_CDEFS_H


424 
	~<sys/cdefs.h
>

429 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


430 
	#__USE_LARGEFILE
 1

	)

431 
	#__USE_LARGEFILE64
 1

	)

437 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

438 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

439 && 
deföed
 
	g__exã∫_ölöe


440 
	#__USE_EXTERN_INLINES
 1

	)

448 
	~<gnu/°ubs.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

61 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
176
3161
AMF-UE-NGAP-ID.c
AMFPointer.c
AMFRegionID.c
AMFSetID.c
BIT_STRING.c
BOOLEAN.c
CGI.c
CoreCPID.c
E-UTRA-ARFCN.c
E-UTRA-PCI.c
E-UTRA-TAC.c
E2SM-KPM-ActionDefinition-Format1.c
E2SM-KPM-ActionDefinition-Format2.c
E2SM-KPM-ActionDefinition-Format3.c
E2SM-KPM-ActionDefinition.c
E2SM-KPM-EventTriggerDefinition-Format1.c
E2SM-KPM-EventTriggerDefinition.c
E2SM-KPM-IndicationHeader-Format1.c
E2SM-KPM-IndicationHeader.c
E2SM-KPM-IndicationMessage-Format1.c
E2SM-KPM-IndicationMessage-Format2.c
E2SM-KPM-IndicationMessage.c
E2SM-KPM-RANfunction-Description.c
EN-GNB-ID.c
ENB-ID.c
ENB-UE-X2AP-ID-Extension.c
ENB-UE-X2AP-ID.c
EUTRA-CGI.c
EUTRACellIdentity.c
FiveGS-TAC.c
FiveQI.c
FreqBandNrItem.c
GNB-CU-CP-UE-E1AP-ID.c
GNB-CU-UE-F1AP-ID.c
GNB-CU-UP-ID.c
GNB-DU-ID.c
GNB-ID.c
GUAMI.c
GUMMEI.c
GlobalENB-ID.c
GlobalGNB-ID.c
GlobalNGRANNodeID.c
GlobalNgENB-ID.c
GlobalenGNB-ID.c
GranularityPeriod.c
GroupID.c
INTEGER.c
IndexToRFSP.c
Interface-MessageID.c
InterfaceID-E1.c
InterfaceID-F1.c
InterfaceID-NG.c
InterfaceID-S1.c
InterfaceID-W1.c
InterfaceID-X2.c
InterfaceID-Xn.c
InterfaceIdentifier.c
InterfaceType.c
LabelInfoItem.c
LabelInfoList.c
MME-Code.c
MME-Group-ID.c
MME-UE-S1AP-ID.c
MatchingCondItem.c
MatchingCondList.c
MatchingUEidItem.c
MatchingUEidList.c
MeasurementCondItem.c
MeasurementCondList.c
MeasurementCondUEidItem.c
MeasurementCondUEidList.c
MeasurementData.c
MeasurementDataItem.c
MeasurementInfo-Action-Item.c
MeasurementInfo-Action-List.c
MeasurementInfoItem.c
MeasurementInfoList.c
MeasurementLabel.c
MeasurementRecord.c
MeasurementRecordItem.c
MeasurementType.c
MeasurementTypeID.c
MeasurementTypeName.c
NG-RANnodeUEXnAPID.c
NGENB-CU-UE-W1AP-ID.c
NGENB-DU-ID.c
NR-ARFCN.c
NR-CGI.c
NR-PCI.c
NRCellIdentity.c
NRFrequencyBand-List.c
NRFrequencyBandItem.c
NRFrequencyInfo.c
NRFrequencyShift7p5khz.c
NULL.c
NativeEnumerated.c
NativeInteger.c
NativeReal.c
NgENB-ID.c
OCTET_STRING.c
OPEN_TYPE.c
PLMNIdentity.c
PrintableString.c
QCI.c
QoSID.c
QosFlowIdentifier.c
RANUEID.c
RANfunction-Name.c
REAL.c
RIC-EventTriggerStyle-Item.c
RIC-Format-Type.c
RIC-ReportStyle-Item.c
RIC-Style-Name.c
RIC-Style-Type.c
RRC-MessageID.c
RRCclass-LTE.c
RRCclass-NR.c
S-NSSAI.c
SD.c
SST.c
ServingCell-ARFCN.c
ServingCell-PCI.c
SubscriberProfileIDforRFP.c
SupportedSULBandList.c
SupportedSULFreqBandItem.c
TestCond-Expression.c
TestCond-Type.c
TestCond-Value.c
TestCondInfo.c
TimeStamp.c
UEID-EN-GNB.c
UEID-ENB.c
UEID-GNB-CU-CP-E1AP-ID-Item.c
UEID-GNB-CU-CP-E1AP-ID-List.c
UEID-GNB-CU-CP-F1AP-ID-Item.c
UEID-GNB-CU-F1AP-ID-List.c
UEID-GNB-CU-UP.c
UEID-GNB-DU.c
UEID-GNB.c
UEID-NG-ENB-DU.c
UEID-NG-ENB.c
UEID.c
asn_SEQUENCE_OF.c
asn_SET_OF.c
asn_application.c
asn_bit_data.c
asn_codecs_prim.c
asn_internal.c
asn_random_fill.c
ber_decoder.c
ber_tlv_length.c
ber_tlv_tag.c
constr_CHOICE.c
constr_SEQUENCE.c
constr_SEQUENCE_OF.c
constr_SET_OF.c
constr_TYPE.c
constraints.c
der_encoder.c
oer_decoder.c
oer_encoder.c
oer_support.c
per_decoder.c
per_encoder.c
per_opentype.c
per_support.c
xer_decoder.c
xer_encoder.c
xer_support.c
/usr/include/errno.h
/usr/include/math.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/stdc-predef.h
